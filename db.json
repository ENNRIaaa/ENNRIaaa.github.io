{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/yinwang/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/yinwang/source/css/home.css","path":"css/home.css","modified":0,"renderable":1},{"_id":"themes/yinwang/source/css/bootstrap-theme.min.css","path":"css/bootstrap-theme.min.css","modified":0,"renderable":1},{"_id":"themes/yinwang/source/css/post.css","path":"css/post.css","modified":0,"renderable":1},{"_id":"themes/yinwang/source/js/baidu_analytics.js","path":"js/baidu_analytics.js","modified":0,"renderable":1},{"_id":"themes/yinwang/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/yinwang/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/yinwang/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/yinwang/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"c65d33f3e1c37bf020268492b4b100fac99fa3f3","modified":1587376505690},{"_id":"source/.DS_Store","hash":"4c6718a08472af87bcf49ff01877054d020348b9","modified":1587485492823},{"_id":"themes/yinwang/.DS_Store","hash":"78b7a007a7ce557594f75dd472c22b41c111834e","modified":1587214267239},{"_id":"themes/yinwang/README.md","hash":"a5043e91156e488ec6a90cbca8a7fee100a80337","modified":1573967667000},{"_id":"themes/yinwang/_config.yml","hash":"6fe14d449c466ab99d053709c7056f8f26d57b01","modified":1573967667000},{"_id":"themes/yinwang/favicon.ico","hash":"464948bf71c0cfb2f99dcb5a4e0f54fb3145d4cc","modified":1573967667000},{"_id":"source/_posts/Hexo上传本地源文件到GitHub.md","hash":"ca36b777735018db8a9b4c6b4c1c960b58742e46","modified":1587398651714},{"_id":"source/_posts/GitHub如何配置SSH.md","hash":"964f69d975ad9dab4cc65af6ee848ce162695c75","modified":1587399177487},{"_id":"source/_posts/Java学习之_双色球.md","hash":"de7fe0e036729a71c5bd58b41a99cc9a29cee28d","modified":1587398582224},{"_id":"source/_posts/Java学习笔记.md","hash":"744747e02d129688f984ca988a307bec7622b0e4","modified":1587520393833},{"_id":"source/_posts/.DS_Store","hash":"3d2ad2f26c51e9f833e53fa742a5665c1999dba7","modified":1587484790929},{"_id":"source/_posts/Java学习之_小闹钟.md","hash":"ffef51f416cd2371d146521ad76362e4ceb61063","modified":1587398454137},{"_id":"source/_posts/Java学习之_开发环境的安装.md","hash":"aa950ab7ca5ab26a8b8b7a13e9b912b941a64129","modified":1587484105949},{"_id":"source/_posts/Jave编译运行时报错尝试解决办法.md","hash":"28f7b978d1015149baf89e0ddd0b62431653548c","modified":1587377315568},{"_id":"source/_posts/L2TP:IPSec一键安装脚本.md","hash":"bf906d252474c6c00f23257b1ead3e9b388d0daf","modified":1587376505692},{"_id":"source/_posts/Linux学习之~dpkg命令简述.md","hash":"46b4f14582f3c8fde1503ee6bc42b32dea5f6592","modified":1587484173736},{"_id":"source/_posts/Linux学习之~ubuntu安装jdk及配置环境变量.md","hash":"b01054602dac9c610f46c3c07c3aeba9d546855d","modified":1587484782954},{"_id":"source/_posts/Linux下的Vim使用教程.md","hash":"5eaf6f2393768af06299aa954c0095ffa4614554","modified":1587376505692},{"_id":"source/_posts/Linux的几个有趣命令.md","hash":"d9fd38f413cebf90dc47b7a6f944bcc38023fb00","modified":1587398054446},{"_id":"source/_posts/eclipse自动补全.md","hash":"508a09434a355d0ff6f339cc483b5e7f2fc5606d","modified":1587457855578},{"_id":"source/_posts/github查看分支.md","hash":"6fd0d2b52852b293b51891404d00db3647a234d4","modified":1587376505694},{"_id":"source/_posts/hexo g构建静态文件无法生成index.html等文件.md","hash":"01000c73d826e5586ff1abd191fdba304d17b814","modified":1587479487391},{"_id":"source/_posts/linux eclipse导入windows工程后出现中文乱码解决方法.md","hash":"0c92e3c85a172e198c015cc98e166269282a26e9","modified":1587397723581},{"_id":"source/_posts/与铁蛋儿的“一夜情”.md","hash":"8564317cb919e7eb8e1575ecf0331980656b9aa9","modified":1587400929800},{"_id":"source/_posts/使用Cloudreve搭建私有云盘.md","hash":"7e1502ecd86ec51618af3eb41b5bbc1b399b5fd7","modified":1587477200104},{"_id":"source/_posts/入手日版Nintendo Switch.md","hash":"8b95f9fe03bed90edffb60d126469a10ea8ac88d","modified":1587376505697},{"_id":"source/_posts/在Linux中使配置alias永久生效.md","hash":"69539481f70c53f955cad4b1292b3749ba06a2cf","modified":1587399533542},{"_id":"source/_posts/小白部署HEXO到GitHub.md","hash":"c89596a9331ca15124e693ca432ee014fe848a45","modified":1587479288809},{"_id":"source/_posts/根据转载的一篇文章总结的Java学习方法.md","hash":"bbcac89b4897d8a7e919e9462ba4869631f19fbf","modified":1587397549718},{"_id":"source/_posts/退烧键盘-Niz micro82 45g.md","hash":"7ac2321330a978dd43f819c1c230bed6408cfa57","modified":1587477709730},{"_id":"source/about/index.md","hash":"e4b856738e8a31dfb5c1ad359911177f5fc54e5d","modified":1587376505707},{"_id":"source/pay/index.md","hash":"7eb3cec601dadef26ead8df605ece57975253ea9","modified":1587376505707},{"_id":"source/tags/index.md","hash":"6c0477da9ce2ed58ba43d523b4ec6bccebfe970e","modified":1587376505707},{"_id":"themes/yinwang/layout/index.pug","hash":"84293d492b2eccd7eac2ebe56ce236106c182ded","modified":1573967667000},{"_id":"themes/yinwang/layout/page.pug","hash":"250dab23dceac97c0a9ecfbc98e11b636822898b","modified":1573967667000},{"_id":"themes/yinwang/layout/.DS_Store","hash":"c4b49a266b04fe2e2ea785c99f6dfc2b24be3161","modified":1587214041007},{"_id":"themes/yinwang/layout/post.pug","hash":"d48ad14d7dd1727b38897ac8c1652c2440331688","modified":1573967667000},{"_id":"themes/yinwang/layout/tag.pug","hash":"f67f790a55dc0743bcc9158a257cad5258048d47","modified":1573967667000},{"_id":"themes/yinwang/source/.DS_Store","hash":"585582ff7fe50b44b38743c650bb14ef5090e24e","modified":1587195383747},{"_id":"themes/yinwang/source/favicon.ico","hash":"464948bf71c0cfb2f99dcb5a4e0f54fb3145d4cc","modified":1573967667000},{"_id":"themes/yinwang/layout/includes/layout.pug","hash":"ecda2996bfd74e64fc99c5b337aca8308c479c2e","modified":1573967667000},{"_id":"themes/yinwang/layout/includes/recent-posts.pug","hash":"701a5672b2cdd130d8512406c6d706c9d7d818ee","modified":1573967667000},{"_id":"themes/yinwang/source/css/home.css","hash":"b95e2fe0d93823cad9b2f6778ab77a9611cf0839","modified":1573967667000},{"_id":"themes/yinwang/source/css/bootstrap-theme.min.css","hash":"cb987aba7ffc59bb8bb3af241b2a032affc2094f","modified":1573967667000},{"_id":"themes/yinwang/source/css/post.css","hash":"34b1684cb26bf7a9e092f34f90e277ee6e92cdd1","modified":1573967667000},{"_id":"themes/yinwang/source/js/baidu_analytics.js","hash":"1309af5ff4a0d0121dfea3b896e2f2e54dd0c9d5","modified":1573967667000},{"_id":"themes/yinwang/source/js/bootstrap.min.js","hash":"5814e91bb6276f4de8b7951c965f2f190a03978d","modified":1573967667000},{"_id":"themes/yinwang/source/js/main.js","hash":"db5766248248adce5177a61bd629c700278b1031","modified":1573967667000},{"_id":"themes/yinwang/source/js/jquery.min.js","hash":"b66ed708717bf0b4a005a4d0113af8843ef3b8ff","modified":1573967667000},{"_id":"themes/yinwang/source/css/bootstrap.min.css","hash":"e2d2b846e9ea72a1985458a3748aab4e01a8fb3a","modified":1573967667000},{"_id":"public/search.xml","hash":"ffb5f41d7a7649d1d3318848cc980d10268b418c","modified":1587520423914},{"_id":"public/tags/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1587520423923},{"_id":"public/about/index.html","hash":"7560dd9b98fe7d0a792eefa0cf1dca056e0c4b40","modified":1587520423923},{"_id":"public/pay/index.html","hash":"8b26f851f763d38ecdd24f6de834a8c2f8d2f3a7","modified":1587520423923},{"_id":"public/2020/04/Java学习笔记/index.html","hash":"9e24b9914e01d67bca702701e909d63410026fed","modified":1587520423923},{"_id":"public/2020/04/eclipse自动补全/index.html","hash":"3569f2f27bc7927fb0d2b3349ff584f85f650cb3","modified":1587520423923},{"_id":"public/2020/04/Jave编译运行时报错尝试解决办法/index.html","hash":"8059885d59d31f8265be768aca97ce61735f9bc6","modified":1587520423923},{"_id":"public/2020/04/Hexo上传本地源文件到GitHub/index.html","hash":"551643457cf01a96036890889ef1aaf50c10dada","modified":1587520423923},{"_id":"public/2020/04/Linux下的Vim使用教程/index.html","hash":"f705be3255d2535e1fdd00e37abb395f2850a212","modified":1587520423923},{"_id":"public/2020/03/L2TP:IPSec一键安装脚本/index.html","hash":"5aba7123459c5e4d4c80a9f5224161878f21d57d","modified":1587520423923},{"_id":"public/2020/01/入手日版Nintendo Switch/index.html","hash":"dd48f1bf7b97dab053ca6986990ead76813ae400","modified":1587520423923},{"_id":"public/2020/01/github查看分支/index.html","hash":"021f22428800f865f7e283b303df70b676776611","modified":1587520423923},{"_id":"public/2019/12/退烧键盘-Niz micro82 45g/index.html","hash":"229fffff1592eac3a2fd36e19ea21f343ed11dad","modified":1587520423923},{"_id":"public/2019/09/与铁蛋儿的“一夜情”/index.html","hash":"2ae688820d9b34a2fac854884f6ea1f51086f722","modified":1587520423924},{"_id":"public/2019/09/使用Cloudreve搭建私有云盘/index.html","hash":"2f50f69b787e442b28b4a8d61b479cba918b7a51","modified":1587520423924},{"_id":"public/2018/06/hexo g构建静态文件无法生成index.html等文件/index.html","hash":"8337ec7422ced6a5b49fbfb41e27547f60a96489","modified":1587520423924},{"_id":"public/2018/06/Linux的几个有趣命令/index.html","hash":"3795f46e4ae907eb7aeb09b029d40a9b18941a77","modified":1587520423924},{"_id":"public/2018/06/在Linux中使配置alias永久生效/index.html","hash":"fee332b9f36015c27d8ded07657dbf4e3cab4f49","modified":1587520423924},{"_id":"public/2018/06/GitHub如何配置SSH/index.html","hash":"8978e8820dd5708abf15620c276533afce591cf3","modified":1587520423924},{"_id":"public/2018/06/小白部署HEXO到GitHub/index.html","hash":"580b740d5ba728cfe142c23f9f1bf9c47c121750","modified":1587520423924},{"_id":"public/2018/05/Linux学习之~dpkg命令简述/index.html","hash":"d5d41a766ec18e1546870cb50f459be82ec852cf","modified":1587520423924},{"_id":"public/2018/05/linux eclipse导入windows工程后出现中文乱码解决方法/index.html","hash":"91fa1fc08ebe551e888046ddc1289e7102410648","modified":1587520423924},{"_id":"public/2018/05/Linux学习之~ubuntu安装jdk及配置环境变量/index.html","hash":"87495df7fc7346dd47b29d07e55209b47dbdc1ea","modified":1587520423924},{"_id":"public/2018/04/Java学习之_开发环境的安装/index.html","hash":"de5205417078f62784339649382feadffcbb0044","modified":1587520423924},{"_id":"public/2018/04/Java学习之_双色球/index.html","hash":"6b7e8660535c818edfa78945a79172ef68ab157f","modified":1587520423924},{"_id":"public/2018/04/Java学习之_小闹钟/index.html","hash":"7f9e4a94defe63bb1d42ae5a46654e98c3ba2d15","modified":1587520423925},{"_id":"public/index.html","hash":"f96674e736a22a77d2ee69084164b6ba5be2c603","modified":1587520423925},{"_id":"public/archives/index.html","hash":"6c9846c4811d6c1a2a04e1cebcd088a0fc2624a1","modified":1587520423925},{"_id":"public/archives/2018/index.html","hash":"06e708b1ea947f6415a20abe2b8c107901024e89","modified":1587520423925},{"_id":"public/archives/2018/04/index.html","hash":"a12d595ff4bae9cdffb2184dff2ad61556164005","modified":1587520423925},{"_id":"public/archives/2018/05/index.html","hash":"df5387069411ccf4e6354d22be086a300ac49141","modified":1587520423925},{"_id":"public/archives/2018/06/index.html","hash":"c4f852cc0f85e36628fb5c8b1b05778a3c380ebe","modified":1587520423925},{"_id":"public/archives/2019/index.html","hash":"d0707c67e7dc98fa73563994176e60080f20ed78","modified":1587520423925},{"_id":"public/archives/2019/09/index.html","hash":"99fc0017f404cd9c9b476403e4d29cd4292d7932","modified":1587520423925},{"_id":"public/archives/2019/12/index.html","hash":"55df0579d92b2d6791db40c1a8223b53726ee3ae","modified":1587520423925},{"_id":"public/archives/2020/index.html","hash":"3b7728898d67837039b4da427af52da22833a1e0","modified":1587520423925},{"_id":"public/archives/2020/01/index.html","hash":"b4486348f8100aa3e85cc5e25fb29570ac07043b","modified":1587520423925},{"_id":"public/archives/2020/03/index.html","hash":"b8e2d582b58712915445bd9331bc430ea2e5d2f9","modified":1587520423925},{"_id":"public/archives/2020/04/index.html","hash":"dc2c7b957f8d1067da0cc26d797828169b86757f","modified":1587520423925},{"_id":"public/categories/生活随笔/index.html","hash":"f1616459de21ea835406ce880e1b0f8286aa00a0","modified":1587520423925},{"_id":"public/tags/Linux/index.html","hash":"d5b4849b4379e2eb42d3b967db8d1eac5268dc23","modified":1587520423926},{"_id":"public/2018/06/根据转载的一篇文章总结的Java学习方法/index.html","hash":"20b0e8e0184a9f122e04b66d860c446de4e05938","modified":1587520423926},{"_id":"public/CNAME","hash":"c65d33f3e1c37bf020268492b4b100fac99fa3f3","modified":1587520423927},{"_id":"public/favicon.ico","hash":"464948bf71c0cfb2f99dcb5a4e0f54fb3145d4cc","modified":1587520423929},{"_id":"public/css/home.css","hash":"b95e2fe0d93823cad9b2f6778ab77a9611cf0839","modified":1587520423934},{"_id":"public/css/bootstrap-theme.min.css","hash":"cb987aba7ffc59bb8bb3af241b2a032affc2094f","modified":1587520423934},{"_id":"public/css/post.css","hash":"34b1684cb26bf7a9e092f34f90e277ee6e92cdd1","modified":1587520423934},{"_id":"public/js/baidu_analytics.js","hash":"1309af5ff4a0d0121dfea3b896e2f2e54dd0c9d5","modified":1587520423934},{"_id":"public/js/main.js","hash":"db5766248248adce5177a61bd629c700278b1031","modified":1587520423934},{"_id":"public/js/bootstrap.min.js","hash":"5814e91bb6276f4de8b7951c965f2f190a03978d","modified":1587520423934},{"_id":"public/js/jquery.min.js","hash":"b66ed708717bf0b4a005a4d0113af8843ef3b8ff","modified":1587520423934},{"_id":"public/css/bootstrap.min.css","hash":"e2d2b846e9ea72a1985458a3748aab4e01a8fb3a","modified":1587520423934}],"Category":[{"name":"生活随笔","_id":"ck9aoo6fx000geiudgtcy39v0"}],"Data":[],"Page":[{"_content":"# 关于我\n\n李炎，94年生，在大连从事移动网络优化工作。\n\n明年可能准备回老家了吧，还不知道呢。\n\n附上我的一张照片。\n\n<img src=\"https://images.shiguangping.com/imgs/201911/IMG_52d80c.jpg\" width=50%>  \n\n刚刚看完《肖申克的救赎》，一部比较经典的电影，做人要学会隐忍，人生道路很长，但时不时也要做点儿什么。\n","source":"about/index.md","raw":"# 关于我\n\n李炎，94年生，在大连从事移动网络优化工作。\n\n明年可能准备回老家了吧，还不知道呢。\n\n附上我的一张照片。\n\n<img src=\"https://images.shiguangping.com/imgs/201911/IMG_52d80c.jpg\" width=50%>  \n\n刚刚看完《肖申克的救赎》，一部比较经典的电影，做人要学会隐忍，人生道路很长，但时不时也要做点儿什么。\n","date":"2020-04-20T09:55:05.707Z","updated":"2020-04-20T09:55:05.707Z","path":"about/index.html","title":"","comments":1,"layout":"page","_id":"ck9aoo6fi0001eiudw1oasgvi","content":"<h1 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h1><p>李炎，94年生，在大连从事移动网络优化工作。</p>\n<p>明年可能准备回老家了吧，还不知道呢。</p>\n<p>附上我的一张照片。</p>\n<p><img src=\"https://images.shiguangping.com/imgs/201911/IMG_52d80c.jpg\" width=\"50%\">  </p>\n<p>刚刚看完《肖申克的救赎》，一部比较经典的电影，做人要学会隐忍，人生道路很长，但时不时也要做点儿什么。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h1><p>李炎，94年生，在大连从事移动网络优化工作。</p>\n<p>明年可能准备回老家了吧，还不知道呢。</p>\n<p>附上我的一张照片。</p>\n<p><img src=\"https://images.shiguangping.com/imgs/201911/IMG_52d80c.jpg\" width=\"50%\">  </p>\n<p>刚刚看完《肖申克的救赎》，一部比较经典的电影，做人要学会隐忍，人生道路很长，但时不时也要做点儿什么。</p>\n"},{"_content":"# 博文的自愿付费方式\n\n如果这里的内容对你有帮助，可以为我打赏支持，你可以使用以下方式付款。\n\n\n### 微信\n\n<img src=\"https://images.shiguangping.com/imgs/201911/微信收款.png\" width=35% align=center>\n\n### 赞赏码\n\n<img src=\"https://images.shiguangping.com/imgs/201911/微信赞赏码.png\" width=35% align=center>\n\n### 支付宝\n\n<img src=\"https://images.shiguangping.com/imgs/201911/支付宝收款.jpg\" width=35% align=center>\n","source":"pay/index.md","raw":"# 博文的自愿付费方式\n\n如果这里的内容对你有帮助，可以为我打赏支持，你可以使用以下方式付款。\n\n\n### 微信\n\n<img src=\"https://images.shiguangping.com/imgs/201911/微信收款.png\" width=35% align=center>\n\n### 赞赏码\n\n<img src=\"https://images.shiguangping.com/imgs/201911/微信赞赏码.png\" width=35% align=center>\n\n### 支付宝\n\n<img src=\"https://images.shiguangping.com/imgs/201911/支付宝收款.jpg\" width=35% align=center>\n","date":"2020-04-20T09:55:05.707Z","updated":"2020-04-20T09:55:05.707Z","path":"pay/index.html","title":"","comments":1,"layout":"page","_id":"ck9aoo6fk0003eiudmo649y6p","content":"<h1 id=\"博文的自愿付费方式\"><a href=\"#博文的自愿付费方式\" class=\"headerlink\" title=\"博文的自愿付费方式\"></a>博文的自愿付费方式</h1><p>如果这里的内容对你有帮助，可以为我打赏支持，你可以使用以下方式付款。</p>\n<h3 id=\"微信\"><a href=\"#微信\" class=\"headerlink\" title=\"微信\"></a>微信</h3><p><img src=\"https://images.shiguangping.com/imgs/201911/微信收款.png\" width=\"35%\" align=\"center\"></p>\n<h3 id=\"赞赏码\"><a href=\"#赞赏码\" class=\"headerlink\" title=\"赞赏码\"></a>赞赏码</h3><p><img src=\"https://images.shiguangping.com/imgs/201911/微信赞赏码.png\" width=\"35%\" align=\"center\"></p>\n<h3 id=\"支付宝\"><a href=\"#支付宝\" class=\"headerlink\" title=\"支付宝\"></a>支付宝</h3><p><img src=\"https://images.shiguangping.com/imgs/201911/支付宝收款.jpg\" width=\"35%\" align=\"center\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"博文的自愿付费方式\"><a href=\"#博文的自愿付费方式\" class=\"headerlink\" title=\"博文的自愿付费方式\"></a>博文的自愿付费方式</h1><p>如果这里的内容对你有帮助，可以为我打赏支持，你可以使用以下方式付款。</p>\n<h3 id=\"微信\"><a href=\"#微信\" class=\"headerlink\" title=\"微信\"></a>微信</h3><p><img src=\"https://images.shiguangping.com/imgs/201911/微信收款.png\" width=\"35%\" align=\"center\"></p>\n<h3 id=\"赞赏码\"><a href=\"#赞赏码\" class=\"headerlink\" title=\"赞赏码\"></a>赞赏码</h3><p><img src=\"https://images.shiguangping.com/imgs/201911/微信赞赏码.png\" width=\"35%\" align=\"center\"></p>\n<h3 id=\"支付宝\"><a href=\"#支付宝\" class=\"headerlink\" title=\"支付宝\"></a>支付宝</h3><p><img src=\"https://images.shiguangping.com/imgs/201911/支付宝收款.jpg\" width=\"35%\" align=\"center\"></p>\n"},{"title":"Tags","layout":"tag.pug","_content":"","source":"tags/index.md","raw":"---\ntitle: Tags\nlayout: tag.pug\n---\n","date":"2020-04-20T09:55:05.707Z","updated":"2020-04-20T09:55:05.707Z","path":"tags/index.html","comments":1,"_id":"ck9aoo6fm0005eiudu26amgxz","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"GitHub如何配置SSH","date":"2018-06-12T08:16:26.000Z","toc":true,"_content":"## 一、生成SSH Key\n\n在Git Bash终端输入命令：\n```shell\nssh-keygen -t rsa -C \"china_liyan123@yahoo.co.jp\"\n```\n\n*此处邮箱替换为自己的邮箱地址。*\n\n此时终端提示：\n\n>Generating public/private rsa key pair. \n>Enter file in which to save the key (/c/Users/shado/.ssh/id_rsa): \n\n终端会让你选择存放SSH的路径，括号内的是默认路径。\n\n直接回车选择默认路径，终端提示输入SSH密码，需要输入两次，此时输入的密码不会显示在终端上，敲完接回车即可。  \n\n>Your identification has been saved in /c/Users/shado/.ssh/id_rsa. \n>Your public key has been saved in /c/Users/shado/.ssh/id_rsa.pub.\n\n之后终端提示密钥已经生成，在刚才选择的默认路径中，其中`id_rsa`是私有密钥，`id_rsa.pub`是公共密钥。  \n\n## 二、在GitHub中添加密钥\n\n登陆GitHub，在页面右上角头像选择下拉菜单中`Setting`，在设置页面`SSH and GPG keys`标签页，在这个标签页下添加SSH。\n\n点击页面右上角`New SSH key`按钮，添加SSH密钥。\n\n打开保存SSH的默认路径，打开`id_rsa.pub`*（用任意文本编辑器打开即可）*，复制里面的内容，粘贴到`New SSH key`的key里面，Title自定义即可，之后点击Add。\n\n回到终端窗口，敲入命令：\n\n```shell\nssh -T git@github.com\n```\n\n此时终端提示：  \n>Enter passphrase for key '/c/Users/shado/.ssh/id_rsa':  \n\n输入之前设置的密码，输入时密码不会显示在终端上。\n\n密码输入正确后，终端会提示：  \n\n>Hi ENNRIaaa! You've successfully authenticated, but GitHub does not provide shell access.\n\n说明SSH密钥已经配置成功。\n","source":"_posts/GitHub如何配置SSH.md","raw":"title: GitHub如何配置SSH\ndate: 2018-06-12 16:16:26\ntoc: true\n\n---\n## 一、生成SSH Key\n\n在Git Bash终端输入命令：\n```shell\nssh-keygen -t rsa -C \"china_liyan123@yahoo.co.jp\"\n```\n\n*此处邮箱替换为自己的邮箱地址。*\n\n此时终端提示：\n\n>Generating public/private rsa key pair. \n>Enter file in which to save the key (/c/Users/shado/.ssh/id_rsa): \n\n终端会让你选择存放SSH的路径，括号内的是默认路径。\n\n直接回车选择默认路径，终端提示输入SSH密码，需要输入两次，此时输入的密码不会显示在终端上，敲完接回车即可。  \n\n>Your identification has been saved in /c/Users/shado/.ssh/id_rsa. \n>Your public key has been saved in /c/Users/shado/.ssh/id_rsa.pub.\n\n之后终端提示密钥已经生成，在刚才选择的默认路径中，其中`id_rsa`是私有密钥，`id_rsa.pub`是公共密钥。  \n\n## 二、在GitHub中添加密钥\n\n登陆GitHub，在页面右上角头像选择下拉菜单中`Setting`，在设置页面`SSH and GPG keys`标签页，在这个标签页下添加SSH。\n\n点击页面右上角`New SSH key`按钮，添加SSH密钥。\n\n打开保存SSH的默认路径，打开`id_rsa.pub`*（用任意文本编辑器打开即可）*，复制里面的内容，粘贴到`New SSH key`的key里面，Title自定义即可，之后点击Add。\n\n回到终端窗口，敲入命令：\n\n```shell\nssh -T git@github.com\n```\n\n此时终端提示：  \n>Enter passphrase for key '/c/Users/shado/.ssh/id_rsa':  \n\n输入之前设置的密码，输入时密码不会显示在终端上。\n\n密码输入正确后，终端会提示：  \n\n>Hi ENNRIaaa! You've successfully authenticated, but GitHub does not provide shell access.\n\n说明SSH密钥已经配置成功。\n","slug":"GitHub如何配置SSH","published":1,"updated":"2020-04-20T16:12:57.487Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6ff0000eiud621xw1ln","content":"<h2 id=\"一、生成SSH-Key\"><a href=\"#一、生成SSH-Key\" class=\"headerlink\" title=\"一、生成SSH Key\"></a>一、生成SSH Key</h2><p>在Git Bash终端输入命令：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C \"china_liyan123@yahoo.co.jp\"</span><br></pre></td></tr></table></figure></p>\n<p><em>此处邮箱替换为自己的邮箱地址。</em></p>\n<p>此时终端提示：</p>\n<blockquote>\n<p>Generating public/private rsa key pair.<br>Enter file in which to save the key (/c/Users/shado/.ssh/id_rsa): </p>\n</blockquote>\n<p>终端会让你选择存放SSH的路径，括号内的是默认路径。</p>\n<p>直接回车选择默认路径，终端提示输入SSH密码，需要输入两次，此时输入的密码不会显示在终端上，敲完接回车即可。  </p>\n<blockquote>\n<p>Your identification has been saved in /c/Users/shado/.ssh/id_rsa.<br>Your public key has been saved in /c/Users/shado/.ssh/id_rsa.pub.</p>\n</blockquote>\n<p>之后终端提示密钥已经生成，在刚才选择的默认路径中，其中<code>id_rsa</code>是私有密钥，<code>id_rsa.pub</code>是公共密钥。  </p>\n<h2 id=\"二、在GitHub中添加密钥\"><a href=\"#二、在GitHub中添加密钥\" class=\"headerlink\" title=\"二、在GitHub中添加密钥\"></a>二、在GitHub中添加密钥</h2><p>登陆GitHub，在页面右上角头像选择下拉菜单中<code>Setting</code>，在设置页面<code>SSH and GPG keys</code>标签页，在这个标签页下添加SSH。</p>\n<p>点击页面右上角<code>New SSH key</code>按钮，添加SSH密钥。</p>\n<p>打开保存SSH的默认路径，打开<code>id_rsa.pub</code><em>（用任意文本编辑器打开即可）</em>，复制里面的内容，粘贴到<code>New SSH key</code>的key里面，Title自定义即可，之后点击Add。</p>\n<p>回到终端窗口，敲入命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>此时终端提示：  </p>\n<blockquote>\n<p>Enter passphrase for key ‘/c/Users/shado/.ssh/id_rsa’:  </p>\n</blockquote>\n<p>输入之前设置的密码，输入时密码不会显示在终端上。</p>\n<p>密码输入正确后，终端会提示：  </p>\n<blockquote>\n<p>Hi ENNRIaaa! You’ve successfully authenticated, but GitHub does not provide shell access.</p>\n</blockquote>\n<p>说明SSH密钥已经配置成功。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一、生成SSH-Key\"><a href=\"#一、生成SSH-Key\" class=\"headerlink\" title=\"一、生成SSH Key\"></a>一、生成SSH Key</h2><p>在Git Bash终端输入命令：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C \"china_liyan123@yahoo.co.jp\"</span><br></pre></td></tr></table></figure></p>\n<p><em>此处邮箱替换为自己的邮箱地址。</em></p>\n<p>此时终端提示：</p>\n<blockquote>\n<p>Generating public/private rsa key pair.<br>Enter file in which to save the key (/c/Users/shado/.ssh/id_rsa): </p>\n</blockquote>\n<p>终端会让你选择存放SSH的路径，括号内的是默认路径。</p>\n<p>直接回车选择默认路径，终端提示输入SSH密码，需要输入两次，此时输入的密码不会显示在终端上，敲完接回车即可。  </p>\n<blockquote>\n<p>Your identification has been saved in /c/Users/shado/.ssh/id_rsa.<br>Your public key has been saved in /c/Users/shado/.ssh/id_rsa.pub.</p>\n</blockquote>\n<p>之后终端提示密钥已经生成，在刚才选择的默认路径中，其中<code>id_rsa</code>是私有密钥，<code>id_rsa.pub</code>是公共密钥。  </p>\n<h2 id=\"二、在GitHub中添加密钥\"><a href=\"#二、在GitHub中添加密钥\" class=\"headerlink\" title=\"二、在GitHub中添加密钥\"></a>二、在GitHub中添加密钥</h2><p>登陆GitHub，在页面右上角头像选择下拉菜单中<code>Setting</code>，在设置页面<code>SSH and GPG keys</code>标签页，在这个标签页下添加SSH。</p>\n<p>点击页面右上角<code>New SSH key</code>按钮，添加SSH密钥。</p>\n<p>打开保存SSH的默认路径，打开<code>id_rsa.pub</code><em>（用任意文本编辑器打开即可）</em>，复制里面的内容，粘贴到<code>New SSH key</code>的key里面，Title自定义即可，之后点击Add。</p>\n<p>回到终端窗口，敲入命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>此时终端提示：  </p>\n<blockquote>\n<p>Enter passphrase for key ‘/c/Users/shado/.ssh/id_rsa’:  </p>\n</blockquote>\n<p>输入之前设置的密码，输入时密码不会显示在终端上。</p>\n<p>密码输入正确后，终端会提示：  </p>\n<blockquote>\n<p>Hi ENNRIaaa! You’ve successfully authenticated, but GitHub does not provide shell access.</p>\n</blockquote>\n<p>说明SSH密钥已经配置成功。</p>\n"},{"title":"Hexo上传本地源文件到GitHub","date":"2020-04-15T13:23:00.000Z","toc":true,"_content":"# 前言(可忽略不看) #\n这个问题是在我部署完HEXO博客之后就想到的，我要是换了一台电脑或者重新装系统之后，还怎么更新HEXO博客呢？\n\n我今天在网上开始寻找解决办法，上网一看才知道这是很多人很早以前就面临的问题，当然有很多大神做了解答，但是绝大多数的回答我都是看不懂的。大多数的办法是在同一个GitHub仓库创建两个分支，一个用来存放HEXO上传的静态页面，一个用来保存HEXO的本地源文件。但是对于我这个小白来说，仓库一词我都是最近才知道的，更别提分支了。还有一大堆的命令，我也看不懂所以然。\n\n最后，我还是用了这个办法，在原有的仓库基础上再创建一个分支，用来保存本地的源文件。（网上主要的还是这个办法）\n\n我试着把我的操作流程写下来，可能其中会有遗漏或者小错误，遇到问题只能自己解决了。因为我也是凭借自己理解操作的。\n\n\n# 我为什么要把源文件上传到GitHub呢？ #\n因为我今天在电脑上安装了Linux，所以以后敲字都要靠Linux了。  \n\n# 一.本地源文件上传到GitHub： #\n## 1.提前准备 ##\n首先，不论是在另一台电脑上还是重新安装了系统，都要安装好Node.js和Git，还有HEXO，它们的安装方式具体参考HEXO的[说明文档](https://hexo.io/zh-cn/docs/)。  \n## 2.操作流程 ##\n1.登录到GitHub，打开HEXO所在的仓库，在博客所在的repository新建一个分支**hexo**，在仓库Setting下的Branches中，设置**hexo**为默认分支。\n2.克隆repository到本地，命令如下：  \n\n```shell\ngit@github.com:ENNRIaaa/shiguangping-blog.git\n```\n\n注：克隆的文件夹保存在哪取决于你所在的位置，可通过pwd命令查看你当前所在位置。\n3.克隆好之后，打开本地的文件夹，默认的文件夹名字就是repository的名字，把文件夹内除了**.git**文件夹之外的所有文件全部删除。注意：**.git**是隐藏文件夹。\n4.之后把原电脑上的HEXO文件全部复制到这个文件夹下。\n5.复制完之后里面应该有一个名为**.gitignore**文件，如果没有的话通过终端命令创建：\n\n```shell\ntouch .gitignore\n```\n\n正常**.gitignore**的内容是：\n\n- .DS_Store\n\n- Thumbs.db\n- db.json\n- *.log\n- node_modules/\n- public/\n- .deploy*/\n\n6.切换到**hexo**分支上，命令如下：\n\n```shell\ngit checkout -b hexo\n```\n\n7.提交复制过来的文件到**暂存区**，命令如下：\n\n```shell\ngit add --all\n```\n\n*注意：all前面是两个\"-\"*\n\n8.提交，命令如下：\n\n```shell\ngit commit -m \"新建分支资源文件\"\n```\n\n*引号内的内容自定义，就是一个备注。*\n9.推送分支到GitHub上，命令如下：\n\n```shell\ngit push --set-upstream origin hexo\n```\n\n*注意：set前面是两个\"-\"*\n推送成功之后，到GitHub仓库刷新一下，看看**hexo**分支下是否已经成功上传了本地的源文件。\n到这里，本地的源文件已经上传到GitHub上，HEXO本地源文件直接使用`git push`命令就可以了，HEXO发博客的操作跟以前一样，还是这三步：`hexo c`、`hexo g`、`hexo d -g`。  \n\n*注：期间终端可能会提示需要输入一下密码啊，或者提示让你输入邮箱和用户名等，只需根据提示输入即可。\n在安装完Git和node.js之后，我就把SSH密钥配置完了。设置GitHub的SSH密钥，可参考[GitHub如何配置SSH](https://sora.red/2018/GitHub%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AESSH/)。*  \n\n# 二.如果今后换电脑该如何操作 #\n本地源文件保存到GitHub之后，今后在其他电脑上或者重装系统后，先把`Git`、`Node.js`、`HEXO`这些基本的都安装好,（*注意：**Hexo**安装好之后不要执行`hexo init`初始化命令*），再把GitHub上保存HEXO源文件的**hexo**分支克隆到本地即可。\n克隆分支的命令：\n\n```shell\ngit clone -b hexo git@github.com:ENNRIaaa/shiguangping-blog.git\n```\n\n`-b`后面的是分支的名称，后面替换自己仓库的链接。\n\n# 结尾 #\n今天主要提供帮助的是CSDN博主LeonWuV,如果我的文章有一些地方看不懂，或者有错误，可参考[此博主的文章](https://blog.csdn.net/wxl1555/article/details/79293159)。\n本文写了一个多小时，终于结束了。虽然很墨迹，但是很快乐。\n\n\n\n***创作时间：2018-06-13 01:34:21***\n\n***更新时间：2020-04-15 21:23***\n","source":"_posts/Hexo上传本地源文件到GitHub.md","raw":"title: Hexo上传本地源文件到GitHub\ndate: 2020-04-15 21:23\ntoc: true\n\n---\n# 前言(可忽略不看) #\n这个问题是在我部署完HEXO博客之后就想到的，我要是换了一台电脑或者重新装系统之后，还怎么更新HEXO博客呢？\n\n我今天在网上开始寻找解决办法，上网一看才知道这是很多人很早以前就面临的问题，当然有很多大神做了解答，但是绝大多数的回答我都是看不懂的。大多数的办法是在同一个GitHub仓库创建两个分支，一个用来存放HEXO上传的静态页面，一个用来保存HEXO的本地源文件。但是对于我这个小白来说，仓库一词我都是最近才知道的，更别提分支了。还有一大堆的命令，我也看不懂所以然。\n\n最后，我还是用了这个办法，在原有的仓库基础上再创建一个分支，用来保存本地的源文件。（网上主要的还是这个办法）\n\n我试着把我的操作流程写下来，可能其中会有遗漏或者小错误，遇到问题只能自己解决了。因为我也是凭借自己理解操作的。\n\n\n# 我为什么要把源文件上传到GitHub呢？ #\n因为我今天在电脑上安装了Linux，所以以后敲字都要靠Linux了。  \n\n# 一.本地源文件上传到GitHub： #\n## 1.提前准备 ##\n首先，不论是在另一台电脑上还是重新安装了系统，都要安装好Node.js和Git，还有HEXO，它们的安装方式具体参考HEXO的[说明文档](https://hexo.io/zh-cn/docs/)。  \n## 2.操作流程 ##\n1.登录到GitHub，打开HEXO所在的仓库，在博客所在的repository新建一个分支**hexo**，在仓库Setting下的Branches中，设置**hexo**为默认分支。\n2.克隆repository到本地，命令如下：  \n\n```shell\ngit@github.com:ENNRIaaa/shiguangping-blog.git\n```\n\n注：克隆的文件夹保存在哪取决于你所在的位置，可通过pwd命令查看你当前所在位置。\n3.克隆好之后，打开本地的文件夹，默认的文件夹名字就是repository的名字，把文件夹内除了**.git**文件夹之外的所有文件全部删除。注意：**.git**是隐藏文件夹。\n4.之后把原电脑上的HEXO文件全部复制到这个文件夹下。\n5.复制完之后里面应该有一个名为**.gitignore**文件，如果没有的话通过终端命令创建：\n\n```shell\ntouch .gitignore\n```\n\n正常**.gitignore**的内容是：\n\n- .DS_Store\n\n- Thumbs.db\n- db.json\n- *.log\n- node_modules/\n- public/\n- .deploy*/\n\n6.切换到**hexo**分支上，命令如下：\n\n```shell\ngit checkout -b hexo\n```\n\n7.提交复制过来的文件到**暂存区**，命令如下：\n\n```shell\ngit add --all\n```\n\n*注意：all前面是两个\"-\"*\n\n8.提交，命令如下：\n\n```shell\ngit commit -m \"新建分支资源文件\"\n```\n\n*引号内的内容自定义，就是一个备注。*\n9.推送分支到GitHub上，命令如下：\n\n```shell\ngit push --set-upstream origin hexo\n```\n\n*注意：set前面是两个\"-\"*\n推送成功之后，到GitHub仓库刷新一下，看看**hexo**分支下是否已经成功上传了本地的源文件。\n到这里，本地的源文件已经上传到GitHub上，HEXO本地源文件直接使用`git push`命令就可以了，HEXO发博客的操作跟以前一样，还是这三步：`hexo c`、`hexo g`、`hexo d -g`。  \n\n*注：期间终端可能会提示需要输入一下密码啊，或者提示让你输入邮箱和用户名等，只需根据提示输入即可。\n在安装完Git和node.js之后，我就把SSH密钥配置完了。设置GitHub的SSH密钥，可参考[GitHub如何配置SSH](https://sora.red/2018/GitHub%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AESSH/)。*  \n\n# 二.如果今后换电脑该如何操作 #\n本地源文件保存到GitHub之后，今后在其他电脑上或者重装系统后，先把`Git`、`Node.js`、`HEXO`这些基本的都安装好,（*注意：**Hexo**安装好之后不要执行`hexo init`初始化命令*），再把GitHub上保存HEXO源文件的**hexo**分支克隆到本地即可。\n克隆分支的命令：\n\n```shell\ngit clone -b hexo git@github.com:ENNRIaaa/shiguangping-blog.git\n```\n\n`-b`后面的是分支的名称，后面替换自己仓库的链接。\n\n# 结尾 #\n今天主要提供帮助的是CSDN博主LeonWuV,如果我的文章有一些地方看不懂，或者有错误，可参考[此博主的文章](https://blog.csdn.net/wxl1555/article/details/79293159)。\n本文写了一个多小时，终于结束了。虽然很墨迹，但是很快乐。\n\n\n\n***创作时间：2018-06-13 01:34:21***\n\n***更新时间：2020-04-15 21:23***\n","slug":"Hexo上传本地源文件到GitHub","published":1,"updated":"2020-04-20T16:04:11.714Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6fj0002eiudjko9fwji","content":"<h1 id=\"前言-可忽略不看\"><a href=\"#前言-可忽略不看\" class=\"headerlink\" title=\"前言(可忽略不看)\"></a>前言(可忽略不看)</h1><p>这个问题是在我部署完HEXO博客之后就想到的，我要是换了一台电脑或者重新装系统之后，还怎么更新HEXO博客呢？</p>\n<p>我今天在网上开始寻找解决办法，上网一看才知道这是很多人很早以前就面临的问题，当然有很多大神做了解答，但是绝大多数的回答我都是看不懂的。大多数的办法是在同一个GitHub仓库创建两个分支，一个用来存放HEXO上传的静态页面，一个用来保存HEXO的本地源文件。但是对于我这个小白来说，仓库一词我都是最近才知道的，更别提分支了。还有一大堆的命令，我也看不懂所以然。</p>\n<p>最后，我还是用了这个办法，在原有的仓库基础上再创建一个分支，用来保存本地的源文件。（网上主要的还是这个办法）</p>\n<p>我试着把我的操作流程写下来，可能其中会有遗漏或者小错误，遇到问题只能自己解决了。因为我也是凭借自己理解操作的。</p>\n<h1 id=\"我为什么要把源文件上传到GitHub呢？\"><a href=\"#我为什么要把源文件上传到GitHub呢？\" class=\"headerlink\" title=\"我为什么要把源文件上传到GitHub呢？\"></a>我为什么要把源文件上传到GitHub呢？</h1><p>因为我今天在电脑上安装了Linux，所以以后敲字都要靠Linux了。  </p>\n<h1 id=\"一-本地源文件上传到GitHub：\"><a href=\"#一-本地源文件上传到GitHub：\" class=\"headerlink\" title=\"一.本地源文件上传到GitHub：\"></a>一.本地源文件上传到GitHub：</h1><h2 id=\"1-提前准备\"><a href=\"#1-提前准备\" class=\"headerlink\" title=\"1.提前准备\"></a>1.提前准备</h2><p>首先，不论是在另一台电脑上还是重新安装了系统，都要安装好Node.js和Git，还有HEXO，它们的安装方式具体参考HEXO的<a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">说明文档</a>。  </p>\n<h2 id=\"2-操作流程\"><a href=\"#2-操作流程\" class=\"headerlink\" title=\"2.操作流程\"></a>2.操作流程</h2><p>1.登录到GitHub，打开HEXO所在的仓库，在博客所在的repository新建一个分支<strong>hexo</strong>，在仓库Setting下的Branches中，设置<strong>hexo</strong>为默认分支。<br>2.克隆repository到本地，命令如下：  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git@github.com:ENNRIaaa/shiguangping-blog.git</span><br></pre></td></tr></table></figure>\n<p>注：克隆的文件夹保存在哪取决于你所在的位置，可通过pwd命令查看你当前所在位置。<br>3.克隆好之后，打开本地的文件夹，默认的文件夹名字就是repository的名字，把文件夹内除了<strong>.git</strong>文件夹之外的所有文件全部删除。注意：<strong>.git</strong>是隐藏文件夹。<br>4.之后把原电脑上的HEXO文件全部复制到这个文件夹下。<br>5.复制完之后里面应该有一个名为<strong>.gitignore</strong>文件，如果没有的话通过终端命令创建：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch .gitignore</span><br></pre></td></tr></table></figure>\n<p>正常<strong>.gitignore</strong>的内容是：</p>\n<ul>\n<li><p>.DS_Store</p>\n</li>\n<li><p>Thumbs.db</p>\n</li>\n<li>db.json</li>\n<li>*.log</li>\n<li>node_modules/</li>\n<li>public/</li>\n<li>.deploy*/</li>\n</ul>\n<p>6.切换到<strong>hexo</strong>分支上，命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b hexo</span><br></pre></td></tr></table></figure>\n<p>7.提交复制过来的文件到<strong>暂存区</strong>，命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add --all</span><br></pre></td></tr></table></figure>\n<p><em>注意：all前面是两个”-“</em></p>\n<p>8.提交，命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m \"新建分支资源文件\"</span><br></pre></td></tr></table></figure>\n<p><em>引号内的内容自定义，就是一个备注。</em><br>9.推送分支到GitHub上，命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push --set-upstream origin hexo</span><br></pre></td></tr></table></figure>\n<p><em>注意：set前面是两个”-“</em><br>推送成功之后，到GitHub仓库刷新一下，看看<strong>hexo</strong>分支下是否已经成功上传了本地的源文件。<br>到这里，本地的源文件已经上传到GitHub上，HEXO本地源文件直接使用<code>git push</code>命令就可以了，HEXO发博客的操作跟以前一样，还是这三步：<code>hexo c</code>、<code>hexo g</code>、<code>hexo d -g</code>。  </p>\n<p><em>注：期间终端可能会提示需要输入一下密码啊，或者提示让你输入邮箱和用户名等，只需根据提示输入即可。<br>在安装完Git和node.js之后，我就把SSH密钥配置完了。设置GitHub的SSH密钥，可参考<a href=\"https://sora.red/2018/GitHub%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AESSH/\" target=\"_blank\" rel=\"noopener\">GitHub如何配置SSH</a>。</em>  </p>\n<h1 id=\"二-如果今后换电脑该如何操作\"><a href=\"#二-如果今后换电脑该如何操作\" class=\"headerlink\" title=\"二.如果今后换电脑该如何操作\"></a>二.如果今后换电脑该如何操作</h1><p>本地源文件保存到GitHub之后，今后在其他电脑上或者重装系统后，先把<code>Git</code>、<code>Node.js</code>、<code>HEXO</code>这些基本的都安装好,（<em>注意：<strong>Hexo</strong>安装好之后不要执行<code>hexo init</code>初始化命令</em>），再把GitHub上保存HEXO源文件的<strong>hexo</strong>分支克隆到本地即可。<br>克隆分支的命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone -b hexo git@github.com:ENNRIaaa/shiguangping-blog.git</span><br></pre></td></tr></table></figure>\n<p><code>-b</code>后面的是分支的名称，后面替换自己仓库的链接。</p>\n<h1 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h1><p>今天主要提供帮助的是CSDN博主LeonWuV,如果我的文章有一些地方看不懂，或者有错误，可参考<a href=\"https://blog.csdn.net/wxl1555/article/details/79293159\" target=\"_blank\" rel=\"noopener\">此博主的文章</a>。<br>本文写了一个多小时，终于结束了。虽然很墨迹，但是很快乐。</p>\n<p><strong><em>创作时间：2018-06-13 01:34:21</em></strong></p>\n<p><strong><em>更新时间：2020-04-15 21:23</em></strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言-可忽略不看\"><a href=\"#前言-可忽略不看\" class=\"headerlink\" title=\"前言(可忽略不看)\"></a>前言(可忽略不看)</h1><p>这个问题是在我部署完HEXO博客之后就想到的，我要是换了一台电脑或者重新装系统之后，还怎么更新HEXO博客呢？</p>\n<p>我今天在网上开始寻找解决办法，上网一看才知道这是很多人很早以前就面临的问题，当然有很多大神做了解答，但是绝大多数的回答我都是看不懂的。大多数的办法是在同一个GitHub仓库创建两个分支，一个用来存放HEXO上传的静态页面，一个用来保存HEXO的本地源文件。但是对于我这个小白来说，仓库一词我都是最近才知道的，更别提分支了。还有一大堆的命令，我也看不懂所以然。</p>\n<p>最后，我还是用了这个办法，在原有的仓库基础上再创建一个分支，用来保存本地的源文件。（网上主要的还是这个办法）</p>\n<p>我试着把我的操作流程写下来，可能其中会有遗漏或者小错误，遇到问题只能自己解决了。因为我也是凭借自己理解操作的。</p>\n<h1 id=\"我为什么要把源文件上传到GitHub呢？\"><a href=\"#我为什么要把源文件上传到GitHub呢？\" class=\"headerlink\" title=\"我为什么要把源文件上传到GitHub呢？\"></a>我为什么要把源文件上传到GitHub呢？</h1><p>因为我今天在电脑上安装了Linux，所以以后敲字都要靠Linux了。  </p>\n<h1 id=\"一-本地源文件上传到GitHub：\"><a href=\"#一-本地源文件上传到GitHub：\" class=\"headerlink\" title=\"一.本地源文件上传到GitHub：\"></a>一.本地源文件上传到GitHub：</h1><h2 id=\"1-提前准备\"><a href=\"#1-提前准备\" class=\"headerlink\" title=\"1.提前准备\"></a>1.提前准备</h2><p>首先，不论是在另一台电脑上还是重新安装了系统，都要安装好Node.js和Git，还有HEXO，它们的安装方式具体参考HEXO的<a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">说明文档</a>。  </p>\n<h2 id=\"2-操作流程\"><a href=\"#2-操作流程\" class=\"headerlink\" title=\"2.操作流程\"></a>2.操作流程</h2><p>1.登录到GitHub，打开HEXO所在的仓库，在博客所在的repository新建一个分支<strong>hexo</strong>，在仓库Setting下的Branches中，设置<strong>hexo</strong>为默认分支。<br>2.克隆repository到本地，命令如下：  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git@github.com:ENNRIaaa/shiguangping-blog.git</span><br></pre></td></tr></table></figure>\n<p>注：克隆的文件夹保存在哪取决于你所在的位置，可通过pwd命令查看你当前所在位置。<br>3.克隆好之后，打开本地的文件夹，默认的文件夹名字就是repository的名字，把文件夹内除了<strong>.git</strong>文件夹之外的所有文件全部删除。注意：<strong>.git</strong>是隐藏文件夹。<br>4.之后把原电脑上的HEXO文件全部复制到这个文件夹下。<br>5.复制完之后里面应该有一个名为<strong>.gitignore</strong>文件，如果没有的话通过终端命令创建：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch .gitignore</span><br></pre></td></tr></table></figure>\n<p>正常<strong>.gitignore</strong>的内容是：</p>\n<ul>\n<li><p>.DS_Store</p>\n</li>\n<li><p>Thumbs.db</p>\n</li>\n<li>db.json</li>\n<li>*.log</li>\n<li>node_modules/</li>\n<li>public/</li>\n<li>.deploy*/</li>\n</ul>\n<p>6.切换到<strong>hexo</strong>分支上，命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b hexo</span><br></pre></td></tr></table></figure>\n<p>7.提交复制过来的文件到<strong>暂存区</strong>，命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add --all</span><br></pre></td></tr></table></figure>\n<p><em>注意：all前面是两个”-“</em></p>\n<p>8.提交，命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m \"新建分支资源文件\"</span><br></pre></td></tr></table></figure>\n<p><em>引号内的内容自定义，就是一个备注。</em><br>9.推送分支到GitHub上，命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push --set-upstream origin hexo</span><br></pre></td></tr></table></figure>\n<p><em>注意：set前面是两个”-“</em><br>推送成功之后，到GitHub仓库刷新一下，看看<strong>hexo</strong>分支下是否已经成功上传了本地的源文件。<br>到这里，本地的源文件已经上传到GitHub上，HEXO本地源文件直接使用<code>git push</code>命令就可以了，HEXO发博客的操作跟以前一样，还是这三步：<code>hexo c</code>、<code>hexo g</code>、<code>hexo d -g</code>。  </p>\n<p><em>注：期间终端可能会提示需要输入一下密码啊，或者提示让你输入邮箱和用户名等，只需根据提示输入即可。<br>在安装完Git和node.js之后，我就把SSH密钥配置完了。设置GitHub的SSH密钥，可参考<a href=\"https://sora.red/2018/GitHub%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AESSH/\" target=\"_blank\" rel=\"noopener\">GitHub如何配置SSH</a>。</em>  </p>\n<h1 id=\"二-如果今后换电脑该如何操作\"><a href=\"#二-如果今后换电脑该如何操作\" class=\"headerlink\" title=\"二.如果今后换电脑该如何操作\"></a>二.如果今后换电脑该如何操作</h1><p>本地源文件保存到GitHub之后，今后在其他电脑上或者重装系统后，先把<code>Git</code>、<code>Node.js</code>、<code>HEXO</code>这些基本的都安装好,（<em>注意：<strong>Hexo</strong>安装好之后不要执行<code>hexo init</code>初始化命令</em>），再把GitHub上保存HEXO源文件的<strong>hexo</strong>分支克隆到本地即可。<br>克隆分支的命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone -b hexo git@github.com:ENNRIaaa/shiguangping-blog.git</span><br></pre></td></tr></table></figure>\n<p><code>-b</code>后面的是分支的名称，后面替换自己仓库的链接。</p>\n<h1 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h1><p>今天主要提供帮助的是CSDN博主LeonWuV,如果我的文章有一些地方看不懂，或者有错误，可参考<a href=\"https://blog.csdn.net/wxl1555/article/details/79293159\" target=\"_blank\" rel=\"noopener\">此博主的文章</a>。<br>本文写了一个多小时，终于结束了。虽然很墨迹，但是很快乐。</p>\n<p><strong><em>创作时间：2018-06-13 01:34:21</em></strong></p>\n<p><strong><em>更新时间：2020-04-15 21:23</em></strong></p>\n"},{"title":"JavaSE自学之_双色球程序（随机数）","date":"2018-04-13T13:45:00.000Z","toc":true,"_content":"\n*源代码：*\n\n```java\npackage Thedoublechromosphere;\n\nimport java.util.ArrayList;\nimport java.util.Random;\nimport java.util.Set;\nimport java.util.TreeSet;\n\npublic class Demo {\n    public static void main(String[] args) {\n        Random random = new Random();// 实例化随机数对象\n        Set<Object> set = new TreeSet<>();// 实例化Set对象，Set：无序，唯一\n        System.out.println(\"“双色球”中奖号码为：\");\n        while (true) {\n            int a = random.nextInt(32) + 1;// 整型变量a接收1-33随机数红球\n            set.add(a);// 添加随机数到set中\n            if (set.size() > 5) {\n                System.out.print(set.toString());\n                break;\n            }\n        }\n        System.out.println(\" \" + (random.nextInt(15) + 1));// 生成1-16的随机数蓝球\n\n        System.out.println(\"“排列五”中奖号码为：\");\n\n        ArrayList<Integer> arr = new ArrayList<Integer>();\n        for (int i = 0; i < 5; i++) {\n            arr.add(random.nextInt(9));\n        }\n        System.out.println(arr.toString());\n\n    }\n}\n```","source":"_posts/Java学习之_双色球.md","raw":"title: JavaSE自学之_双色球程序（随机数）\ndate: 2018-04-13 21:45\ntoc: true\n\n\n\n---\n\n*源代码：*\n\n```java\npackage Thedoublechromosphere;\n\nimport java.util.ArrayList;\nimport java.util.Random;\nimport java.util.Set;\nimport java.util.TreeSet;\n\npublic class Demo {\n    public static void main(String[] args) {\n        Random random = new Random();// 实例化随机数对象\n        Set<Object> set = new TreeSet<>();// 实例化Set对象，Set：无序，唯一\n        System.out.println(\"“双色球”中奖号码为：\");\n        while (true) {\n            int a = random.nextInt(32) + 1;// 整型变量a接收1-33随机数红球\n            set.add(a);// 添加随机数到set中\n            if (set.size() > 5) {\n                System.out.print(set.toString());\n                break;\n            }\n        }\n        System.out.println(\" \" + (random.nextInt(15) + 1));// 生成1-16的随机数蓝球\n\n        System.out.println(\"“排列五”中奖号码为：\");\n\n        ArrayList<Integer> arr = new ArrayList<Integer>();\n        for (int i = 0; i < 5; i++) {\n            arr.add(random.nextInt(9));\n        }\n        System.out.println(arr.toString());\n\n    }\n}\n```","slug":"Java学习之_双色球","published":1,"updated":"2020-04-20T16:03:02.224Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6fl0004eiude6h72ua6","content":"<p><em>源代码：</em></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Thedoublechromosphere;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TreeSet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Random random = <span class=\"keyword\">new</span> Random();<span class=\"comment\">// 实例化随机数对象</span></span><br><span class=\"line\">        Set&lt;Object&gt; set = <span class=\"keyword\">new</span> TreeSet&lt;&gt;();<span class=\"comment\">// 实例化Set对象，Set：无序，唯一</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"“双色球”中奖号码为：\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> a = random.nextInt(<span class=\"number\">32</span>) + <span class=\"number\">1</span>;<span class=\"comment\">// 整型变量a接收1-33随机数红球</span></span><br><span class=\"line\">            set.add(a);<span class=\"comment\">// 添加随机数到set中</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (set.size() &gt; <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">                System.out.print(set.toString());</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\" \"</span> + (random.nextInt(<span class=\"number\">15</span>) + <span class=\"number\">1</span>));<span class=\"comment\">// 生成1-16的随机数蓝球</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"“排列五”中奖号码为：\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        ArrayList&lt;Integer&gt; arr = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">            arr.add(random.nextInt(<span class=\"number\">9</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(arr.toString());</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><em>源代码：</em></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Thedoublechromosphere;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TreeSet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Random random = <span class=\"keyword\">new</span> Random();<span class=\"comment\">// 实例化随机数对象</span></span><br><span class=\"line\">        Set&lt;Object&gt; set = <span class=\"keyword\">new</span> TreeSet&lt;&gt;();<span class=\"comment\">// 实例化Set对象，Set：无序，唯一</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"“双色球”中奖号码为：\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> a = random.nextInt(<span class=\"number\">32</span>) + <span class=\"number\">1</span>;<span class=\"comment\">// 整型变量a接收1-33随机数红球</span></span><br><span class=\"line\">            set.add(a);<span class=\"comment\">// 添加随机数到set中</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (set.size() &gt; <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">                System.out.print(set.toString());</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\" \"</span> + (random.nextInt(<span class=\"number\">15</span>) + <span class=\"number\">1</span>));<span class=\"comment\">// 生成1-16的随机数蓝球</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"“排列五”中奖号码为：\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        ArrayList&lt;Integer&gt; arr = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">            arr.add(random.nextInt(<span class=\"number\">9</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(arr.toString());</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Java学习笔记","date":"2020-04-21T13:10:00.000Z","toc":true,"_content":"### 阶段学习笔记：\n\n\n\n1. [Java学习笔记-随着学习进度持续更新](https://ennriaaa.github.io/Java_notebook/)\n2. \n\n---\n其他笔记正在整理当中\n","source":"_posts/Java学习笔记.md","raw":"title: Java学习笔记\ndate: 2020-04-21 21:10\ntoc: true\n\n---\n### 阶段学习笔记：\n\n\n\n1. [Java学习笔记-随着学习进度持续更新](https://ennriaaa.github.io/Java_notebook/)\n2. \n\n---\n其他笔记正在整理当中\n","slug":"Java学习笔记","published":1,"updated":"2020-04-22T01:53:13.833Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6fm0006eiudjscyqynt","content":"<h3 id=\"阶段学习笔记：\"><a href=\"#阶段学习笔记：\" class=\"headerlink\" title=\"阶段学习笔记：\"></a>阶段学习笔记：</h3><ol>\n<li><a href=\"https://ennriaaa.github.io/Java_notebook/\" target=\"_blank\" rel=\"noopener\">Java学习笔记-随着学习进度持续更新</a></li>\n<li></li>\n</ol>\n<hr>\n<p>其他笔记正在整理当中</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"阶段学习笔记：\"><a href=\"#阶段学习笔记：\" class=\"headerlink\" title=\"阶段学习笔记：\"></a>阶段学习笔记：</h3><ol>\n<li><a href=\"https://ennriaaa.github.io/Java_notebook/\" target=\"_blank\" rel=\"noopener\">Java学习笔记-随着学习进度持续更新</a></li>\n<li></li>\n</ol>\n<hr>\n<p>其他笔记正在整理当中</p>\n"},{"title":"JavaSE自学之_小闹钟程序","date":"2018-04-13T11:08:00.000Z","toc":true,"_content":"\n*2020年4月20日---这是前年自学JavaSE时写的，有些功能不会实现的时候就会找百度，后来因为自身原因学习也就搁置了。当初刚开始自学的时候，真是精神头十足，实现某种功能感觉特别有成就感。*\n\n```java\nimport java.applet.Applet;\nimport java.applet.AudioClip;\nimport java.io.File;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.Scanner;\nimport java.util.Timer;\nimport java.util.TimerTask;\n\n/**\n * 这是一个简易的闹钟程序\n * \n * @author liyan\n *\n */\npublic class Alarm {\n    public static void main(String[] args) {\n        HMS hms = new HMS();\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"请输入闹铃响起的时间（时、分、秒）：\");\n        hms.h = sc.nextInt();\n        hms.m = sc.nextInt();\n        hms.s = sc.nextInt();\n        timer(hms);\n    }\n\n    public static void getTime(HMS hms) throws Exception {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"HH:mm:ss\");// 设置时间格式\n        String time = sdf.format(new Date());// 用time接收字符串格式的系统时间\n        System.out.println(\"当前时间为：\" + time);\n        String strArr[] = time.split(\":\");// 把字符串格式的时间按“时分秒”拆分并保存到数组strArr[]中\n        if ((Integer.parseInt(strArr[0]) == hms.h) && (Integer.parseInt(strArr[1]) == hms.m)\n                && (Integer.parseInt(strArr[2]) == hms.s)) {// 当系统时间与设定的响铃时间相同，执行方法体\n            System.out.println(\"到点了\");\n            File file1 = new File(\"src\\\\wav\\\\tonghuazhen.wav\");\n            AudioClip sound1;\n            sound1 = Applet.newAudioClip(file1.toURL());\n            sound1.play();// 播放wav音频\n        }\n    }\n\n    /*\n     * 设置一个定时器timer,每隔1s调用一次getTime()\n     */\n    public static void timer(HMS hms) {\n        Timer T = new Timer();\n        T.schedule(new TimerTask() {\n\n            @Override\n            public void run() {\n                try {\n                    getTime(hms);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        }, 0, 1000);\n    }\n}\n```\n```java\npublic class HMS {\n    /**\n     * 闹钟设定时间： 成员属性： 时：h 分：m 秒：s\n     */\n    int h;\n    int m;\n    int s;\n}\n```\n以上就是我写的java简易闹钟程序的源代码，写得很简陋，但是我也已经尽力了","source":"_posts/Java学习之_小闹钟.md","raw":"title: JavaSE自学之_小闹钟程序\ndate: 2018-04-13 19:08\ntoc: true\n\n\n\n---\n\n*2020年4月20日---这是前年自学JavaSE时写的，有些功能不会实现的时候就会找百度，后来因为自身原因学习也就搁置了。当初刚开始自学的时候，真是精神头十足，实现某种功能感觉特别有成就感。*\n\n```java\nimport java.applet.Applet;\nimport java.applet.AudioClip;\nimport java.io.File;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.Scanner;\nimport java.util.Timer;\nimport java.util.TimerTask;\n\n/**\n * 这是一个简易的闹钟程序\n * \n * @author liyan\n *\n */\npublic class Alarm {\n    public static void main(String[] args) {\n        HMS hms = new HMS();\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"请输入闹铃响起的时间（时、分、秒）：\");\n        hms.h = sc.nextInt();\n        hms.m = sc.nextInt();\n        hms.s = sc.nextInt();\n        timer(hms);\n    }\n\n    public static void getTime(HMS hms) throws Exception {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"HH:mm:ss\");// 设置时间格式\n        String time = sdf.format(new Date());// 用time接收字符串格式的系统时间\n        System.out.println(\"当前时间为：\" + time);\n        String strArr[] = time.split(\":\");// 把字符串格式的时间按“时分秒”拆分并保存到数组strArr[]中\n        if ((Integer.parseInt(strArr[0]) == hms.h) && (Integer.parseInt(strArr[1]) == hms.m)\n                && (Integer.parseInt(strArr[2]) == hms.s)) {// 当系统时间与设定的响铃时间相同，执行方法体\n            System.out.println(\"到点了\");\n            File file1 = new File(\"src\\\\wav\\\\tonghuazhen.wav\");\n            AudioClip sound1;\n            sound1 = Applet.newAudioClip(file1.toURL());\n            sound1.play();// 播放wav音频\n        }\n    }\n\n    /*\n     * 设置一个定时器timer,每隔1s调用一次getTime()\n     */\n    public static void timer(HMS hms) {\n        Timer T = new Timer();\n        T.schedule(new TimerTask() {\n\n            @Override\n            public void run() {\n                try {\n                    getTime(hms);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        }, 0, 1000);\n    }\n}\n```\n```java\npublic class HMS {\n    /**\n     * 闹钟设定时间： 成员属性： 时：h 分：m 秒：s\n     */\n    int h;\n    int m;\n    int s;\n}\n```\n以上就是我写的java简易闹钟程序的源代码，写得很简陋，但是我也已经尽力了","slug":"Java学习之_小闹钟","published":1,"updated":"2020-04-20T16:00:54.137Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6fn0007eiud4qb5myrq","content":"<p><em>2020年4月20日—这是前年自学JavaSE时写的，有些功能不会实现的时候就会找百度，后来因为自身原因学习也就搁置了。当初刚开始自学的时候，真是精神头十足，实现某种功能感觉特别有成就感。</em></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.applet.Applet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.applet.AudioClip;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Timer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TimerTask;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 这是一个简易的闹钟程序</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> liyan</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Alarm</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        HMS hms = <span class=\"keyword\">new</span> HMS();</span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"请输入闹铃响起的时间（时、分、秒）：\"</span>);</span><br><span class=\"line\">        hms.h = sc.nextInt();</span><br><span class=\"line\">        hms.m = sc.nextInt();</span><br><span class=\"line\">        hms.s = sc.nextInt();</span><br><span class=\"line\">        timer(hms);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">getTime</span><span class=\"params\">(HMS hms)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        SimpleDateFormat sdf = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"HH:mm:ss\"</span>);<span class=\"comment\">// 设置时间格式</span></span><br><span class=\"line\">        String time = sdf.format(<span class=\"keyword\">new</span> Date());<span class=\"comment\">// 用time接收字符串格式的系统时间</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"当前时间为：\"</span> + time);</span><br><span class=\"line\">        String strArr[] = time.split(<span class=\"string\">\":\"</span>);<span class=\"comment\">// 把字符串格式的时间按“时分秒”拆分并保存到数组strArr[]中</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((Integer.parseInt(strArr[<span class=\"number\">0</span>]) == hms.h) &amp;&amp; (Integer.parseInt(strArr[<span class=\"number\">1</span>]) == hms.m)</span><br><span class=\"line\">                &amp;&amp; (Integer.parseInt(strArr[<span class=\"number\">2</span>]) == hms.s)) &#123;<span class=\"comment\">// 当系统时间与设定的响铃时间相同，执行方法体</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"到点了\"</span>);</span><br><span class=\"line\">            File file1 = <span class=\"keyword\">new</span> File(<span class=\"string\">\"src\\\\wav\\\\tonghuazhen.wav\"</span>);</span><br><span class=\"line\">            AudioClip sound1;</span><br><span class=\"line\">            sound1 = Applet.newAudioClip(file1.toURL());</span><br><span class=\"line\">            sound1.play();<span class=\"comment\">// 播放wav音频</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * 设置一个定时器timer,每隔1s调用一次getTime()</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">timer</span><span class=\"params\">(HMS hms)</span> </span>&#123;</span><br><span class=\"line\">        Timer T = <span class=\"keyword\">new</span> Timer();</span><br><span class=\"line\">        T.schedule(<span class=\"keyword\">new</span> TimerTask() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    getTime(hms);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"number\">0</span>, <span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HMS</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 闹钟设定时间： 成员属性： 时：h 分：m 秒：s</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> h;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> s;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上就是我写的java简易闹钟程序的源代码，写得很简陋，但是我也已经尽力了</p>\n","site":{"data":{}},"excerpt":"","more":"<p><em>2020年4月20日—这是前年自学JavaSE时写的，有些功能不会实现的时候就会找百度，后来因为自身原因学习也就搁置了。当初刚开始自学的时候，真是精神头十足，实现某种功能感觉特别有成就感。</em></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.applet.Applet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.applet.AudioClip;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Timer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TimerTask;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 这是一个简易的闹钟程序</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> liyan</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Alarm</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        HMS hms = <span class=\"keyword\">new</span> HMS();</span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"请输入闹铃响起的时间（时、分、秒）：\"</span>);</span><br><span class=\"line\">        hms.h = sc.nextInt();</span><br><span class=\"line\">        hms.m = sc.nextInt();</span><br><span class=\"line\">        hms.s = sc.nextInt();</span><br><span class=\"line\">        timer(hms);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">getTime</span><span class=\"params\">(HMS hms)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        SimpleDateFormat sdf = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"HH:mm:ss\"</span>);<span class=\"comment\">// 设置时间格式</span></span><br><span class=\"line\">        String time = sdf.format(<span class=\"keyword\">new</span> Date());<span class=\"comment\">// 用time接收字符串格式的系统时间</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"当前时间为：\"</span> + time);</span><br><span class=\"line\">        String strArr[] = time.split(<span class=\"string\">\":\"</span>);<span class=\"comment\">// 把字符串格式的时间按“时分秒”拆分并保存到数组strArr[]中</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((Integer.parseInt(strArr[<span class=\"number\">0</span>]) == hms.h) &amp;&amp; (Integer.parseInt(strArr[<span class=\"number\">1</span>]) == hms.m)</span><br><span class=\"line\">                &amp;&amp; (Integer.parseInt(strArr[<span class=\"number\">2</span>]) == hms.s)) &#123;<span class=\"comment\">// 当系统时间与设定的响铃时间相同，执行方法体</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"到点了\"</span>);</span><br><span class=\"line\">            File file1 = <span class=\"keyword\">new</span> File(<span class=\"string\">\"src\\\\wav\\\\tonghuazhen.wav\"</span>);</span><br><span class=\"line\">            AudioClip sound1;</span><br><span class=\"line\">            sound1 = Applet.newAudioClip(file1.toURL());</span><br><span class=\"line\">            sound1.play();<span class=\"comment\">// 播放wav音频</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * 设置一个定时器timer,每隔1s调用一次getTime()</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">timer</span><span class=\"params\">(HMS hms)</span> </span>&#123;</span><br><span class=\"line\">        Timer T = <span class=\"keyword\">new</span> Timer();</span><br><span class=\"line\">        T.schedule(<span class=\"keyword\">new</span> TimerTask() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    getTime(hms);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"number\">0</span>, <span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HMS</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 闹钟设定时间： 成员属性： 时：h 分：m 秒：s</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> h;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> s;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上就是我写的java简易闹钟程序的源代码，写得很简陋，但是我也已经尽力了</p>\n"},{"title":"Java学习之_开发环境的安装","date":"2018-04-13T13:51:00.000Z","toc":true,"_content":"\nJava开发需要安装JDK（Java开发工具），JDK里面包括Java编译器，和JRE（Java运行时环境），其中JRE里面又包含JVM（Java虚拟机）、Java核心类库以及相关支持文件。\n\n所以，在开发Java程序之前，必须先安装JDK。*（只为了运行Java程序，只需安装JRE即可）* \n\n### 1. 下载JDK及安装\n\n访问[Oracle官方下载地址](http://www.oracle.com/technetwork/java/javase/downloads/index.html )下载所需的JDK版本。\n\n下载好的安装包是.exe可执行文件，直接双击下一步即可，安装路径推荐默认。\n\n<img src=\"https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE1.png\" width=\"400px\"/>\n\n### 2. 配置环境变量\n\nJDK安装完成之后，就需要给系统配置Java环境变量了。  \n\n<img src=\"https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE2.png\" width=\"400px\"/>\n\n配置环境变量是在：桌面计算机右键属性-->高级系统设置-->环境变量\n\n编辑上图中**系统变量**中的Path，把JDK的路径地址加入到Path中。\n\n*(配置环境变量目的是让操作系统知道JDK)*\n\n\n\nJDK的默认安装路径一般在C盘下Program Files -->Java文件夹下，参考下图。\n\n*（路径一定要全，复制到jdk文件夹下的bin文件夹）*\n\n<img src=\"https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE3.png\" width=\"450px\"/>\n\n把这个路径粘贴到系统变量的Path中，每个路径之间用“ ; ”隔开，*注意：分号是英文输入状态下的.*\n\n编辑确定之后，在cmd窗口敲入命令：\n\n```shell\njava -version\n```\n\n<img src=\"https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE5.png\" width=\"400px\"/>\n\n终端提示Java版本号，说明环境变量配置成功。\n\n也可以在cmd里敲javac或java，这时说明java环境变量已经配置成功了。 \n\n*如果没有配置成功，终端会显示【不是内部或外部命令，也不是可运行的程序或批处理文件】。* ","source":"_posts/Java学习之_开发环境的安装.md","raw":"title: Java学习之_开发环境的安装\ndate: 2018-04-13 21:51\ntoc: true\n\n---\n\nJava开发需要安装JDK（Java开发工具），JDK里面包括Java编译器，和JRE（Java运行时环境），其中JRE里面又包含JVM（Java虚拟机）、Java核心类库以及相关支持文件。\n\n所以，在开发Java程序之前，必须先安装JDK。*（只为了运行Java程序，只需安装JRE即可）* \n\n### 1. 下载JDK及安装\n\n访问[Oracle官方下载地址](http://www.oracle.com/technetwork/java/javase/downloads/index.html )下载所需的JDK版本。\n\n下载好的安装包是.exe可执行文件，直接双击下一步即可，安装路径推荐默认。\n\n<img src=\"https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE1.png\" width=\"400px\"/>\n\n### 2. 配置环境变量\n\nJDK安装完成之后，就需要给系统配置Java环境变量了。  \n\n<img src=\"https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE2.png\" width=\"400px\"/>\n\n配置环境变量是在：桌面计算机右键属性-->高级系统设置-->环境变量\n\n编辑上图中**系统变量**中的Path，把JDK的路径地址加入到Path中。\n\n*(配置环境变量目的是让操作系统知道JDK)*\n\n\n\nJDK的默认安装路径一般在C盘下Program Files -->Java文件夹下，参考下图。\n\n*（路径一定要全，复制到jdk文件夹下的bin文件夹）*\n\n<img src=\"https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE3.png\" width=\"450px\"/>\n\n把这个路径粘贴到系统变量的Path中，每个路径之间用“ ; ”隔开，*注意：分号是英文输入状态下的.*\n\n编辑确定之后，在cmd窗口敲入命令：\n\n```shell\njava -version\n```\n\n<img src=\"https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE5.png\" width=\"400px\"/>\n\n终端提示Java版本号，说明环境变量配置成功。\n\n也可以在cmd里敲javac或java，这时说明java环境变量已经配置成功了。 \n\n*如果没有配置成功，终端会显示【不是内部或外部命令，也不是可运行的程序或批处理文件】。* ","slug":"Java学习之_开发环境的安装","published":1,"updated":"2020-04-21T15:48:25.949Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6fo0008eiudso7vld7l","content":"<p>Java开发需要安装JDK（Java开发工具），JDK里面包括Java编译器，和JRE（Java运行时环境），其中JRE里面又包含JVM（Java虚拟机）、Java核心类库以及相关支持文件。</p>\n<p>所以，在开发Java程序之前，必须先安装JDK。<em>（只为了运行Java程序，只需安装JRE即可）</em> </p>\n<h3 id=\"1-下载JDK及安装\"><a href=\"#1-下载JDK及安装\" class=\"headerlink\" title=\"1. 下载JDK及安装\"></a>1. 下载JDK及安装</h3><p>访问<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"noopener\">Oracle官方下载地址</a>下载所需的JDK版本。</p>\n<p>下载好的安装包是.exe可执行文件，直接双击下一步即可，安装路径推荐默认。</p>\n<p><img src=\"https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE1.png\" width=\"400px\"></p>\n<h3 id=\"2-配置环境变量\"><a href=\"#2-配置环境变量\" class=\"headerlink\" title=\"2. 配置环境变量\"></a>2. 配置环境变量</h3><p>JDK安装完成之后，就需要给系统配置Java环境变量了。  </p>\n<p><img src=\"https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE2.png\" width=\"400px\"></p>\n<p>配置环境变量是在：桌面计算机右键属性–&gt;高级系统设置–&gt;环境变量</p>\n<p>编辑上图中<strong>系统变量</strong>中的Path，把JDK的路径地址加入到Path中。</p>\n<p><em>(配置环境变量目的是让操作系统知道JDK)</em></p>\n<p>JDK的默认安装路径一般在C盘下Program Files –&gt;Java文件夹下，参考下图。</p>\n<p><em>（路径一定要全，复制到jdk文件夹下的bin文件夹）</em></p>\n<p><img src=\"https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE3.png\" width=\"450px\"></p>\n<p>把这个路径粘贴到系统变量的Path中，每个路径之间用“ ; ”隔开，<em>注意：分号是英文输入状态下的.</em></p>\n<p>编辑确定之后，在cmd窗口敲入命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE5.png\" width=\"400px\"></p>\n<p>终端提示Java版本号，说明环境变量配置成功。</p>\n<p>也可以在cmd里敲javac或java，这时说明java环境变量已经配置成功了。 </p>\n<p><em>如果没有配置成功，终端会显示【不是内部或外部命令，也不是可运行的程序或批处理文件】。</em> </p>\n","site":{"data":{}},"excerpt":"","more":"<p>Java开发需要安装JDK（Java开发工具），JDK里面包括Java编译器，和JRE（Java运行时环境），其中JRE里面又包含JVM（Java虚拟机）、Java核心类库以及相关支持文件。</p>\n<p>所以，在开发Java程序之前，必须先安装JDK。<em>（只为了运行Java程序，只需安装JRE即可）</em> </p>\n<h3 id=\"1-下载JDK及安装\"><a href=\"#1-下载JDK及安装\" class=\"headerlink\" title=\"1. 下载JDK及安装\"></a>1. 下载JDK及安装</h3><p>访问<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"noopener\">Oracle官方下载地址</a>下载所需的JDK版本。</p>\n<p>下载好的安装包是.exe可执行文件，直接双击下一步即可，安装路径推荐默认。</p>\n<p><img src=\"https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE1.png\" width=\"400px\"></p>\n<h3 id=\"2-配置环境变量\"><a href=\"#2-配置环境变量\" class=\"headerlink\" title=\"2. 配置环境变量\"></a>2. 配置环境变量</h3><p>JDK安装完成之后，就需要给系统配置Java环境变量了。  </p>\n<p><img src=\"https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE2.png\" width=\"400px\"></p>\n<p>配置环境变量是在：桌面计算机右键属性–&gt;高级系统设置–&gt;环境变量</p>\n<p>编辑上图中<strong>系统变量</strong>中的Path，把JDK的路径地址加入到Path中。</p>\n<p><em>(配置环境变量目的是让操作系统知道JDK)</em></p>\n<p>JDK的默认安装路径一般在C盘下Program Files –&gt;Java文件夹下，参考下图。</p>\n<p><em>（路径一定要全，复制到jdk文件夹下的bin文件夹）</em></p>\n<p><img src=\"https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE3.png\" width=\"450px\"></p>\n<p>把这个路径粘贴到系统变量的Path中，每个路径之间用“ ; ”隔开，<em>注意：分号是英文输入状态下的.</em></p>\n<p>编辑确定之后，在cmd窗口敲入命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE5.png\" width=\"400px\"></p>\n<p>终端提示Java版本号，说明环境变量配置成功。</p>\n<p>也可以在cmd里敲javac或java，这时说明java环境变量已经配置成功了。 </p>\n<p><em>如果没有配置成功，终端会显示【不是内部或外部命令，也不是可运行的程序或批处理文件】。</em> </p>\n"},{"title":"Java编译运行时报错尝试解决办法","date":"2020-04-20T10:02:00.000Z","toc":true,"_content":"\n\"Description Resource Path Location Type Java compiler level does not match the version of\"解决办法\nproject编译问题，需要有三处的jdk版本保持一致，才能编译通过。\n\n1. 在右键项目-->properties-->project Facets-->修改右侧Java的version，要与当前项目jdk版本保持一致\n\n   ![](https://images.shiguangping.com/imgs/20200420161608.png)\n\n2. 设置选项preference-->java-->Compiler-->设置的右侧的Compiler compliance level\n\n   ![](https://images.shiguangping.com/imgs/20200420162147.jpg)\n\n   *这一步有的时候不匹配也能编译运行通过*\n\n3. preferences-->java-->Installed JREs-->设置或者选择右侧的Installed JREs\n\n   ![](https://images.shiguangping.com/imgs/20200420162237.jpg)\n\n   *这里就是jre环境路径*\n\n***说明：***\n***这个报错的解决办法，首先检查前两步骤，第一步骤修改完之后会解决当前项目的报错问题，程序可以正常编译运行，但是再新建项目之后，任然会出现该问题；第二步骤修改完之后，可以解决新项目报错问题，避免每次新建项目都需要手动去修改第一步骤；第三步就是当前jdk的开发环境，这个一般都没问题。***\n","source":"_posts/Jave编译运行时报错尝试解决办法.md","raw":"title: Java编译运行时报错尝试解决办法\ndate: 2020-04-20 18:02\ntoc: true\n\n---\n\n\"Description Resource Path Location Type Java compiler level does not match the version of\"解决办法\nproject编译问题，需要有三处的jdk版本保持一致，才能编译通过。\n\n1. 在右键项目-->properties-->project Facets-->修改右侧Java的version，要与当前项目jdk版本保持一致\n\n   ![](https://images.shiguangping.com/imgs/20200420161608.png)\n\n2. 设置选项preference-->java-->Compiler-->设置的右侧的Compiler compliance level\n\n   ![](https://images.shiguangping.com/imgs/20200420162147.jpg)\n\n   *这一步有的时候不匹配也能编译运行通过*\n\n3. preferences-->java-->Installed JREs-->设置或者选择右侧的Installed JREs\n\n   ![](https://images.shiguangping.com/imgs/20200420162237.jpg)\n\n   *这里就是jre环境路径*\n\n***说明：***\n***这个报错的解决办法，首先检查前两步骤，第一步骤修改完之后会解决当前项目的报错问题，程序可以正常编译运行，但是再新建项目之后，任然会出现该问题；第二步骤修改完之后，可以解决新项目报错问题，避免每次新建项目都需要手动去修改第一步骤；第三步就是当前jdk的开发环境，这个一般都没问题。***\n","slug":"Jave编译运行时报错尝试解决办法","published":1,"updated":"2020-04-20T10:08:35.568Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6fp0009eiudztnszjd7","content":"<p>“Description Resource Path Location Type Java compiler level does not match the version of”解决办法<br>project编译问题，需要有三处的jdk版本保持一致，才能编译通过。</p>\n<ol>\n<li><p>在右键项目–&gt;properties–&gt;project Facets–&gt;修改右侧Java的version，要与当前项目jdk版本保持一致</p>\n<p><img src=\"https://images.shiguangping.com/imgs/20200420161608.png\" alt=\"\"></p>\n</li>\n<li><p>设置选项preference–&gt;java–&gt;Compiler–&gt;设置的右侧的Compiler compliance level</p>\n<p><img src=\"https://images.shiguangping.com/imgs/20200420162147.jpg\" alt=\"\"></p>\n<p><em>这一步有的时候不匹配也能编译运行通过</em></p>\n</li>\n<li><p>preferences–&gt;java–&gt;Installed JREs–&gt;设置或者选择右侧的Installed JREs</p>\n<p><img src=\"https://images.shiguangping.com/imgs/20200420162237.jpg\" alt=\"\"></p>\n<p><em>这里就是jre环境路径</em></p>\n</li>\n</ol>\n<p><strong><em>说明：</em></strong><br><strong><em>这个报错的解决办法，首先检查前两步骤，第一步骤修改完之后会解决当前项目的报错问题，程序可以正常编译运行，但是再新建项目之后，任然会出现该问题；第二步骤修改完之后，可以解决新项目报错问题，避免每次新建项目都需要手动去修改第一步骤；第三步就是当前jdk的开发环境，这个一般都没问题。</em></strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p>“Description Resource Path Location Type Java compiler level does not match the version of”解决办法<br>project编译问题，需要有三处的jdk版本保持一致，才能编译通过。</p>\n<ol>\n<li><p>在右键项目–&gt;properties–&gt;project Facets–&gt;修改右侧Java的version，要与当前项目jdk版本保持一致</p>\n<p><img src=\"https://images.shiguangping.com/imgs/20200420161608.png\" alt=\"\"></p>\n</li>\n<li><p>设置选项preference–&gt;java–&gt;Compiler–&gt;设置的右侧的Compiler compliance level</p>\n<p><img src=\"https://images.shiguangping.com/imgs/20200420162147.jpg\" alt=\"\"></p>\n<p><em>这一步有的时候不匹配也能编译运行通过</em></p>\n</li>\n<li><p>preferences–&gt;java–&gt;Installed JREs–&gt;设置或者选择右侧的Installed JREs</p>\n<p><img src=\"https://images.shiguangping.com/imgs/20200420162237.jpg\" alt=\"\"></p>\n<p><em>这里就是jre环境路径</em></p>\n</li>\n</ol>\n<p><strong><em>说明：</em></strong><br><strong><em>这个报错的解决办法，首先检查前两步骤，第一步骤修改完之后会解决当前项目的报错问题，程序可以正常编译运行，但是再新建项目之后，任然会出现该问题；第二步骤修改完之后，可以解决新项目报错问题，避免每次新建项目都需要手动去修改第一步骤；第三步就是当前jdk的开发环境，这个一般都没问题。</em></strong></p>\n"},{"title":"dpkg命令简述","date":"2018-05-19T16:00:00.000Z","toc":true,"_content":"dpkg命令是Debian Linux系统用来安装、创建和管理软件包的实用工具。\n## 语法 ##\n\n    dpkg(选项)(参数)\n\n## 选项 ##\n\n    -i：安装软件包；\n    -r：删除软件包；\n    -P：删除软件包的同时删除其配置文件；\n    -L：显示于软件包关联的文件；\n    -l：显示已安装软件包列表；\n    --unpack：解开软件包；\n    -c：显示软件包内文件列表；\n    --confiugre：配置软件包。\n\n## 参数 ##\n\nDeb软件包：指定要操作的.deb软件包。\n\n## 实例 ##\n\n    dpkg -i package.deb     #安装包\n    dpkg -r package         #删除包\n    dpkg -P package         #删除包（包括配置文件）\n    dpkg -L package         #列出与该包关联的文件\n    dpkg -l package         #显示该包的版本\n    dpkg --unpack package.deb  #解开deb包的内容\n    dpkg -S keyword            #搜索所属的包内容\n    dpkg -l                    #列出当前已安装的包\n    dpkg -c package.deb        #列出deb包的内容\n    dpkg --configure package   #配置包","source":"_posts/Linux学习之~dpkg命令简述.md","raw":"title: dpkg命令简述\ndate: 2018-05-20 00:00\ntoc: true\n\n---\ndpkg命令是Debian Linux系统用来安装、创建和管理软件包的实用工具。\n## 语法 ##\n\n    dpkg(选项)(参数)\n\n## 选项 ##\n\n    -i：安装软件包；\n    -r：删除软件包；\n    -P：删除软件包的同时删除其配置文件；\n    -L：显示于软件包关联的文件；\n    -l：显示已安装软件包列表；\n    --unpack：解开软件包；\n    -c：显示软件包内文件列表；\n    --confiugre：配置软件包。\n\n## 参数 ##\n\nDeb软件包：指定要操作的.deb软件包。\n\n## 实例 ##\n\n    dpkg -i package.deb     #安装包\n    dpkg -r package         #删除包\n    dpkg -P package         #删除包（包括配置文件）\n    dpkg -L package         #列出与该包关联的文件\n    dpkg -l package         #显示该包的版本\n    dpkg --unpack package.deb  #解开deb包的内容\n    dpkg -S keyword            #搜索所属的包内容\n    dpkg -l                    #列出当前已安装的包\n    dpkg -c package.deb        #列出deb包的内容\n    dpkg --configure package   #配置包","slug":"Linux学习之~dpkg命令简述","published":1,"updated":"2020-04-21T15:49:33.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6fq000aeiudtynwlgh5","content":"<p>dpkg命令是Debian Linux系统用来安装、创建和管理软件包的实用工具。</p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h2><pre><code>dpkg(选项)(参数)\n</code></pre><h2 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h2><pre><code>-i：安装软件包；\n-r：删除软件包；\n-P：删除软件包的同时删除其配置文件；\n-L：显示于软件包关联的文件；\n-l：显示已安装软件包列表；\n--unpack：解开软件包；\n-c：显示软件包内文件列表；\n--confiugre：配置软件包。\n</code></pre><h2 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h2><p>Deb软件包：指定要操作的.deb软件包。</p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><pre><code>dpkg -i package.deb     #安装包\ndpkg -r package         #删除包\ndpkg -P package         #删除包（包括配置文件）\ndpkg -L package         #列出与该包关联的文件\ndpkg -l package         #显示该包的版本\ndpkg --unpack package.deb  #解开deb包的内容\ndpkg -S keyword            #搜索所属的包内容\ndpkg -l                    #列出当前已安装的包\ndpkg -c package.deb        #列出deb包的内容\ndpkg --configure package   #配置包\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>dpkg命令是Debian Linux系统用来安装、创建和管理软件包的实用工具。</p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h2><pre><code>dpkg(选项)(参数)\n</code></pre><h2 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h2><pre><code>-i：安装软件包；\n-r：删除软件包；\n-P：删除软件包的同时删除其配置文件；\n-L：显示于软件包关联的文件；\n-l：显示已安装软件包列表；\n--unpack：解开软件包；\n-c：显示软件包内文件列表；\n--confiugre：配置软件包。\n</code></pre><h2 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h2><p>Deb软件包：指定要操作的.deb软件包。</p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><pre><code>dpkg -i package.deb     #安装包\ndpkg -r package         #删除包\ndpkg -P package         #删除包（包括配置文件）\ndpkg -L package         #列出与该包关联的文件\ndpkg -l package         #显示该包的版本\ndpkg --unpack package.deb  #解开deb包的内容\ndpkg -S keyword            #搜索所属的包内容\ndpkg -l                    #列出当前已安装的包\ndpkg -c package.deb        #列出deb包的内容\ndpkg --configure package   #配置包\n</code></pre>"},{"title":"Linux下的Vim使用教程","date":"2020-04-10T16:00:00.000Z","toc":true,"_content":"### 什么是Vim？\n\nVim是从Vi发展出来的一个功能非常强大的文本编辑器，在程序员中广泛使用。\n\n\n\n### Vim/Vi的使用\n\n基本上Vim/Vi共分为三种模式：分别是**命令模式（Command mode）**，**输入模式（Insert mode）**和**底线命令模式（Last line mode）**。这三种模式的作用分别是：\n\n\n\n#### 命令模式：\n\n用户进入Vim时即是**命令模式**。\n\n#### 输入模式：\n\n在命令模式下按 **“ i ”**进入输入模式。\n\n输入模式下按**“ ESC ”**，退出到命令模式。\n\n#### 底线命令模式：\n\n在命令模式下按**“ ：“**（英文状态下的冒号），进入底线命令模式。\n\n在底线命令模式下可以输入单个或多个字符的命令，可用的命令非常多。\n\n在底线命令模式中，基本的命令有（已经省略了冒号）：\n\n- q 退出程序\n- w 保存文件\n\n按**” ESC “ ** 键退出底线命令模式。\n\n\n\nVim工作模式：\n\n`vim filename`进入`命令模式`\n\n`i`进入`输入模式`\n\n`esc`退出到`命令模式`\n\n`:`命令模式下按冒号进入到`底线命令模式`\n\n`:wq`保存并退出Vim\n\n\n\n#### 常见命令：\n\n\n\n\n\n","source":"_posts/Linux下的Vim使用教程.md","raw":"title: Linux下的Vim使用教程\ndate: 2020-4-11\ntoc: true\n\n---\n### 什么是Vim？\n\nVim是从Vi发展出来的一个功能非常强大的文本编辑器，在程序员中广泛使用。\n\n\n\n### Vim/Vi的使用\n\n基本上Vim/Vi共分为三种模式：分别是**命令模式（Command mode）**，**输入模式（Insert mode）**和**底线命令模式（Last line mode）**。这三种模式的作用分别是：\n\n\n\n#### 命令模式：\n\n用户进入Vim时即是**命令模式**。\n\n#### 输入模式：\n\n在命令模式下按 **“ i ”**进入输入模式。\n\n输入模式下按**“ ESC ”**，退出到命令模式。\n\n#### 底线命令模式：\n\n在命令模式下按**“ ：“**（英文状态下的冒号），进入底线命令模式。\n\n在底线命令模式下可以输入单个或多个字符的命令，可用的命令非常多。\n\n在底线命令模式中，基本的命令有（已经省略了冒号）：\n\n- q 退出程序\n- w 保存文件\n\n按**” ESC “ ** 键退出底线命令模式。\n\n\n\nVim工作模式：\n\n`vim filename`进入`命令模式`\n\n`i`进入`输入模式`\n\n`esc`退出到`命令模式`\n\n`:`命令模式下按冒号进入到`底线命令模式`\n\n`:wq`保存并退出Vim\n\n\n\n#### 常见命令：\n\n\n\n\n\n","slug":"Linux下的Vim使用教程","published":1,"updated":"2020-04-20T09:55:05.692Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6fs000beiudsi0b7z0x","content":"<h3 id=\"什么是Vim？\"><a href=\"#什么是Vim？\" class=\"headerlink\" title=\"什么是Vim？\"></a>什么是Vim？</h3><p>Vim是从Vi发展出来的一个功能非常强大的文本编辑器，在程序员中广泛使用。</p>\n<h3 id=\"Vim-Vi的使用\"><a href=\"#Vim-Vi的使用\" class=\"headerlink\" title=\"Vim/Vi的使用\"></a>Vim/Vi的使用</h3><p>基本上Vim/Vi共分为三种模式：分别是<strong>命令模式（Command mode）</strong>，<strong>输入模式（Insert mode）</strong>和<strong>底线命令模式（Last line mode）</strong>。这三种模式的作用分别是：</p>\n<h4 id=\"命令模式：\"><a href=\"#命令模式：\" class=\"headerlink\" title=\"命令模式：\"></a>命令模式：</h4><p>用户进入Vim时即是<strong>命令模式</strong>。</p>\n<h4 id=\"输入模式：\"><a href=\"#输入模式：\" class=\"headerlink\" title=\"输入模式：\"></a>输入模式：</h4><p>在命令模式下按 <strong>“ i ”</strong>进入输入模式。</p>\n<p>输入模式下按<strong>“ ESC ”</strong>，退出到命令模式。</p>\n<h4 id=\"底线命令模式：\"><a href=\"#底线命令模式：\" class=\"headerlink\" title=\"底线命令模式：\"></a>底线命令模式：</h4><p>在命令模式下按<strong>“ ：“</strong>（英文状态下的冒号），进入底线命令模式。</p>\n<p>在底线命令模式下可以输入单个或多个字符的命令，可用的命令非常多。</p>\n<p>在底线命令模式中，基本的命令有（已经省略了冒号）：</p>\n<ul>\n<li>q 退出程序</li>\n<li>w 保存文件</li>\n</ul>\n<p>按<strong>” ESC “ </strong> 键退出底线命令模式。</p>\n<p>Vim工作模式：</p>\n<p><code>vim filename</code>进入<code>命令模式</code></p>\n<p><code>i</code>进入<code>输入模式</code></p>\n<p><code>esc</code>退出到<code>命令模式</code></p>\n<p><code>:</code>命令模式下按冒号进入到<code>底线命令模式</code></p>\n<p><code>:wq</code>保存并退出Vim</p>\n<h4 id=\"常见命令：\"><a href=\"#常见命令：\" class=\"headerlink\" title=\"常见命令：\"></a>常见命令：</h4>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"什么是Vim？\"><a href=\"#什么是Vim？\" class=\"headerlink\" title=\"什么是Vim？\"></a>什么是Vim？</h3><p>Vim是从Vi发展出来的一个功能非常强大的文本编辑器，在程序员中广泛使用。</p>\n<h3 id=\"Vim-Vi的使用\"><a href=\"#Vim-Vi的使用\" class=\"headerlink\" title=\"Vim/Vi的使用\"></a>Vim/Vi的使用</h3><p>基本上Vim/Vi共分为三种模式：分别是<strong>命令模式（Command mode）</strong>，<strong>输入模式（Insert mode）</strong>和<strong>底线命令模式（Last line mode）</strong>。这三种模式的作用分别是：</p>\n<h4 id=\"命令模式：\"><a href=\"#命令模式：\" class=\"headerlink\" title=\"命令模式：\"></a>命令模式：</h4><p>用户进入Vim时即是<strong>命令模式</strong>。</p>\n<h4 id=\"输入模式：\"><a href=\"#输入模式：\" class=\"headerlink\" title=\"输入模式：\"></a>输入模式：</h4><p>在命令模式下按 <strong>“ i ”</strong>进入输入模式。</p>\n<p>输入模式下按<strong>“ ESC ”</strong>，退出到命令模式。</p>\n<h4 id=\"底线命令模式：\"><a href=\"#底线命令模式：\" class=\"headerlink\" title=\"底线命令模式：\"></a>底线命令模式：</h4><p>在命令模式下按<strong>“ ：“</strong>（英文状态下的冒号），进入底线命令模式。</p>\n<p>在底线命令模式下可以输入单个或多个字符的命令，可用的命令非常多。</p>\n<p>在底线命令模式中，基本的命令有（已经省略了冒号）：</p>\n<ul>\n<li>q 退出程序</li>\n<li>w 保存文件</li>\n</ul>\n<p>按<strong>” ESC “ </strong> 键退出底线命令模式。</p>\n<p>Vim工作模式：</p>\n<p><code>vim filename</code>进入<code>命令模式</code></p>\n<p><code>i</code>进入<code>输入模式</code></p>\n<p><code>esc</code>退出到<code>命令模式</code></p>\n<p><code>:</code>命令模式下按冒号进入到<code>底线命令模式</code></p>\n<p><code>:wq</code>保存并退出Vim</p>\n<h4 id=\"常见命令：\"><a href=\"#常见命令：\" class=\"headerlink\" title=\"常见命令：\"></a>常见命令：</h4>"},{"title":"Linux学习之~ubuntu安装jdk及配置环境变量","date":"2018-05-14T16:00:00.000Z","toc":true,"_content":"### 1. 下载jdk\n\n前往jdk官网下载jdk，地址：http://www.oracle.com/technetwork/java/javase/downloads/index.html\n\n![请输入图片描述][1]\n\n\n现在已经更新到jdk10了，但是我下载解压之后发现里面没有jre文件夹，不知为何。为了不发生同样的问题，推荐下载之前的版本。\n\n*（文章具有一定的时效性，不代表之后也会出现同样问题）*\n\n![请输入图片描述][2]\n\n\n我下载的是linux x64的版本，jdk-8u172-linux-x64.tar.gz\n\nubuntu系统的话，默认会下载到“下载”里面（我用的ubuntu版本是18.04LTS）\n\n### 2. 创建文件夹，将jdk解压到该文件夹内 ##\n\n1. 进到/usr/lib/文件夹下，\n\n\n```shell\ncd /usr/lib\n```\n\n![请输入图片描述][3]\n\n\n在当前文件夹输入sudo mkdir jvm创建文件夹\n\n```shell\nsudo mkdir jvm\n```\n\n此时可以用命令查看文件夹是否创建成功\n\n```shell\nls -l\n```\n\n看看是否有jvm这个文件夹。\n![请输入图片描述][4]\n\n2. 然后利用cd命令回到“下载”文件夹，把下载好的jdk移动到刚刚创建的jvm文件夹\n\n```shell\nsudo mv jdk-8u172-linux-x64.tar.gz /usr/lib/jvm\n```\n\n然后进入/usr/lib/jvm文件夹，查看该文件是否存在\n\n3. 用tar -zxvf命令解压\n\n```shell\nsudo tar -zxvf jdk-8u172-linux-x64.tar.gz\n```\n\n解压完成后可以用ls -l命令查看是否解压成功\n\n*（注：在2步骤时，可以在下载文件夹直接将下载好的jdk解压到目标目录/usr/lib/jvm里，然后在回到jvm目录查看是否解压成功）*\n\n\n\n也可以直接通过命令解压到指定文件夹：\n\n```shell\nsudo tar -zxvf jdk-8u172-linux-x64.tar.gz -C /usr/lib/jvm\n```\n\n\n\n### 3. 配置环境变量 ##\n\n编辑.bashrc文件\n\n```shell\nsudo gedit ~/.bashrc\n```\n\n\n\n![请输入图片描述][5]\n\n\n在结尾fi后面加上这四段代码：\n\n```shell\nexport JAVA_HOME=/usr/lib/jvm/jdk1.8.0_171\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:$PATH\n```\n\n*第一行JAVA_HOME是jdk的安装路径，这里一定不要写错。*\n\n\n\n编辑保存之后，在终端输入：\n\n```shell\nsource ~/.bashrc\n```\n\n使.bashrc生效，如果提示权限问题，在命令前面加上sudo\n\n### 4. 安装完成，验证java是否配置完成 ##\n\n在终端输入：\n\n```shell\njava -version\n```\n\n![请输入图片描述][6]\n\n终端出现java的版本号信息，说明jdk环境变量配置成功。\n\n\n\n\n\n[1]: https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE1.png\n[2]: https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE2.png\n[3]: https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE3.png\n[4]: https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE4.png\n[5]: https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE5.png\n[6]: https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE6.png","source":"_posts/Linux学习之~ubuntu安装jdk及配置环境变量.md","raw":"title: Linux学习之~ubuntu安装jdk及配置环境变量\ndate: 2018-05-15 00:00\ntoc: true\n\n---\n### 1. 下载jdk\n\n前往jdk官网下载jdk，地址：http://www.oracle.com/technetwork/java/javase/downloads/index.html\n\n![请输入图片描述][1]\n\n\n现在已经更新到jdk10了，但是我下载解压之后发现里面没有jre文件夹，不知为何。为了不发生同样的问题，推荐下载之前的版本。\n\n*（文章具有一定的时效性，不代表之后也会出现同样问题）*\n\n![请输入图片描述][2]\n\n\n我下载的是linux x64的版本，jdk-8u172-linux-x64.tar.gz\n\nubuntu系统的话，默认会下载到“下载”里面（我用的ubuntu版本是18.04LTS）\n\n### 2. 创建文件夹，将jdk解压到该文件夹内 ##\n\n1. 进到/usr/lib/文件夹下，\n\n\n```shell\ncd /usr/lib\n```\n\n![请输入图片描述][3]\n\n\n在当前文件夹输入sudo mkdir jvm创建文件夹\n\n```shell\nsudo mkdir jvm\n```\n\n此时可以用命令查看文件夹是否创建成功\n\n```shell\nls -l\n```\n\n看看是否有jvm这个文件夹。\n![请输入图片描述][4]\n\n2. 然后利用cd命令回到“下载”文件夹，把下载好的jdk移动到刚刚创建的jvm文件夹\n\n```shell\nsudo mv jdk-8u172-linux-x64.tar.gz /usr/lib/jvm\n```\n\n然后进入/usr/lib/jvm文件夹，查看该文件是否存在\n\n3. 用tar -zxvf命令解压\n\n```shell\nsudo tar -zxvf jdk-8u172-linux-x64.tar.gz\n```\n\n解压完成后可以用ls -l命令查看是否解压成功\n\n*（注：在2步骤时，可以在下载文件夹直接将下载好的jdk解压到目标目录/usr/lib/jvm里，然后在回到jvm目录查看是否解压成功）*\n\n\n\n也可以直接通过命令解压到指定文件夹：\n\n```shell\nsudo tar -zxvf jdk-8u172-linux-x64.tar.gz -C /usr/lib/jvm\n```\n\n\n\n### 3. 配置环境变量 ##\n\n编辑.bashrc文件\n\n```shell\nsudo gedit ~/.bashrc\n```\n\n\n\n![请输入图片描述][5]\n\n\n在结尾fi后面加上这四段代码：\n\n```shell\nexport JAVA_HOME=/usr/lib/jvm/jdk1.8.0_171\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:$PATH\n```\n\n*第一行JAVA_HOME是jdk的安装路径，这里一定不要写错。*\n\n\n\n编辑保存之后，在终端输入：\n\n```shell\nsource ~/.bashrc\n```\n\n使.bashrc生效，如果提示权限问题，在命令前面加上sudo\n\n### 4. 安装完成，验证java是否配置完成 ##\n\n在终端输入：\n\n```shell\njava -version\n```\n\n![请输入图片描述][6]\n\n终端出现java的版本号信息，说明jdk环境变量配置成功。\n\n\n\n\n\n[1]: https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE1.png\n[2]: https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE2.png\n[3]: https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE3.png\n[4]: https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE4.png\n[5]: https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE5.png\n[6]: https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE6.png","slug":"Linux学习之~ubuntu安装jdk及配置环境变量","published":1,"updated":"2020-04-21T15:59:42.954Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6ft000ceiudgigjkmwk","content":"<h3 id=\"1-下载jdk\"><a href=\"#1-下载jdk\" class=\"headerlink\" title=\"1. 下载jdk\"></a>1. 下载jdk</h3><p>前往jdk官网下载jdk，地址：<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"noopener\">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a></p>\n<p><img src=\"https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE1.png\" alt=\"请输入图片描述\"></p>\n<p>现在已经更新到jdk10了，但是我下载解压之后发现里面没有jre文件夹，不知为何。为了不发生同样的问题，推荐下载之前的版本。</p>\n<p><em>（文章具有一定的时效性，不代表之后也会出现同样问题）</em></p>\n<p><img src=\"https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE2.png\" alt=\"请输入图片描述\"></p>\n<p>我下载的是linux x64的版本，jdk-8u172-linux-x64.tar.gz</p>\n<p>ubuntu系统的话，默认会下载到“下载”里面（我用的ubuntu版本是18.04LTS）</p>\n<h3 id=\"2-创建文件夹，将jdk解压到该文件夹内\"><a href=\"#2-创建文件夹，将jdk解压到该文件夹内\" class=\"headerlink\" title=\"2. 创建文件夹，将jdk解压到该文件夹内\"></a>2. 创建文件夹，将jdk解压到该文件夹内</h3><ol>\n<li>进到/usr/lib/文件夹下，</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/lib</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE3.png\" alt=\"请输入图片描述\"></p>\n<p>在当前文件夹输入sudo mkdir jvm创建文件夹</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir jvm</span><br></pre></td></tr></table></figure>\n<p>此时可以用命令查看文件夹是否创建成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l</span><br></pre></td></tr></table></figure>\n<p>看看是否有jvm这个文件夹。<br><img src=\"https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE4.png\" alt=\"请输入图片描述\"></p>\n<ol start=\"2\">\n<li>然后利用cd命令回到“下载”文件夹，把下载好的jdk移动到刚刚创建的jvm文件夹</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mv jdk-8u172-linux-x64.tar.gz /usr/lib/jvm</span><br></pre></td></tr></table></figure>\n<p>然后进入/usr/lib/jvm文件夹，查看该文件是否存在</p>\n<ol start=\"3\">\n<li>用tar -zxvf命令解压</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tar -zxvf jdk-8u172-linux-x64.tar.gz</span><br></pre></td></tr></table></figure>\n<p>解压完成后可以用ls -l命令查看是否解压成功</p>\n<p><em>（注：在2步骤时，可以在下载文件夹直接将下载好的jdk解压到目标目录/usr/lib/jvm里，然后在回到jvm目录查看是否解压成功）</em></p>\n<p>也可以直接通过命令解压到指定文件夹：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tar -zxvf jdk-8u172-linux-x64.tar.gz -C /usr/lib/jvm</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-配置环境变量\"><a href=\"#3-配置环境变量\" class=\"headerlink\" title=\"3. 配置环境变量\"></a>3. 配置环境变量</h3><p>编辑.bashrc文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gedit ~/.bashrc</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE5.png\" alt=\"请输入图片描述\"></p>\n<p>在结尾fi后面加上这四段代码：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_171</span><br><span class=\"line\">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class=\"line\">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</span><br><span class=\"line\">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br></pre></td></tr></table></figure>\n<p><em>第一行JAVA_HOME是jdk的安装路径，这里一定不要写错。</em></p>\n<p>编辑保存之后，在终端输入：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n<p>使.bashrc生效，如果提示权限问题，在命令前面加上sudo</p>\n<h3 id=\"4-安装完成，验证java是否配置完成\"><a href=\"#4-安装完成，验证java是否配置完成\" class=\"headerlink\" title=\"4. 安装完成，验证java是否配置完成\"></a>4. 安装完成，验证java是否配置完成</h3><p>在终端输入：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE6.png\" alt=\"请输入图片描述\"></p>\n<p>终端出现java的版本号信息，说明jdk环境变量配置成功。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-下载jdk\"><a href=\"#1-下载jdk\" class=\"headerlink\" title=\"1. 下载jdk\"></a>1. 下载jdk</h3><p>前往jdk官网下载jdk，地址：<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"noopener\">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a></p>\n<p><img src=\"https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE1.png\" alt=\"请输入图片描述\"></p>\n<p>现在已经更新到jdk10了，但是我下载解压之后发现里面没有jre文件夹，不知为何。为了不发生同样的问题，推荐下载之前的版本。</p>\n<p><em>（文章具有一定的时效性，不代表之后也会出现同样问题）</em></p>\n<p><img src=\"https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE2.png\" alt=\"请输入图片描述\"></p>\n<p>我下载的是linux x64的版本，jdk-8u172-linux-x64.tar.gz</p>\n<p>ubuntu系统的话，默认会下载到“下载”里面（我用的ubuntu版本是18.04LTS）</p>\n<h3 id=\"2-创建文件夹，将jdk解压到该文件夹内\"><a href=\"#2-创建文件夹，将jdk解压到该文件夹内\" class=\"headerlink\" title=\"2. 创建文件夹，将jdk解压到该文件夹内\"></a>2. 创建文件夹，将jdk解压到该文件夹内</h3><ol>\n<li>进到/usr/lib/文件夹下，</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/lib</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE3.png\" alt=\"请输入图片描述\"></p>\n<p>在当前文件夹输入sudo mkdir jvm创建文件夹</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir jvm</span><br></pre></td></tr></table></figure>\n<p>此时可以用命令查看文件夹是否创建成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l</span><br></pre></td></tr></table></figure>\n<p>看看是否有jvm这个文件夹。<br><img src=\"https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE4.png\" alt=\"请输入图片描述\"></p>\n<ol start=\"2\">\n<li>然后利用cd命令回到“下载”文件夹，把下载好的jdk移动到刚刚创建的jvm文件夹</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mv jdk-8u172-linux-x64.tar.gz /usr/lib/jvm</span><br></pre></td></tr></table></figure>\n<p>然后进入/usr/lib/jvm文件夹，查看该文件是否存在</p>\n<ol start=\"3\">\n<li>用tar -zxvf命令解压</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tar -zxvf jdk-8u172-linux-x64.tar.gz</span><br></pre></td></tr></table></figure>\n<p>解压完成后可以用ls -l命令查看是否解压成功</p>\n<p><em>（注：在2步骤时，可以在下载文件夹直接将下载好的jdk解压到目标目录/usr/lib/jvm里，然后在回到jvm目录查看是否解压成功）</em></p>\n<p>也可以直接通过命令解压到指定文件夹：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tar -zxvf jdk-8u172-linux-x64.tar.gz -C /usr/lib/jvm</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-配置环境变量\"><a href=\"#3-配置环境变量\" class=\"headerlink\" title=\"3. 配置环境变量\"></a>3. 配置环境变量</h3><p>编辑.bashrc文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gedit ~/.bashrc</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE5.png\" alt=\"请输入图片描述\"></p>\n<p>在结尾fi后面加上这四段代码：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_171</span><br><span class=\"line\">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class=\"line\">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</span><br><span class=\"line\">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br></pre></td></tr></table></figure>\n<p><em>第一行JAVA_HOME是jdk的安装路径，这里一定不要写错。</em></p>\n<p>编辑保存之后，在终端输入：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n<p>使.bashrc生效，如果提示权限问题，在命令前面加上sudo</p>\n<h3 id=\"4-安装完成，验证java是否配置完成\"><a href=\"#4-安装完成，验证java是否配置完成\" class=\"headerlink\" title=\"4. 安装完成，验证java是否配置完成\"></a>4. 安装完成，验证java是否配置完成</h3><p>在终端输入：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE6.png\" alt=\"请输入图片描述\"></p>\n<p>终端出现java的版本号信息，说明jdk环境变量配置成功。</p>\n"},{"title":"L2TP/IPSec一键安装脚本","date":"2020-03-12T13:00:00.000Z","toc":true,"_content":"#### 本脚本适用环境：\n系统支持：CentOS6+，Debian7+，Ubuntu12+\n内存要求：≥128M\n更新日期：2017 年 05 月 28 日\n\n#### 关于本脚本：\n名词解释如下\nL2TP（Layer 2 Tunneling Protocol）\nIPSec（Internet Protocol Security）\nIKEv2 (Internet Key Exchange v2)\n能实现 IPsec 的目前总体上有 openswan，libreswan，strongswan 这3种。\nlibreswan 是基于 openswan 的 fork，所以现在各个发行版基本已经看不到 openswan 的身影了。\n当然也有使用 strongswan 的。\n\n之所以要更新 L2TP 一键安装脚本，是因为随着各个 Linux 发行版不断推陈出新，原有的脚本已经不适应现在的需求。\n本脚本通过编译安装最新版 libreswan 来实现 IPSec（CentOS7 下则是全部 yum 安装），yum 或 apt-get 来安装 xl2tpd，再根据各个发行版的使用方法不同，部署防火墙规则。\n\n#### 写在前面：\n基于 OpenVZ 虚拟化技术的 VPS 需要开启TUN/TAP才能正常使用，购买 VPS 时请先咨询服务商是否支持开启 TUN/TAP。\n\nOpenVZ 虚拟的 VPS 需要系统内核支持 IPSec 才行。也就是说，母服务器的内核如果不支持的话那就没办法，只能换 VPS。\n因此，一般不建议在 OpenVZ 的 VPS 上安装本脚本。脚本如果检测到该 VPS 为 OpenVZ 架构，会出现警告提醒。\n\n###### 如何检测是否支持TUN模块？\n执行命令：\n`cat /dev/net/tun`  \n如果返回信息为：\ncat: /dev/net/tun: File descriptor in bad state\n说明正常\n\n###### 如何检测是否支持ppp模块？\n执行命令：\n`cat /dev/ppp`  \n如果返回信息为：cat: /dev/ppp: No such device or address 说明正常\n\n当然，脚本在安装时也会执行检查，如果不适用于安装，脚本会予以提示。\n\n#### 使用方法：\n\nroot 用户登录后，运行以下命令：  \n```\nwget --no-check-certificate https://raw.githubusercontent.com/teddysun/across/master/l2tp.sh\nchmod +x l2tp.sh\n./l2tp.sh\n```\n执行后，会有如下交互界面  \n<img src=\"https://teddysun.com/wp-content/uploads/2016/l2tp_1.png\" width=400>\n\nPlease input IP-Range:\n(Default Range: 192.168.18):\n输入本地IP段范围（本地电脑连接到VPS后给分配的一个本地IP地址），直接回车意味着输入默认值192.168.18\n\nPlease input PSK:\n(Default PSK: teddysun.com):\nPSK意为预共享密钥，即指定一个密钥将来在连接时需要用到，直接回车意味着输入默认值teddysun.com\n\nPlease input Username:\n(Default Username: teddysun):\nUsername意为用户名，即第一个默认用户。直接回车意味着输入默认值teddysun\n\nPlease input teddysun’s password:\n(Default Password: Q4SKhu2EXQ):\n输入用户的密码，默认会随机生成一个10位包含大小写字母和数字的密码，当然你也可以指定密码。\n\nServerIP:your_server_main_IP\n显示你的 VPS 的主 IP（如果是多 IP 的 VPS 也只显示一个）\n\nServer Local IP:192.168.18.1\n显示你的 VPS 的本地 IP（默认即可）\n\nClient Remote IP Range:192.168.18.2-192.168.18.254\n显示 IP 段范围\n\nPSK:teddysun.com\n显示 PSK\n\nPress any key to start…or Press Ctrl+c to cancel\n按下任意按键继续，如果想取消安装，请按Ctrl+c键\n\n安装完成后，脚本会执行 ipsec verify 命令并提示如下：  \n\n```\nIf there are no [FAILED] above, then you can connect to your\nL2TP VPN Server with the default Username/Password is below:\n\nServerIP:your_server_IP\nPSK:your PSK\nUsername:your usename\nPassword:your password\n\nIf you want to modify user settings, please use command(s):\nl2tp -a (Add a user)\nl2tp -d (Delete a user)\nl2tp -l (List all users)\nl2tp -m (Modify a user password)\nWelcome to visit https://teddysun.com/448.html\nEnjoy it!\n```\n\n如果你要想对用户进行操作，可以使用如下命令：  \nl2tp -a 新增用户  \nl2tp -d 删除用户  \nl2tp -m 修改现有的用户的密码  \nl2tp -l 列出所有用户名和密码  \nl2tp -h 列出帮助信息  \n\n###### 其他事项：\n\n1、脚本在安装完成后，已自动启动进程，并加入了开机自启动。  \n2、脚本会改写 iptables 或 firewalld 的规则。  \n3、脚本安装时，会即时将安装日志写到 /root/l2tp.log 文件里，如果你安装失败，可以通过此文件来寻找错误信息。  \n\n###### 使用命令：\nipsec status （查看 IPSec 运行状态）  \nipsec verify （查看 IPSec 检查结果）  \n/etc/init.d/ipsec start|stop|restart|status （CentOS6 下使用）  \n/etc/init.d/xl2tpd start|stop|restart （CentOS6 下使用）  \nsystemctl start|stop|restart|status ipsec （CentOS7 下使用）  \nsystemctl start|stop|restart xl2tpd （CentOS7 下使用）  \nservice ipsec start|stop|restart|status （Debian/Ubuntu 下使用）  \nservice xl2tpd start|stop|restart （Debian/Ubuntu 下使用）  \n\n###### 更新日志\n\n2017 年 05 月 28 日：  \n升级 libreswan 到版本 3.20。  \n修正 libreswan 的若干配置问题。  \n修正 xl2tpd 的端口监听配置问题。  \n修正在 CentOS 6 对 libevent2 的依赖问题，改为 yum 安装 libevent2-devel。  \n测试表明，在内网环境的 VPS 里（如AWS， IDCF，GCE，腾讯云，阿里云等）也可以正常使用了。  \n\n2017 年 02 月 25 日：  \n升级 libreswan 到版本 3.19。  \n\n2016 年 09 月 12 日：  \n修正了在 CentOS 6 下 libevent2 依赖的问题；  \n新增了一个 -m 选项，用以修改现有用户的密码。  \n\n2016 年 08 月 13 日：  \n修正 Debian 8 下的 sd-daemon.h: No such file or directory 问题，是由于缺少依赖包 libsystemd-daemon-dev 导致的。\n\n2016 年 08 月 05 日：  \n升级 libreswan 到版本 3.18。  \n\n2016 年 06 月 10 日：  \n脚本在安装完成后，新增了几个命令，便于操作用户  \nl2tp -a 新增用户  \nl2tp -d 删除用户  \nl2tp -l 列出所有用户  \nl2tp -h 列出帮助信息  \n\n2016 年 04 月 25 日：  \n4、在 Vultr 的 Debian 7的系统模板下安装时，软件包 libcurl4-nss-dev 会出现依赖错误。如下所示：  \n\n```\nThe following packages have unmet dependencies:\nlibcurl4-nss-dev : Depends: libldap2-dev but it is not going to be installed\nDepends: librtmp-dev but it is not going to be installed\n```\n\n而 libldap2-dev 和 librtmp-dev 又依赖了其他几种软件包。总之最后的依赖关系如下：\n\n```\nlibldap2-dev : Depends: libldap-2.4-2 (= 2.4.31-2+deb7u1) but 2.4.31+really2.4.40+dfsg-1+deb8u1~bpo70+1 is to be installed\nlibrtmp-dev : Depends: libgnutls-dev but it is not going to be installed\nlibgnutls-dev : Depends: libp11-kit-dev (>= 0.4) but it is not going to be installed\nlibp11-kit-dev : Depends: libp11-kit0 (= 0.12-3) but 0.20.7-1~bpo70+1 is to be installed\n```\n\n那么解决办法就是把最底层的依赖包 libp11-kit0 先卸载掉，然后再安装 libcurl4-nss-dev 即可。\n\n```\napt-get -y remove libp11-kit0\napt-get -y --no-install-recommends install libcurl4-nss-dev wget\n```\n\n然后再运行脚本安装即可。\n\n2016 年 04 月 22 日：  \n修复了在 Ubuntu 16.04 下因为默认缺少 python 命令而导致 ipsec verify 等命令不能用的问题。\n\n2016 年 04 月 19 日：  \n修复了在 Debian 7 下因为 libnss3 和 libnspr4 的版本过低而导致编译 libreswan 失败的问题。\n\n2016 年 04 月 18 日：  \n目前在 Debian 7 上测试的结果，因为 libnss3 和 libnspr4 的版本过低而导致编译 libreswan 失败。临时解决办法是 dpkg 安装 libnss3_3.17.2 和 libnspr4_4.10.7 的 deb 包后重试。\n\n---\n本内容来源于：https://teddysun.com/448.html\n","source":"_posts/L2TP:IPSec一键安装脚本.md","raw":"title: L2TP/IPSec一键安装脚本\ndate: 2020-03-12 21:00\ntoc: true\n\n---\n#### 本脚本适用环境：\n系统支持：CentOS6+，Debian7+，Ubuntu12+\n内存要求：≥128M\n更新日期：2017 年 05 月 28 日\n\n#### 关于本脚本：\n名词解释如下\nL2TP（Layer 2 Tunneling Protocol）\nIPSec（Internet Protocol Security）\nIKEv2 (Internet Key Exchange v2)\n能实现 IPsec 的目前总体上有 openswan，libreswan，strongswan 这3种。\nlibreswan 是基于 openswan 的 fork，所以现在各个发行版基本已经看不到 openswan 的身影了。\n当然也有使用 strongswan 的。\n\n之所以要更新 L2TP 一键安装脚本，是因为随着各个 Linux 发行版不断推陈出新，原有的脚本已经不适应现在的需求。\n本脚本通过编译安装最新版 libreswan 来实现 IPSec（CentOS7 下则是全部 yum 安装），yum 或 apt-get 来安装 xl2tpd，再根据各个发行版的使用方法不同，部署防火墙规则。\n\n#### 写在前面：\n基于 OpenVZ 虚拟化技术的 VPS 需要开启TUN/TAP才能正常使用，购买 VPS 时请先咨询服务商是否支持开启 TUN/TAP。\n\nOpenVZ 虚拟的 VPS 需要系统内核支持 IPSec 才行。也就是说，母服务器的内核如果不支持的话那就没办法，只能换 VPS。\n因此，一般不建议在 OpenVZ 的 VPS 上安装本脚本。脚本如果检测到该 VPS 为 OpenVZ 架构，会出现警告提醒。\n\n###### 如何检测是否支持TUN模块？\n执行命令：\n`cat /dev/net/tun`  \n如果返回信息为：\ncat: /dev/net/tun: File descriptor in bad state\n说明正常\n\n###### 如何检测是否支持ppp模块？\n执行命令：\n`cat /dev/ppp`  \n如果返回信息为：cat: /dev/ppp: No such device or address 说明正常\n\n当然，脚本在安装时也会执行检查，如果不适用于安装，脚本会予以提示。\n\n#### 使用方法：\n\nroot 用户登录后，运行以下命令：  \n```\nwget --no-check-certificate https://raw.githubusercontent.com/teddysun/across/master/l2tp.sh\nchmod +x l2tp.sh\n./l2tp.sh\n```\n执行后，会有如下交互界面  \n<img src=\"https://teddysun.com/wp-content/uploads/2016/l2tp_1.png\" width=400>\n\nPlease input IP-Range:\n(Default Range: 192.168.18):\n输入本地IP段范围（本地电脑连接到VPS后给分配的一个本地IP地址），直接回车意味着输入默认值192.168.18\n\nPlease input PSK:\n(Default PSK: teddysun.com):\nPSK意为预共享密钥，即指定一个密钥将来在连接时需要用到，直接回车意味着输入默认值teddysun.com\n\nPlease input Username:\n(Default Username: teddysun):\nUsername意为用户名，即第一个默认用户。直接回车意味着输入默认值teddysun\n\nPlease input teddysun’s password:\n(Default Password: Q4SKhu2EXQ):\n输入用户的密码，默认会随机生成一个10位包含大小写字母和数字的密码，当然你也可以指定密码。\n\nServerIP:your_server_main_IP\n显示你的 VPS 的主 IP（如果是多 IP 的 VPS 也只显示一个）\n\nServer Local IP:192.168.18.1\n显示你的 VPS 的本地 IP（默认即可）\n\nClient Remote IP Range:192.168.18.2-192.168.18.254\n显示 IP 段范围\n\nPSK:teddysun.com\n显示 PSK\n\nPress any key to start…or Press Ctrl+c to cancel\n按下任意按键继续，如果想取消安装，请按Ctrl+c键\n\n安装完成后，脚本会执行 ipsec verify 命令并提示如下：  \n\n```\nIf there are no [FAILED] above, then you can connect to your\nL2TP VPN Server with the default Username/Password is below:\n\nServerIP:your_server_IP\nPSK:your PSK\nUsername:your usename\nPassword:your password\n\nIf you want to modify user settings, please use command(s):\nl2tp -a (Add a user)\nl2tp -d (Delete a user)\nl2tp -l (List all users)\nl2tp -m (Modify a user password)\nWelcome to visit https://teddysun.com/448.html\nEnjoy it!\n```\n\n如果你要想对用户进行操作，可以使用如下命令：  \nl2tp -a 新增用户  \nl2tp -d 删除用户  \nl2tp -m 修改现有的用户的密码  \nl2tp -l 列出所有用户名和密码  \nl2tp -h 列出帮助信息  \n\n###### 其他事项：\n\n1、脚本在安装完成后，已自动启动进程，并加入了开机自启动。  \n2、脚本会改写 iptables 或 firewalld 的规则。  \n3、脚本安装时，会即时将安装日志写到 /root/l2tp.log 文件里，如果你安装失败，可以通过此文件来寻找错误信息。  \n\n###### 使用命令：\nipsec status （查看 IPSec 运行状态）  \nipsec verify （查看 IPSec 检查结果）  \n/etc/init.d/ipsec start|stop|restart|status （CentOS6 下使用）  \n/etc/init.d/xl2tpd start|stop|restart （CentOS6 下使用）  \nsystemctl start|stop|restart|status ipsec （CentOS7 下使用）  \nsystemctl start|stop|restart xl2tpd （CentOS7 下使用）  \nservice ipsec start|stop|restart|status （Debian/Ubuntu 下使用）  \nservice xl2tpd start|stop|restart （Debian/Ubuntu 下使用）  \n\n###### 更新日志\n\n2017 年 05 月 28 日：  \n升级 libreswan 到版本 3.20。  \n修正 libreswan 的若干配置问题。  \n修正 xl2tpd 的端口监听配置问题。  \n修正在 CentOS 6 对 libevent2 的依赖问题，改为 yum 安装 libevent2-devel。  \n测试表明，在内网环境的 VPS 里（如AWS， IDCF，GCE，腾讯云，阿里云等）也可以正常使用了。  \n\n2017 年 02 月 25 日：  \n升级 libreswan 到版本 3.19。  \n\n2016 年 09 月 12 日：  \n修正了在 CentOS 6 下 libevent2 依赖的问题；  \n新增了一个 -m 选项，用以修改现有用户的密码。  \n\n2016 年 08 月 13 日：  \n修正 Debian 8 下的 sd-daemon.h: No such file or directory 问题，是由于缺少依赖包 libsystemd-daemon-dev 导致的。\n\n2016 年 08 月 05 日：  \n升级 libreswan 到版本 3.18。  \n\n2016 年 06 月 10 日：  \n脚本在安装完成后，新增了几个命令，便于操作用户  \nl2tp -a 新增用户  \nl2tp -d 删除用户  \nl2tp -l 列出所有用户  \nl2tp -h 列出帮助信息  \n\n2016 年 04 月 25 日：  \n4、在 Vultr 的 Debian 7的系统模板下安装时，软件包 libcurl4-nss-dev 会出现依赖错误。如下所示：  \n\n```\nThe following packages have unmet dependencies:\nlibcurl4-nss-dev : Depends: libldap2-dev but it is not going to be installed\nDepends: librtmp-dev but it is not going to be installed\n```\n\n而 libldap2-dev 和 librtmp-dev 又依赖了其他几种软件包。总之最后的依赖关系如下：\n\n```\nlibldap2-dev : Depends: libldap-2.4-2 (= 2.4.31-2+deb7u1) but 2.4.31+really2.4.40+dfsg-1+deb8u1~bpo70+1 is to be installed\nlibrtmp-dev : Depends: libgnutls-dev but it is not going to be installed\nlibgnutls-dev : Depends: libp11-kit-dev (>= 0.4) but it is not going to be installed\nlibp11-kit-dev : Depends: libp11-kit0 (= 0.12-3) but 0.20.7-1~bpo70+1 is to be installed\n```\n\n那么解决办法就是把最底层的依赖包 libp11-kit0 先卸载掉，然后再安装 libcurl4-nss-dev 即可。\n\n```\napt-get -y remove libp11-kit0\napt-get -y --no-install-recommends install libcurl4-nss-dev wget\n```\n\n然后再运行脚本安装即可。\n\n2016 年 04 月 22 日：  \n修复了在 Ubuntu 16.04 下因为默认缺少 python 命令而导致 ipsec verify 等命令不能用的问题。\n\n2016 年 04 月 19 日：  \n修复了在 Debian 7 下因为 libnss3 和 libnspr4 的版本过低而导致编译 libreswan 失败的问题。\n\n2016 年 04 月 18 日：  \n目前在 Debian 7 上测试的结果，因为 libnss3 和 libnspr4 的版本过低而导致编译 libreswan 失败。临时解决办法是 dpkg 安装 libnss3_3.17.2 和 libnspr4_4.10.7 的 deb 包后重试。\n\n---\n本内容来源于：https://teddysun.com/448.html\n","slug":"L2TP:IPSec一键安装脚本","published":1,"updated":"2020-04-20T09:55:05.692Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6fu000deiudfhzgo9s9","content":"<h4 id=\"本脚本适用环境：\"><a href=\"#本脚本适用环境：\" class=\"headerlink\" title=\"本脚本适用环境：\"></a>本脚本适用环境：</h4><p>系统支持：CentOS6+，Debian7+，Ubuntu12+<br>内存要求：≥128M<br>更新日期：2017 年 05 月 28 日</p>\n<h4 id=\"关于本脚本：\"><a href=\"#关于本脚本：\" class=\"headerlink\" title=\"关于本脚本：\"></a>关于本脚本：</h4><p>名词解释如下<br>L2TP（Layer 2 Tunneling Protocol）<br>IPSec（Internet Protocol Security）<br>IKEv2 (Internet Key Exchange v2)<br>能实现 IPsec 的目前总体上有 openswan，libreswan，strongswan 这3种。<br>libreswan 是基于 openswan 的 fork，所以现在各个发行版基本已经看不到 openswan 的身影了。<br>当然也有使用 strongswan 的。</p>\n<p>之所以要更新 L2TP 一键安装脚本，是因为随着各个 Linux 发行版不断推陈出新，原有的脚本已经不适应现在的需求。<br>本脚本通过编译安装最新版 libreswan 来实现 IPSec（CentOS7 下则是全部 yum 安装），yum 或 apt-get 来安装 xl2tpd，再根据各个发行版的使用方法不同，部署防火墙规则。</p>\n<h4 id=\"写在前面：\"><a href=\"#写在前面：\" class=\"headerlink\" title=\"写在前面：\"></a>写在前面：</h4><p>基于 OpenVZ 虚拟化技术的 VPS 需要开启TUN/TAP才能正常使用，购买 VPS 时请先咨询服务商是否支持开启 TUN/TAP。</p>\n<p>OpenVZ 虚拟的 VPS 需要系统内核支持 IPSec 才行。也就是说，母服务器的内核如果不支持的话那就没办法，只能换 VPS。<br>因此，一般不建议在 OpenVZ 的 VPS 上安装本脚本。脚本如果检测到该 VPS 为 OpenVZ 架构，会出现警告提醒。</p>\n<h6 id=\"如何检测是否支持TUN模块？\"><a href=\"#如何检测是否支持TUN模块？\" class=\"headerlink\" title=\"如何检测是否支持TUN模块？\"></a>如何检测是否支持TUN模块？</h6><p>执行命令：<br><code>cat /dev/net/tun</code><br>如果返回信息为：<br>cat: /dev/net/tun: File descriptor in bad state<br>说明正常</p>\n<h6 id=\"如何检测是否支持ppp模块？\"><a href=\"#如何检测是否支持ppp模块？\" class=\"headerlink\" title=\"如何检测是否支持ppp模块？\"></a>如何检测是否支持ppp模块？</h6><p>执行命令：<br><code>cat /dev/ppp</code><br>如果返回信息为：cat: /dev/ppp: No such device or address 说明正常</p>\n<p>当然，脚本在安装时也会执行检查，如果不适用于安装，脚本会予以提示。</p>\n<h4 id=\"使用方法：\"><a href=\"#使用方法：\" class=\"headerlink\" title=\"使用方法：\"></a>使用方法：</h4><p>root 用户登录后，运行以下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/across/master/l2tp.sh</span><br><span class=\"line\">chmod +x l2tp.sh</span><br><span class=\"line\">./l2tp.sh</span><br></pre></td></tr></table></figure></p>\n<p>执行后，会有如下交互界面<br><img src=\"https://teddysun.com/wp-content/uploads/2016/l2tp_1.png\" width=\"400\"></p>\n<p>Please input IP-Range:<br>(Default Range: 192.168.18):<br>输入本地IP段范围（本地电脑连接到VPS后给分配的一个本地IP地址），直接回车意味着输入默认值192.168.18</p>\n<p>Please input PSK:<br>(Default PSK: teddysun.com):<br>PSK意为预共享密钥，即指定一个密钥将来在连接时需要用到，直接回车意味着输入默认值teddysun.com</p>\n<p>Please input Username:<br>(Default Username: teddysun):<br>Username意为用户名，即第一个默认用户。直接回车意味着输入默认值teddysun</p>\n<p>Please input teddysun’s password:<br>(Default Password: Q4SKhu2EXQ):<br>输入用户的密码，默认会随机生成一个10位包含大小写字母和数字的密码，当然你也可以指定密码。</p>\n<p>ServerIP:your_server_main_IP<br>显示你的 VPS 的主 IP（如果是多 IP 的 VPS 也只显示一个）</p>\n<p>Server Local IP:192.168.18.1<br>显示你的 VPS 的本地 IP（默认即可）</p>\n<p>Client Remote IP Range:192.168.18.2-192.168.18.254<br>显示 IP 段范围</p>\n<p>PSK:teddysun.com<br>显示 PSK</p>\n<p>Press any key to start…or Press Ctrl+c to cancel<br>按下任意按键继续，如果想取消安装，请按Ctrl+c键</p>\n<p>安装完成后，脚本会执行 ipsec verify 命令并提示如下：  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">If there are no [FAILED] above, then you can connect to your</span><br><span class=\"line\">L2TP VPN Server with the default Username/Password is below:</span><br><span class=\"line\"></span><br><span class=\"line\">ServerIP:your_server_IP</span><br><span class=\"line\">PSK:your PSK</span><br><span class=\"line\">Username:your usename</span><br><span class=\"line\">Password:your password</span><br><span class=\"line\"></span><br><span class=\"line\">If you want to modify user settings, please use command(s):</span><br><span class=\"line\">l2tp -a (Add a user)</span><br><span class=\"line\">l2tp -d (Delete a user)</span><br><span class=\"line\">l2tp -l (List all users)</span><br><span class=\"line\">l2tp -m (Modify a user password)</span><br><span class=\"line\">Welcome to visit https://teddysun.com/448.html</span><br><span class=\"line\">Enjoy it!</span><br></pre></td></tr></table></figure>\n<p>如果你要想对用户进行操作，可以使用如下命令：<br>l2tp -a 新增用户<br>l2tp -d 删除用户<br>l2tp -m 修改现有的用户的密码<br>l2tp -l 列出所有用户名和密码<br>l2tp -h 列出帮助信息  </p>\n<h6 id=\"其他事项：\"><a href=\"#其他事项：\" class=\"headerlink\" title=\"其他事项：\"></a>其他事项：</h6><p>1、脚本在安装完成后，已自动启动进程，并加入了开机自启动。<br>2、脚本会改写 iptables 或 firewalld 的规则。<br>3、脚本安装时，会即时将安装日志写到 /root/l2tp.log 文件里，如果你安装失败，可以通过此文件来寻找错误信息。  </p>\n<h6 id=\"使用命令：\"><a href=\"#使用命令：\" class=\"headerlink\" title=\"使用命令：\"></a>使用命令：</h6><p>ipsec status （查看 IPSec 运行状态）<br>ipsec verify （查看 IPSec 检查结果）<br>/etc/init.d/ipsec start|stop|restart|status （CentOS6 下使用）<br>/etc/init.d/xl2tpd start|stop|restart （CentOS6 下使用）<br>systemctl start|stop|restart|status ipsec （CentOS7 下使用）<br>systemctl start|stop|restart xl2tpd （CentOS7 下使用）<br>service ipsec start|stop|restart|status （Debian/Ubuntu 下使用）<br>service xl2tpd start|stop|restart （Debian/Ubuntu 下使用）  </p>\n<h6 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h6><p>2017 年 05 月 28 日：<br>升级 libreswan 到版本 3.20。<br>修正 libreswan 的若干配置问题。<br>修正 xl2tpd 的端口监听配置问题。<br>修正在 CentOS 6 对 libevent2 的依赖问题，改为 yum 安装 libevent2-devel。<br>测试表明，在内网环境的 VPS 里（如AWS， IDCF，GCE，腾讯云，阿里云等）也可以正常使用了。  </p>\n<p>2017 年 02 月 25 日：<br>升级 libreswan 到版本 3.19。  </p>\n<p>2016 年 09 月 12 日：<br>修正了在 CentOS 6 下 libevent2 依赖的问题；<br>新增了一个 -m 选项，用以修改现有用户的密码。  </p>\n<p>2016 年 08 月 13 日：<br>修正 Debian 8 下的 sd-daemon.h: No such file or directory 问题，是由于缺少依赖包 libsystemd-daemon-dev 导致的。</p>\n<p>2016 年 08 月 05 日：<br>升级 libreswan 到版本 3.18。  </p>\n<p>2016 年 06 月 10 日：<br>脚本在安装完成后，新增了几个命令，便于操作用户<br>l2tp -a 新增用户<br>l2tp -d 删除用户<br>l2tp -l 列出所有用户<br>l2tp -h 列出帮助信息  </p>\n<p>2016 年 04 月 25 日：<br>4、在 Vultr 的 Debian 7的系统模板下安装时，软件包 libcurl4-nss-dev 会出现依赖错误。如下所示：  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The following packages have unmet dependencies:</span><br><span class=\"line\">libcurl4-nss-dev : Depends: libldap2-dev but it is not going to be installed</span><br><span class=\"line\">Depends: librtmp-dev but it is not going to be installed</span><br></pre></td></tr></table></figure>\n<p>而 libldap2-dev 和 librtmp-dev 又依赖了其他几种软件包。总之最后的依赖关系如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">libldap2-dev : Depends: libldap-2.4-2 (= 2.4.31-2+deb7u1) but 2.4.31+really2.4.40+dfsg-1+deb8u1~bpo70+1 is to be installed</span><br><span class=\"line\">librtmp-dev : Depends: libgnutls-dev but it is not going to be installed</span><br><span class=\"line\">libgnutls-dev : Depends: libp11-kit-dev (&gt;= 0.4) but it is not going to be installed</span><br><span class=\"line\">libp11-kit-dev : Depends: libp11-kit0 (= 0.12-3) but 0.20.7-1~bpo70+1 is to be installed</span><br></pre></td></tr></table></figure>\n<p>那么解决办法就是把最底层的依赖包 libp11-kit0 先卸载掉，然后再安装 libcurl4-nss-dev 即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get -y remove libp11-kit0</span><br><span class=\"line\">apt-get -y --no-install-recommends install libcurl4-nss-dev wget</span><br></pre></td></tr></table></figure>\n<p>然后再运行脚本安装即可。</p>\n<p>2016 年 04 月 22 日：<br>修复了在 Ubuntu 16.04 下因为默认缺少 python 命令而导致 ipsec verify 等命令不能用的问题。</p>\n<p>2016 年 04 月 19 日：<br>修复了在 Debian 7 下因为 libnss3 和 libnspr4 的版本过低而导致编译 libreswan 失败的问题。</p>\n<p>2016 年 04 月 18 日：<br>目前在 Debian 7 上测试的结果，因为 libnss3 和 libnspr4 的版本过低而导致编译 libreswan 失败。临时解决办法是 dpkg 安装 libnss3_3.17.2 和 libnspr4_4.10.7 的 deb 包后重试。</p>\n<hr>\n<p>本内容来源于：<a href=\"https://teddysun.com/448.html\" target=\"_blank\" rel=\"noopener\">https://teddysun.com/448.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"本脚本适用环境：\"><a href=\"#本脚本适用环境：\" class=\"headerlink\" title=\"本脚本适用环境：\"></a>本脚本适用环境：</h4><p>系统支持：CentOS6+，Debian7+，Ubuntu12+<br>内存要求：≥128M<br>更新日期：2017 年 05 月 28 日</p>\n<h4 id=\"关于本脚本：\"><a href=\"#关于本脚本：\" class=\"headerlink\" title=\"关于本脚本：\"></a>关于本脚本：</h4><p>名词解释如下<br>L2TP（Layer 2 Tunneling Protocol）<br>IPSec（Internet Protocol Security）<br>IKEv2 (Internet Key Exchange v2)<br>能实现 IPsec 的目前总体上有 openswan，libreswan，strongswan 这3种。<br>libreswan 是基于 openswan 的 fork，所以现在各个发行版基本已经看不到 openswan 的身影了。<br>当然也有使用 strongswan 的。</p>\n<p>之所以要更新 L2TP 一键安装脚本，是因为随着各个 Linux 发行版不断推陈出新，原有的脚本已经不适应现在的需求。<br>本脚本通过编译安装最新版 libreswan 来实现 IPSec（CentOS7 下则是全部 yum 安装），yum 或 apt-get 来安装 xl2tpd，再根据各个发行版的使用方法不同，部署防火墙规则。</p>\n<h4 id=\"写在前面：\"><a href=\"#写在前面：\" class=\"headerlink\" title=\"写在前面：\"></a>写在前面：</h4><p>基于 OpenVZ 虚拟化技术的 VPS 需要开启TUN/TAP才能正常使用，购买 VPS 时请先咨询服务商是否支持开启 TUN/TAP。</p>\n<p>OpenVZ 虚拟的 VPS 需要系统内核支持 IPSec 才行。也就是说，母服务器的内核如果不支持的话那就没办法，只能换 VPS。<br>因此，一般不建议在 OpenVZ 的 VPS 上安装本脚本。脚本如果检测到该 VPS 为 OpenVZ 架构，会出现警告提醒。</p>\n<h6 id=\"如何检测是否支持TUN模块？\"><a href=\"#如何检测是否支持TUN模块？\" class=\"headerlink\" title=\"如何检测是否支持TUN模块？\"></a>如何检测是否支持TUN模块？</h6><p>执行命令：<br><code>cat /dev/net/tun</code><br>如果返回信息为：<br>cat: /dev/net/tun: File descriptor in bad state<br>说明正常</p>\n<h6 id=\"如何检测是否支持ppp模块？\"><a href=\"#如何检测是否支持ppp模块？\" class=\"headerlink\" title=\"如何检测是否支持ppp模块？\"></a>如何检测是否支持ppp模块？</h6><p>执行命令：<br><code>cat /dev/ppp</code><br>如果返回信息为：cat: /dev/ppp: No such device or address 说明正常</p>\n<p>当然，脚本在安装时也会执行检查，如果不适用于安装，脚本会予以提示。</p>\n<h4 id=\"使用方法：\"><a href=\"#使用方法：\" class=\"headerlink\" title=\"使用方法：\"></a>使用方法：</h4><p>root 用户登录后，运行以下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/across/master/l2tp.sh</span><br><span class=\"line\">chmod +x l2tp.sh</span><br><span class=\"line\">./l2tp.sh</span><br></pre></td></tr></table></figure></p>\n<p>执行后，会有如下交互界面<br><img src=\"https://teddysun.com/wp-content/uploads/2016/l2tp_1.png\" width=\"400\"></p>\n<p>Please input IP-Range:<br>(Default Range: 192.168.18):<br>输入本地IP段范围（本地电脑连接到VPS后给分配的一个本地IP地址），直接回车意味着输入默认值192.168.18</p>\n<p>Please input PSK:<br>(Default PSK: teddysun.com):<br>PSK意为预共享密钥，即指定一个密钥将来在连接时需要用到，直接回车意味着输入默认值teddysun.com</p>\n<p>Please input Username:<br>(Default Username: teddysun):<br>Username意为用户名，即第一个默认用户。直接回车意味着输入默认值teddysun</p>\n<p>Please input teddysun’s password:<br>(Default Password: Q4SKhu2EXQ):<br>输入用户的密码，默认会随机生成一个10位包含大小写字母和数字的密码，当然你也可以指定密码。</p>\n<p>ServerIP:your_server_main_IP<br>显示你的 VPS 的主 IP（如果是多 IP 的 VPS 也只显示一个）</p>\n<p>Server Local IP:192.168.18.1<br>显示你的 VPS 的本地 IP（默认即可）</p>\n<p>Client Remote IP Range:192.168.18.2-192.168.18.254<br>显示 IP 段范围</p>\n<p>PSK:teddysun.com<br>显示 PSK</p>\n<p>Press any key to start…or Press Ctrl+c to cancel<br>按下任意按键继续，如果想取消安装，请按Ctrl+c键</p>\n<p>安装完成后，脚本会执行 ipsec verify 命令并提示如下：  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">If there are no [FAILED] above, then you can connect to your</span><br><span class=\"line\">L2TP VPN Server with the default Username/Password is below:</span><br><span class=\"line\"></span><br><span class=\"line\">ServerIP:your_server_IP</span><br><span class=\"line\">PSK:your PSK</span><br><span class=\"line\">Username:your usename</span><br><span class=\"line\">Password:your password</span><br><span class=\"line\"></span><br><span class=\"line\">If you want to modify user settings, please use command(s):</span><br><span class=\"line\">l2tp -a (Add a user)</span><br><span class=\"line\">l2tp -d (Delete a user)</span><br><span class=\"line\">l2tp -l (List all users)</span><br><span class=\"line\">l2tp -m (Modify a user password)</span><br><span class=\"line\">Welcome to visit https://teddysun.com/448.html</span><br><span class=\"line\">Enjoy it!</span><br></pre></td></tr></table></figure>\n<p>如果你要想对用户进行操作，可以使用如下命令：<br>l2tp -a 新增用户<br>l2tp -d 删除用户<br>l2tp -m 修改现有的用户的密码<br>l2tp -l 列出所有用户名和密码<br>l2tp -h 列出帮助信息  </p>\n<h6 id=\"其他事项：\"><a href=\"#其他事项：\" class=\"headerlink\" title=\"其他事项：\"></a>其他事项：</h6><p>1、脚本在安装完成后，已自动启动进程，并加入了开机自启动。<br>2、脚本会改写 iptables 或 firewalld 的规则。<br>3、脚本安装时，会即时将安装日志写到 /root/l2tp.log 文件里，如果你安装失败，可以通过此文件来寻找错误信息。  </p>\n<h6 id=\"使用命令：\"><a href=\"#使用命令：\" class=\"headerlink\" title=\"使用命令：\"></a>使用命令：</h6><p>ipsec status （查看 IPSec 运行状态）<br>ipsec verify （查看 IPSec 检查结果）<br>/etc/init.d/ipsec start|stop|restart|status （CentOS6 下使用）<br>/etc/init.d/xl2tpd start|stop|restart （CentOS6 下使用）<br>systemctl start|stop|restart|status ipsec （CentOS7 下使用）<br>systemctl start|stop|restart xl2tpd （CentOS7 下使用）<br>service ipsec start|stop|restart|status （Debian/Ubuntu 下使用）<br>service xl2tpd start|stop|restart （Debian/Ubuntu 下使用）  </p>\n<h6 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h6><p>2017 年 05 月 28 日：<br>升级 libreswan 到版本 3.20。<br>修正 libreswan 的若干配置问题。<br>修正 xl2tpd 的端口监听配置问题。<br>修正在 CentOS 6 对 libevent2 的依赖问题，改为 yum 安装 libevent2-devel。<br>测试表明，在内网环境的 VPS 里（如AWS， IDCF，GCE，腾讯云，阿里云等）也可以正常使用了。  </p>\n<p>2017 年 02 月 25 日：<br>升级 libreswan 到版本 3.19。  </p>\n<p>2016 年 09 月 12 日：<br>修正了在 CentOS 6 下 libevent2 依赖的问题；<br>新增了一个 -m 选项，用以修改现有用户的密码。  </p>\n<p>2016 年 08 月 13 日：<br>修正 Debian 8 下的 sd-daemon.h: No such file or directory 问题，是由于缺少依赖包 libsystemd-daemon-dev 导致的。</p>\n<p>2016 年 08 月 05 日：<br>升级 libreswan 到版本 3.18。  </p>\n<p>2016 年 06 月 10 日：<br>脚本在安装完成后，新增了几个命令，便于操作用户<br>l2tp -a 新增用户<br>l2tp -d 删除用户<br>l2tp -l 列出所有用户<br>l2tp -h 列出帮助信息  </p>\n<p>2016 年 04 月 25 日：<br>4、在 Vultr 的 Debian 7的系统模板下安装时，软件包 libcurl4-nss-dev 会出现依赖错误。如下所示：  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The following packages have unmet dependencies:</span><br><span class=\"line\">libcurl4-nss-dev : Depends: libldap2-dev but it is not going to be installed</span><br><span class=\"line\">Depends: librtmp-dev but it is not going to be installed</span><br></pre></td></tr></table></figure>\n<p>而 libldap2-dev 和 librtmp-dev 又依赖了其他几种软件包。总之最后的依赖关系如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">libldap2-dev : Depends: libldap-2.4-2 (= 2.4.31-2+deb7u1) but 2.4.31+really2.4.40+dfsg-1+deb8u1~bpo70+1 is to be installed</span><br><span class=\"line\">librtmp-dev : Depends: libgnutls-dev but it is not going to be installed</span><br><span class=\"line\">libgnutls-dev : Depends: libp11-kit-dev (&gt;= 0.4) but it is not going to be installed</span><br><span class=\"line\">libp11-kit-dev : Depends: libp11-kit0 (= 0.12-3) but 0.20.7-1~bpo70+1 is to be installed</span><br></pre></td></tr></table></figure>\n<p>那么解决办法就是把最底层的依赖包 libp11-kit0 先卸载掉，然后再安装 libcurl4-nss-dev 即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get -y remove libp11-kit0</span><br><span class=\"line\">apt-get -y --no-install-recommends install libcurl4-nss-dev wget</span><br></pre></td></tr></table></figure>\n<p>然后再运行脚本安装即可。</p>\n<p>2016 年 04 月 22 日：<br>修复了在 Ubuntu 16.04 下因为默认缺少 python 命令而导致 ipsec verify 等命令不能用的问题。</p>\n<p>2016 年 04 月 19 日：<br>修复了在 Debian 7 下因为 libnss3 和 libnspr4 的版本过低而导致编译 libreswan 失败的问题。</p>\n<p>2016 年 04 月 18 日：<br>目前在 Debian 7 上测试的结果，因为 libnss3 和 libnspr4 的版本过低而导致编译 libreswan 失败。临时解决办法是 dpkg 安装 libnss3_3.17.2 和 libnspr4_4.10.7 的 deb 包后重试。</p>\n<hr>\n<p>本内容来源于：<a href=\"https://teddysun.com/448.html\" target=\"_blank\" rel=\"noopener\">https://teddysun.com/448.html</a></p>\n"},{"title":"Linux的几个有趣命令","date":"2018-06-14T06:53:09.000Z","description":"新手必会的几个命令，自娱自乐","toc":true,"feature":null,"_content":"#### sl命令\n\n你会看到一辆小货车从屏幕右边开到了左边～  \n```shell\n安装：sudo apt-get install sl\n运行：sl\n```\n\n\n\n#### fortune命令\n\n输出一句话，有笑话、名言、唐诗宋词等等：\n```shell\n安装：sudo apt-get install fortune\n运行：fortune\n```\n\n\n\n#### cowsay命令\n\n用ASCII字符打印牛、羊等动物。还有`cowthink`命令，这是是奶牛想，命令：\n\n```shell\n安装：sudo apt-get install cowsay\n运行：cowsay -f tux \"坑爹啊～\"\n\ncowsay -l    查看其他动物的名字\ncowsay -f 动物们 \"坑爹啊～\"    可其他动物\n```\n\n#### cmatrix命令\n\n这个是《黑客帝国》里面的代码雨，很cool：\n```shell\n安装：sudo apt-get install cmatrix\n运行：cmatrix\n```\n\n使用`Ctrl+C`程序结束。  \n\n#### figlet、toilet命令\n\n艺术字生成器，由ASCII字符组成，把文本显示成标题栏。此外还有banner这个命令：\n\n```shell\n安装：sudo apt-get install figlet\n    sudo apt-get install toilet\n运行：figlet I LOVE YOU !\n    toilet I LOVE YOU !\n```\n\n此外`toilet`还可以添加颜色\n```shell\ntoilet -f mono -F gay I LOVE YOU !\n```\n\n\n\n#### oneko命令\n\n这个也比较有趣，桌面上出现一只喵星人，会跟着你的鼠标再跑，`Ctrl+C`结束：\n```shell\n安装：sudo apt-get install oneko\n运行：oneko\n```\n\n\n\n#### yes命令\n\n一直输出字符，使用`Ctrl+C`结束：\n```shell\nyes I LOVE YOU !\n```\n\n\n\n#### cal命令\n\n这个是打印日历：\n```shell\ncal 6 2018\n```\n\n# 结尾 #\n\n这些命令是在今日头条看到的，很有趣。\n","source":"_posts/Linux的几个有趣命令.md","raw":"title: Linux的几个有趣命令\ndate: 2018-06-14 14:53:09\ndescription: 新手必会的几个命令，自娱自乐\ncategories: 生活随笔\ntags: [Linux]\ntoc: true\nfeature:\n\n---\n#### sl命令\n\n你会看到一辆小货车从屏幕右边开到了左边～  \n```shell\n安装：sudo apt-get install sl\n运行：sl\n```\n\n\n\n#### fortune命令\n\n输出一句话，有笑话、名言、唐诗宋词等等：\n```shell\n安装：sudo apt-get install fortune\n运行：fortune\n```\n\n\n\n#### cowsay命令\n\n用ASCII字符打印牛、羊等动物。还有`cowthink`命令，这是是奶牛想，命令：\n\n```shell\n安装：sudo apt-get install cowsay\n运行：cowsay -f tux \"坑爹啊～\"\n\ncowsay -l    查看其他动物的名字\ncowsay -f 动物们 \"坑爹啊～\"    可其他动物\n```\n\n#### cmatrix命令\n\n这个是《黑客帝国》里面的代码雨，很cool：\n```shell\n安装：sudo apt-get install cmatrix\n运行：cmatrix\n```\n\n使用`Ctrl+C`程序结束。  \n\n#### figlet、toilet命令\n\n艺术字生成器，由ASCII字符组成，把文本显示成标题栏。此外还有banner这个命令：\n\n```shell\n安装：sudo apt-get install figlet\n    sudo apt-get install toilet\n运行：figlet I LOVE YOU !\n    toilet I LOVE YOU !\n```\n\n此外`toilet`还可以添加颜色\n```shell\ntoilet -f mono -F gay I LOVE YOU !\n```\n\n\n\n#### oneko命令\n\n这个也比较有趣，桌面上出现一只喵星人，会跟着你的鼠标再跑，`Ctrl+C`结束：\n```shell\n安装：sudo apt-get install oneko\n运行：oneko\n```\n\n\n\n#### yes命令\n\n一直输出字符，使用`Ctrl+C`结束：\n```shell\nyes I LOVE YOU !\n```\n\n\n\n#### cal命令\n\n这个是打印日历：\n```shell\ncal 6 2018\n```\n\n# 结尾 #\n\n这些命令是在今日头条看到的，很有趣。\n","slug":"Linux的几个有趣命令","published":1,"updated":"2020-04-20T15:54:14.446Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6fv000eeiudchxtjo4a","content":"<h4 id=\"sl命令\"><a href=\"#sl命令\" class=\"headerlink\" title=\"sl命令\"></a>sl命令</h4><p>你会看到一辆小货车从屏幕右边开到了左边～<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装：sudo apt-get install sl</span><br><span class=\"line\">运行：sl</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"fortune命令\"><a href=\"#fortune命令\" class=\"headerlink\" title=\"fortune命令\"></a>fortune命令</h4><p>输出一句话，有笑话、名言、唐诗宋词等等：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装：sudo apt-get install fortune</span><br><span class=\"line\">运行：fortune</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"cowsay命令\"><a href=\"#cowsay命令\" class=\"headerlink\" title=\"cowsay命令\"></a>cowsay命令</h4><p>用ASCII字符打印牛、羊等动物。还有<code>cowthink</code>命令，这是是奶牛想，命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装：sudo apt-get install cowsay</span><br><span class=\"line\">运行：cowsay -f tux \"坑爹啊～\"</span><br><span class=\"line\"></span><br><span class=\"line\">cowsay -l    查看其他动物的名字</span><br><span class=\"line\">cowsay -f 动物们 \"坑爹啊～\"    可其他动物</span><br></pre></td></tr></table></figure>\n<h4 id=\"cmatrix命令\"><a href=\"#cmatrix命令\" class=\"headerlink\" title=\"cmatrix命令\"></a>cmatrix命令</h4><p>这个是《黑客帝国》里面的代码雨，很cool：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装：sudo apt-get install cmatrix</span><br><span class=\"line\">运行：cmatrix</span><br></pre></td></tr></table></figure></p>\n<p>使用<code>Ctrl+C</code>程序结束。  </p>\n<h4 id=\"figlet、toilet命令\"><a href=\"#figlet、toilet命令\" class=\"headerlink\" title=\"figlet、toilet命令\"></a>figlet、toilet命令</h4><p>艺术字生成器，由ASCII字符组成，把文本显示成标题栏。此外还有banner这个命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装：sudo apt-get install figlet</span><br><span class=\"line\">    sudo apt-get install toilet</span><br><span class=\"line\">运行：figlet I LOVE YOU !</span><br><span class=\"line\">    toilet I LOVE YOU !</span><br></pre></td></tr></table></figure>\n<p>此外<code>toilet</code>还可以添加颜色<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">toilet -f mono -F gay I LOVE YOU !</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"oneko命令\"><a href=\"#oneko命令\" class=\"headerlink\" title=\"oneko命令\"></a>oneko命令</h4><p>这个也比较有趣，桌面上出现一只喵星人，会跟着你的鼠标再跑，<code>Ctrl+C</code>结束：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装：sudo apt-get install oneko</span><br><span class=\"line\">运行：oneko</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"yes命令\"><a href=\"#yes命令\" class=\"headerlink\" title=\"yes命令\"></a>yes命令</h4><p>一直输出字符，使用<code>Ctrl+C</code>结束：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yes I LOVE YOU !</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"cal命令\"><a href=\"#cal命令\" class=\"headerlink\" title=\"cal命令\"></a>cal命令</h4><p>这个是打印日历：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cal 6 2018</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h1><p>这些命令是在今日头条看到的，很有趣。</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"sl命令\"><a href=\"#sl命令\" class=\"headerlink\" title=\"sl命令\"></a>sl命令</h4><p>你会看到一辆小货车从屏幕右边开到了左边～<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装：sudo apt-get install sl</span><br><span class=\"line\">运行：sl</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"fortune命令\"><a href=\"#fortune命令\" class=\"headerlink\" title=\"fortune命令\"></a>fortune命令</h4><p>输出一句话，有笑话、名言、唐诗宋词等等：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装：sudo apt-get install fortune</span><br><span class=\"line\">运行：fortune</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"cowsay命令\"><a href=\"#cowsay命令\" class=\"headerlink\" title=\"cowsay命令\"></a>cowsay命令</h4><p>用ASCII字符打印牛、羊等动物。还有<code>cowthink</code>命令，这是是奶牛想，命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装：sudo apt-get install cowsay</span><br><span class=\"line\">运行：cowsay -f tux \"坑爹啊～\"</span><br><span class=\"line\"></span><br><span class=\"line\">cowsay -l    查看其他动物的名字</span><br><span class=\"line\">cowsay -f 动物们 \"坑爹啊～\"    可其他动物</span><br></pre></td></tr></table></figure>\n<h4 id=\"cmatrix命令\"><a href=\"#cmatrix命令\" class=\"headerlink\" title=\"cmatrix命令\"></a>cmatrix命令</h4><p>这个是《黑客帝国》里面的代码雨，很cool：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装：sudo apt-get install cmatrix</span><br><span class=\"line\">运行：cmatrix</span><br></pre></td></tr></table></figure></p>\n<p>使用<code>Ctrl+C</code>程序结束。  </p>\n<h4 id=\"figlet、toilet命令\"><a href=\"#figlet、toilet命令\" class=\"headerlink\" title=\"figlet、toilet命令\"></a>figlet、toilet命令</h4><p>艺术字生成器，由ASCII字符组成，把文本显示成标题栏。此外还有banner这个命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装：sudo apt-get install figlet</span><br><span class=\"line\">    sudo apt-get install toilet</span><br><span class=\"line\">运行：figlet I LOVE YOU !</span><br><span class=\"line\">    toilet I LOVE YOU !</span><br></pre></td></tr></table></figure>\n<p>此外<code>toilet</code>还可以添加颜色<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">toilet -f mono -F gay I LOVE YOU !</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"oneko命令\"><a href=\"#oneko命令\" class=\"headerlink\" title=\"oneko命令\"></a>oneko命令</h4><p>这个也比较有趣，桌面上出现一只喵星人，会跟着你的鼠标再跑，<code>Ctrl+C</code>结束：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装：sudo apt-get install oneko</span><br><span class=\"line\">运行：oneko</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"yes命令\"><a href=\"#yes命令\" class=\"headerlink\" title=\"yes命令\"></a>yes命令</h4><p>一直输出字符，使用<code>Ctrl+C</code>结束：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yes I LOVE YOU !</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"cal命令\"><a href=\"#cal命令\" class=\"headerlink\" title=\"cal命令\"></a>cal命令</h4><p>这个是打印日历：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cal 6 2018</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h1><p>这些命令是在今日头条看到的，很有趣。</p>\n"},{"title":"eclipse实现自动补全","date":"2020-04-21T07:07:00.000Z","toc":true,"_content":"Preference中：\n\n<img src=\"https://images.shiguangping.com/imgs/20200421150151.png\" width=\"500px\"/>\n\n`Auto activation triggers for Java`的值成：`.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`\n","source":"_posts/eclipse自动补全.md","raw":"title: eclipse实现自动补全\ndate: 2020-04-21 15:07\ntoc: true\n\n---\nPreference中：\n\n<img src=\"https://images.shiguangping.com/imgs/20200421150151.png\" width=\"500px\"/>\n\n`Auto activation triggers for Java`的值成：`.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`\n","slug":"eclipse自动补全","published":1,"updated":"2020-04-21T08:30:55.578Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6fw000feiud4ddtsz0f","content":"<p>Preference中：</p>\n<p><img src=\"https://images.shiguangping.com/imgs/20200421150151.png\" width=\"500px\"></p>\n<p><code>Auto activation triggers for Java</code>的值成：<code>.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</code></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Preference中：</p>\n<p><img src=\"https://images.shiguangping.com/imgs/20200421150151.png\" width=\"500px\"></p>\n<p><code>Auto activation triggers for Java</code>的值成：<code>.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</code></p>\n"},{"title":"hexo g构建静态文件无法生成index.html等文件","date":"2018-06-15T20:12:26.000Z","toc":true,"_content":"### 问题现象\n\n安装好`nodejs`,`git`,`HEXO`之后,在GitHub上重新克隆hexo源文件到本地,然后通过`hexo c`,`hexo g`命令后,`public`文件夹内没有`index.html`等文件。\n\n### 检查npm插件\n\n```shell\nnpm ls --depth 0\n```\n\n通过命令查看缺少的插件,终端会提示很多`npm ERR!`\n\n\n\n### 解决方法\n\n```shell\nnpm install hexo-generator-archive --save\n```\n\n安装后重新`hexo c`,`hexo g`即可.\n\n\n\n### 题外话\n\n我今天通过上述方法解决了没有`index.html`的问题，但是生成的`index.html`是空的。后来发现`themes`文件夹里面的主题文件夹是空的，之后重新下载主题文件放进去就好了。\n\n","source":"_posts/hexo g构建静态文件无法生成index.html等文件.md","raw":"title: hexo g构建静态文件无法生成index.html等文件\ndate: 2018-06-16 04:12:26\ntoc: true\n\n---\n### 问题现象\n\n安装好`nodejs`,`git`,`HEXO`之后,在GitHub上重新克隆hexo源文件到本地,然后通过`hexo c`,`hexo g`命令后,`public`文件夹内没有`index.html`等文件。\n\n### 检查npm插件\n\n```shell\nnpm ls --depth 0\n```\n\n通过命令查看缺少的插件,终端会提示很多`npm ERR!`\n\n\n\n### 解决方法\n\n```shell\nnpm install hexo-generator-archive --save\n```\n\n安装后重新`hexo c`,`hexo g`即可.\n\n\n\n### 题外话\n\n我今天通过上述方法解决了没有`index.html`的问题，但是生成的`index.html`是空的。后来发现`themes`文件夹里面的主题文件夹是空的，之后重新下载主题文件放进去就好了。\n\n","slug":"hexo g构建静态文件无法生成index.html等文件","published":1,"updated":"2020-04-21T14:31:27.391Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6g1000ieiudi3gbw2wx","content":"<h3 id=\"问题现象\"><a href=\"#问题现象\" class=\"headerlink\" title=\"问题现象\"></a>问题现象</h3><p>安装好<code>nodejs</code>,<code>git</code>,<code>HEXO</code>之后,在GitHub上重新克隆hexo源文件到本地,然后通过<code>hexo c</code>,<code>hexo g</code>命令后,<code>public</code>文件夹内没有<code>index.html</code>等文件。</p>\n<h3 id=\"检查npm插件\"><a href=\"#检查npm插件\" class=\"headerlink\" title=\"检查npm插件\"></a>检查npm插件</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm ls --depth 0</span><br></pre></td></tr></table></figure>\n<p>通过命令查看缺少的插件,终端会提示很多<code>npm ERR!</code></p>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-archive --save</span><br></pre></td></tr></table></figure>\n<p>安装后重新<code>hexo c</code>,<code>hexo g</code>即可.</p>\n<h3 id=\"题外话\"><a href=\"#题外话\" class=\"headerlink\" title=\"题外话\"></a>题外话</h3><p>我今天通过上述方法解决了没有<code>index.html</code>的问题，但是生成的<code>index.html</code>是空的。后来发现<code>themes</code>文件夹里面的主题文件夹是空的，之后重新下载主题文件放进去就好了。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"问题现象\"><a href=\"#问题现象\" class=\"headerlink\" title=\"问题现象\"></a>问题现象</h3><p>安装好<code>nodejs</code>,<code>git</code>,<code>HEXO</code>之后,在GitHub上重新克隆hexo源文件到本地,然后通过<code>hexo c</code>,<code>hexo g</code>命令后,<code>public</code>文件夹内没有<code>index.html</code>等文件。</p>\n<h3 id=\"检查npm插件\"><a href=\"#检查npm插件\" class=\"headerlink\" title=\"检查npm插件\"></a>检查npm插件</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm ls --depth 0</span><br></pre></td></tr></table></figure>\n<p>通过命令查看缺少的插件,终端会提示很多<code>npm ERR!</code></p>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-archive --save</span><br></pre></td></tr></table></figure>\n<p>安装后重新<code>hexo c</code>,<code>hexo g</code>即可.</p>\n<h3 id=\"题外话\"><a href=\"#题外话\" class=\"headerlink\" title=\"题外话\"></a>题外话</h3><p>我今天通过上述方法解决了没有<code>index.html</code>的问题，但是生成的<code>index.html</code>是空的。后来发现<code>themes</code>文件夹里面的主题文件夹是空的，之后重新下载主题文件放进去就好了。</p>\n"},{"title":"与铁蛋儿的“一夜情”","date":"2019-09-16T13:20:00.000Z","toc":true,"_content":"铁蛋儿是我昨天晚上捡回来的。  \n\n\n昨晚在楼下电影院看完*郭森斯坦森*和*巨石强森*主演的《速度与激情：特别行动》后回来，在楼下看见了铁蛋儿。  \n\n\n刚看见铁蛋儿时以为是只野猫，因为小区里的野猫特别多，但是小区的野猫都不近人。铁蛋儿看见我之后，走到我腿边儿蹭，我猜它是饿了。  \n\n随后我就把它勾引回家了。  \n\n\n\n\n回到家我给它水，火腿，吃完东西后给它洗澡，洗澡时有点儿抗拒*（猫咪果然天生不喜欢水）*。  \n\n看它傻头傻脑的样儿，给它取了名字叫**铁蛋儿**，感觉特配它的傻气。 \n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/1766375958.jpg \" width=\"400px\"/>\n\n*（今早儿拍的照片，还把以前买的一直没机会戴的猫铃铛给它戴上了）*\n\n\n\n\n当天晚上我到客厅窗边打电话，它就跟着我到了客厅窗台上站着，一动不动。  \n\n\n我回卧室躺着，它也屁颠儿屁颠儿地跑到床上，过一会儿就在我身边睡着了，伴随着猫咪特有的呼噜声。  \n\n期间它醒了几次，不一会儿又睡着了。  \n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/1482629674.jpg\" width=\"400px\"/>\n\n\n\n我在床上躺着开始上网查如何养猫，养猫要注意什么？怎么才能不让它破坏家里面的东西，内心纠结着能不能对它的一生付责任。 \n\n\n\n早晨起来发现它在我家门口旁的袋子上尿尿了，估计是当成猫砂了。我猜铁蛋儿是有主人的。 \n\n结果今早儿，铁蛋儿的主人就在小区群里发了寻猫启事。  \n\n\n\n\n虽然对铁蛋儿有很多的不舍，但我还是联系了铁蛋儿真正的主人。  \n\n\n与其我模棱两可的纠结是否收养它，不如把它交给真正对它好的主人身边吧。  \n\n\n我和铁蛋儿的“一夜情”就这样结束了。  \n\n\n\n*从主人处得知，铁蛋儿是一只约三个多月大的小母猫。*\n\n## 铁蛋儿の写真\n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/2867367599.jpg\" width=\"400px\"/>\n\n\n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/1564673647.jpg\" width=\"400px\"/>\n\n\n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/833197968.jpg\" width=\"400px\"/>\n\n","source":"_posts/与铁蛋儿的“一夜情”.md","raw":"title: 与铁蛋儿的“一夜情”\ndate: 2019-09-16 21:20\ntoc: true\n\n---\n铁蛋儿是我昨天晚上捡回来的。  \n\n\n昨晚在楼下电影院看完*郭森斯坦森*和*巨石强森*主演的《速度与激情：特别行动》后回来，在楼下看见了铁蛋儿。  \n\n\n刚看见铁蛋儿时以为是只野猫，因为小区里的野猫特别多，但是小区的野猫都不近人。铁蛋儿看见我之后，走到我腿边儿蹭，我猜它是饿了。  \n\n随后我就把它勾引回家了。  \n\n\n\n\n回到家我给它水，火腿，吃完东西后给它洗澡，洗澡时有点儿抗拒*（猫咪果然天生不喜欢水）*。  \n\n看它傻头傻脑的样儿，给它取了名字叫**铁蛋儿**，感觉特配它的傻气。 \n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/1766375958.jpg \" width=\"400px\"/>\n\n*（今早儿拍的照片，还把以前买的一直没机会戴的猫铃铛给它戴上了）*\n\n\n\n\n当天晚上我到客厅窗边打电话，它就跟着我到了客厅窗台上站着，一动不动。  \n\n\n我回卧室躺着，它也屁颠儿屁颠儿地跑到床上，过一会儿就在我身边睡着了，伴随着猫咪特有的呼噜声。  \n\n期间它醒了几次，不一会儿又睡着了。  \n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/1482629674.jpg\" width=\"400px\"/>\n\n\n\n我在床上躺着开始上网查如何养猫，养猫要注意什么？怎么才能不让它破坏家里面的东西，内心纠结着能不能对它的一生付责任。 \n\n\n\n早晨起来发现它在我家门口旁的袋子上尿尿了，估计是当成猫砂了。我猜铁蛋儿是有主人的。 \n\n结果今早儿，铁蛋儿的主人就在小区群里发了寻猫启事。  \n\n\n\n\n虽然对铁蛋儿有很多的不舍，但我还是联系了铁蛋儿真正的主人。  \n\n\n与其我模棱两可的纠结是否收养它，不如把它交给真正对它好的主人身边吧。  \n\n\n我和铁蛋儿的“一夜情”就这样结束了。  \n\n\n\n*从主人处得知，铁蛋儿是一只约三个多月大的小母猫。*\n\n## 铁蛋儿の写真\n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/2867367599.jpg\" width=\"400px\"/>\n\n\n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/1564673647.jpg\" width=\"400px\"/>\n\n\n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/833197968.jpg\" width=\"400px\"/>\n\n","slug":"与铁蛋儿的“一夜情”","published":1,"updated":"2020-04-20T16:42:09.800Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6g2000jeiud66j295ls","content":"<p>铁蛋儿是我昨天晚上捡回来的。  </p>\n<p>昨晚在楼下电影院看完<em>郭森斯坦森</em>和<em>巨石强森</em>主演的《速度与激情：特别行动》后回来，在楼下看见了铁蛋儿。  </p>\n<p>刚看见铁蛋儿时以为是只野猫，因为小区里的野猫特别多，但是小区的野猫都不近人。铁蛋儿看见我之后，走到我腿边儿蹭，我猜它是饿了。  </p>\n<p>随后我就把它勾引回家了。  </p>\n<p>回到家我给它水，火腿，吃完东西后给它洗澡，洗澡时有点儿抗拒<em>（猫咪果然天生不喜欢水）</em>。  </p>\n<p>看它傻头傻脑的样儿，给它取了名字叫<strong>铁蛋儿</strong>，感觉特配它的傻气。 </p>\n<p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/1766375958.jpg \" width=\"400px\"></p>\n<p><em>（今早儿拍的照片，还把以前买的一直没机会戴的猫铃铛给它戴上了）</em></p>\n<p>当天晚上我到客厅窗边打电话，它就跟着我到了客厅窗台上站着，一动不动。  </p>\n<p>我回卧室躺着，它也屁颠儿屁颠儿地跑到床上，过一会儿就在我身边睡着了，伴随着猫咪特有的呼噜声。  </p>\n<p>期间它醒了几次，不一会儿又睡着了。  </p>\n<p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/1482629674.jpg\" width=\"400px\"></p>\n<p>我在床上躺着开始上网查如何养猫，养猫要注意什么？怎么才能不让它破坏家里面的东西，内心纠结着能不能对它的一生付责任。 </p>\n<p>早晨起来发现它在我家门口旁的袋子上尿尿了，估计是当成猫砂了。我猜铁蛋儿是有主人的。 </p>\n<p>结果今早儿，铁蛋儿的主人就在小区群里发了寻猫启事。  </p>\n<p>虽然对铁蛋儿有很多的不舍，但我还是联系了铁蛋儿真正的主人。  </p>\n<p>与其我模棱两可的纠结是否收养它，不如把它交给真正对它好的主人身边吧。  </p>\n<p>我和铁蛋儿的“一夜情”就这样结束了。  </p>\n<p><em>从主人处得知，铁蛋儿是一只约三个多月大的小母猫。</em></p>\n<h2 id=\"铁蛋儿の写真\"><a href=\"#铁蛋儿の写真\" class=\"headerlink\" title=\"铁蛋儿の写真\"></a>铁蛋儿の写真</h2><p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/2867367599.jpg\" width=\"400px\"></p>\n<p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/1564673647.jpg\" width=\"400px\"></p>\n<p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/833197968.jpg\" width=\"400px\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>铁蛋儿是我昨天晚上捡回来的。  </p>\n<p>昨晚在楼下电影院看完<em>郭森斯坦森</em>和<em>巨石强森</em>主演的《速度与激情：特别行动》后回来，在楼下看见了铁蛋儿。  </p>\n<p>刚看见铁蛋儿时以为是只野猫，因为小区里的野猫特别多，但是小区的野猫都不近人。铁蛋儿看见我之后，走到我腿边儿蹭，我猜它是饿了。  </p>\n<p>随后我就把它勾引回家了。  </p>\n<p>回到家我给它水，火腿，吃完东西后给它洗澡，洗澡时有点儿抗拒<em>（猫咪果然天生不喜欢水）</em>。  </p>\n<p>看它傻头傻脑的样儿，给它取了名字叫<strong>铁蛋儿</strong>，感觉特配它的傻气。 </p>\n<p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/1766375958.jpg \" width=\"400px\"></p>\n<p><em>（今早儿拍的照片，还把以前买的一直没机会戴的猫铃铛给它戴上了）</em></p>\n<p>当天晚上我到客厅窗边打电话，它就跟着我到了客厅窗台上站着，一动不动。  </p>\n<p>我回卧室躺着，它也屁颠儿屁颠儿地跑到床上，过一会儿就在我身边睡着了，伴随着猫咪特有的呼噜声。  </p>\n<p>期间它醒了几次，不一会儿又睡着了。  </p>\n<p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/1482629674.jpg\" width=\"400px\"></p>\n<p>我在床上躺着开始上网查如何养猫，养猫要注意什么？怎么才能不让它破坏家里面的东西，内心纠结着能不能对它的一生付责任。 </p>\n<p>早晨起来发现它在我家门口旁的袋子上尿尿了，估计是当成猫砂了。我猜铁蛋儿是有主人的。 </p>\n<p>结果今早儿，铁蛋儿的主人就在小区群里发了寻猫启事。  </p>\n<p>虽然对铁蛋儿有很多的不舍，但我还是联系了铁蛋儿真正的主人。  </p>\n<p>与其我模棱两可的纠结是否收养它，不如把它交给真正对它好的主人身边吧。  </p>\n<p>我和铁蛋儿的“一夜情”就这样结束了。  </p>\n<p><em>从主人处得知，铁蛋儿是一只约三个多月大的小母猫。</em></p>\n<h2 id=\"铁蛋儿の写真\"><a href=\"#铁蛋儿の写真\" class=\"headerlink\" title=\"铁蛋儿の写真\"></a>铁蛋儿の写真</h2><p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/2867367599.jpg\" width=\"400px\"></p>\n<p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/1564673647.jpg\" width=\"400px\"></p>\n<p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/833197968.jpg\" width=\"400px\"></p>\n"},{"title":"使用Cloudreve搭建私有云盘","date":"2019-09-09T14:10:00.000Z","toc":true,"_content":"### 1.访问[官网][1]下载源码\n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/1528145123.png\" width=\"400px\"/>\n\n***下载最新的安装包***\n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/3690622660.png\" width=\"400px\"/>\n\n### 2.解压缩并将源码上传至服务器空间\n\n将下载好的安装包解压后，将文件夹内的所有文件全部上传至服务器空间\n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/2470042002.png\" width=\"400px\"/>\n\n### 3.访问域名导入数据库安装\n\n源码上传至空间后，浏览器访问`域名/CloudreveInstaller`进行环境检查，配置数据库信息。\n\n### 4.登录后台配置相关设置\n\n安装完成后，访问【您的域名/admin】，登录到后台，可修改用户名密码，以及配置所需要的设置等\n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/4131852593.png\" width=\"400px\"/>\n\n### 5.遇到的问题\n\n1. 头像显示问题，上传头像不显示，可能是服务器PHP没有安装【fileinfo】插件。我用的bt面板，在PHP的安装扩展里安装fileinfo即可。\n2. 不支持文件夹上传，这个不算是问题，我看论坛，开发者目前没有加入文件夹上传这一功能。\n\n\n  [1]: https://cloudreve.org/\n","source":"_posts/使用Cloudreve搭建私有云盘.md","raw":"title: 使用Cloudreve搭建私有云盘\ndate: 2019-09-09 22:10\ntoc: true\n\n---\n### 1.访问[官网][1]下载源码\n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/1528145123.png\" width=\"400px\"/>\n\n***下载最新的安装包***\n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/3690622660.png\" width=\"400px\"/>\n\n### 2.解压缩并将源码上传至服务器空间\n\n将下载好的安装包解压后，将文件夹内的所有文件全部上传至服务器空间\n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/2470042002.png\" width=\"400px\"/>\n\n### 3.访问域名导入数据库安装\n\n源码上传至空间后，浏览器访问`域名/CloudreveInstaller`进行环境检查，配置数据库信息。\n\n### 4.登录后台配置相关设置\n\n安装完成后，访问【您的域名/admin】，登录到后台，可修改用户名密码，以及配置所需要的设置等\n\n<img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/4131852593.png\" width=\"400px\"/>\n\n### 5.遇到的问题\n\n1. 头像显示问题，上传头像不显示，可能是服务器PHP没有安装【fileinfo】插件。我用的bt面板，在PHP的安装扩展里安装fileinfo即可。\n2. 不支持文件夹上传，这个不算是问题，我看论坛，开发者目前没有加入文件夹上传这一功能。\n\n\n  [1]: https://cloudreve.org/\n","slug":"使用Cloudreve搭建私有云盘","published":1,"updated":"2020-04-21T13:53:20.104Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6g4000keiudq57v0zky","content":"<h3 id=\"1-访问官网下载源码\"><a href=\"#1-访问官网下载源码\" class=\"headerlink\" title=\"1.访问官网下载源码\"></a>1.访问<a href=\"https://cloudreve.org/\" target=\"_blank\" rel=\"noopener\">官网</a>下载源码</h3><p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/1528145123.png\" width=\"400px\"></p>\n<p><strong><em>下载最新的安装包</em></strong></p>\n<p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/3690622660.png\" width=\"400px\"></p>\n<h3 id=\"2-解压缩并将源码上传至服务器空间\"><a href=\"#2-解压缩并将源码上传至服务器空间\" class=\"headerlink\" title=\"2.解压缩并将源码上传至服务器空间\"></a>2.解压缩并将源码上传至服务器空间</h3><p>将下载好的安装包解压后，将文件夹内的所有文件全部上传至服务器空间</p>\n<p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/2470042002.png\" width=\"400px\"></p>\n<h3 id=\"3-访问域名导入数据库安装\"><a href=\"#3-访问域名导入数据库安装\" class=\"headerlink\" title=\"3.访问域名导入数据库安装\"></a>3.访问域名导入数据库安装</h3><p>源码上传至空间后，浏览器访问<code>域名/CloudreveInstaller</code>进行环境检查，配置数据库信息。</p>\n<h3 id=\"4-登录后台配置相关设置\"><a href=\"#4-登录后台配置相关设置\" class=\"headerlink\" title=\"4.登录后台配置相关设置\"></a>4.登录后台配置相关设置</h3><p>安装完成后，访问【您的域名/admin】，登录到后台，可修改用户名密码，以及配置所需要的设置等</p>\n<p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/4131852593.png\" width=\"400px\"></p>\n<h3 id=\"5-遇到的问题\"><a href=\"#5-遇到的问题\" class=\"headerlink\" title=\"5.遇到的问题\"></a>5.遇到的问题</h3><ol>\n<li>头像显示问题，上传头像不显示，可能是服务器PHP没有安装【fileinfo】插件。我用的bt面板，在PHP的安装扩展里安装fileinfo即可。</li>\n<li>不支持文件夹上传，这个不算是问题，我看论坛，开发者目前没有加入文件夹上传这一功能。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-访问官网下载源码\"><a href=\"#1-访问官网下载源码\" class=\"headerlink\" title=\"1.访问官网下载源码\"></a>1.访问<a href=\"https://cloudreve.org/\" target=\"_blank\" rel=\"noopener\">官网</a>下载源码</h3><p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/1528145123.png\" width=\"400px\"></p>\n<p><strong><em>下载最新的安装包</em></strong></p>\n<p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/3690622660.png\" width=\"400px\"></p>\n<h3 id=\"2-解压缩并将源码上传至服务器空间\"><a href=\"#2-解压缩并将源码上传至服务器空间\" class=\"headerlink\" title=\"2.解压缩并将源码上传至服务器空间\"></a>2.解压缩并将源码上传至服务器空间</h3><p>将下载好的安装包解压后，将文件夹内的所有文件全部上传至服务器空间</p>\n<p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/2470042002.png\" width=\"400px\"></p>\n<h3 id=\"3-访问域名导入数据库安装\"><a href=\"#3-访问域名导入数据库安装\" class=\"headerlink\" title=\"3.访问域名导入数据库安装\"></a>3.访问域名导入数据库安装</h3><p>源码上传至空间后，浏览器访问<code>域名/CloudreveInstaller</code>进行环境检查，配置数据库信息。</p>\n<h3 id=\"4-登录后台配置相关设置\"><a href=\"#4-登录后台配置相关设置\" class=\"headerlink\" title=\"4.登录后台配置相关设置\"></a>4.登录后台配置相关设置</h3><p>安装完成后，访问【您的域名/admin】，登录到后台，可修改用户名密码，以及配置所需要的设置等</p>\n<p><img src=\"https://images.shiguangping.com/typecho/uploads/2019/09/4131852593.png\" width=\"400px\"></p>\n<h3 id=\"5-遇到的问题\"><a href=\"#5-遇到的问题\" class=\"headerlink\" title=\"5.遇到的问题\"></a>5.遇到的问题</h3><ol>\n<li>头像显示问题，上传头像不显示，可能是服务器PHP没有安装【fileinfo】插件。我用的bt面板，在PHP的安装扩展里安装fileinfo即可。</li>\n<li>不支持文件夹上传，这个不算是问题，我看论坛，开发者目前没有加入文件夹上传这一功能。</li>\n</ol>\n"},{"title":"linux eclipse导入windows工程后出现中文乱码解决方法","date":"2018-05-15T16:00:00.000Z","toc":true,"_content":"我今天遇到这个问题，在百度问了一遍，大多数的方法都不行\n\n最后一个人给出的方法解决了这个问题\n\n<img src=\"https://images.shiguangping.com/images/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E5%9B%BE1.png\" width=\"500px\"/>\n\n我在linux下的eclipse导入windows的工程文件后，会出现这样的乱码问题。\n\n网上说，windows的中文编码方式是GBK，而linux采用的中文编码方式是UTF-8\n\n所以把linux的编码方式改一下就可以了。\n\n在出现乱码的文件，键盘敲入 alt+Enter，会出现一个对话框\n\n<img src=\"https://images.shiguangping.com/images/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E5%9B%BE2.png \" width=\"500px\"/>\n\n在下面的Text file encoding，Other里面直接输入GBK，然后应用，这时正常的中文就回来了。\n\n<img src=\"https://images.shiguangping.com/images/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E5%9B%BE3.png \" width=\"500px\"/>\n\n**感谢这个大神**","source":"_posts/linux eclipse导入windows工程后出现中文乱码解决方法.md","raw":"title: linux eclipse导入windows工程后出现中文乱码解决方法\ndate: 2018-05-16 00:00\ntoc: true\n\n\n\n---\n我今天遇到这个问题，在百度问了一遍，大多数的方法都不行\n\n最后一个人给出的方法解决了这个问题\n\n<img src=\"https://images.shiguangping.com/images/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E5%9B%BE1.png\" width=\"500px\"/>\n\n我在linux下的eclipse导入windows的工程文件后，会出现这样的乱码问题。\n\n网上说，windows的中文编码方式是GBK，而linux采用的中文编码方式是UTF-8\n\n所以把linux的编码方式改一下就可以了。\n\n在出现乱码的文件，键盘敲入 alt+Enter，会出现一个对话框\n\n<img src=\"https://images.shiguangping.com/images/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E5%9B%BE2.png \" width=\"500px\"/>\n\n在下面的Text file encoding，Other里面直接输入GBK，然后应用，这时正常的中文就回来了。\n\n<img src=\"https://images.shiguangping.com/images/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E5%9B%BE3.png \" width=\"500px\"/>\n\n**感谢这个大神**","slug":"linux eclipse导入windows工程后出现中文乱码解决方法","published":1,"updated":"2020-04-20T15:48:43.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6g5000meiudtqigpx9p","content":"<p>我今天遇到这个问题，在百度问了一遍，大多数的方法都不行</p>\n<p>最后一个人给出的方法解决了这个问题</p>\n<p><img src=\"https://images.shiguangping.com/images/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E5%9B%BE1.png\" width=\"500px\"></p>\n<p>我在linux下的eclipse导入windows的工程文件后，会出现这样的乱码问题。</p>\n<p>网上说，windows的中文编码方式是GBK，而linux采用的中文编码方式是UTF-8</p>\n<p>所以把linux的编码方式改一下就可以了。</p>\n<p>在出现乱码的文件，键盘敲入 alt+Enter，会出现一个对话框</p>\n<p><img src=\"https://images.shiguangping.com/images/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E5%9B%BE2.png \" width=\"500px\"></p>\n<p>在下面的Text file encoding，Other里面直接输入GBK，然后应用，这时正常的中文就回来了。</p>\n<p><img src=\"https://images.shiguangping.com/images/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E5%9B%BE3.png \" width=\"500px\"></p>\n<p><strong>感谢这个大神</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p>我今天遇到这个问题，在百度问了一遍，大多数的方法都不行</p>\n<p>最后一个人给出的方法解决了这个问题</p>\n<p><img src=\"https://images.shiguangping.com/images/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E5%9B%BE1.png\" width=\"500px\"></p>\n<p>我在linux下的eclipse导入windows的工程文件后，会出现这样的乱码问题。</p>\n<p>网上说，windows的中文编码方式是GBK，而linux采用的中文编码方式是UTF-8</p>\n<p>所以把linux的编码方式改一下就可以了。</p>\n<p>在出现乱码的文件，键盘敲入 alt+Enter，会出现一个对话框</p>\n<p><img src=\"https://images.shiguangping.com/images/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E5%9B%BE2.png \" width=\"500px\"></p>\n<p>在下面的Text file encoding，Other里面直接输入GBK，然后应用，这时正常的中文就回来了。</p>\n<p><img src=\"https://images.shiguangping.com/images/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E5%9B%BE3.png \" width=\"500px\"></p>\n<p><strong>感谢这个大神</strong></p>\n"},{"title":"入手日版Nintendo Switch","date":"2020-01-29T04:49:00.000Z","toc":true,"_content":"<img src=\"https://images.shiguangping.com/imgs/202001/IMG_5103.JPG\" width=600>\n\n这是我入手的第三台任天堂switch。\n\n第一台是任天堂刚发布switch不久之后购入的，当时系统还没有简体中文，大多数游戏都没有中文，后来闲鱼出手了。\n\n第二台是去年吧，被异度之刃2这款游戏的CG吸引了，玩了没多久也卖了。\n\n前几天一直在为入手NS还是NSL所困扰，后来合计一步到位，以后能在电视上玩，还是买了这台Switch，好像是日版的续航增强版，现在版本真多。\n\n机器是昨天到的，贴膜是今天上午到的。\n\n刚刚贴膜的时候膜贴废了，随后又在京东买了张贴膜，还有内存卡，打算明天再重新贴一下。\n\n最近这几天，在家躲避疫情，重新开始玩玩之前的神作，***塞尔达旷野之息***。\n\n之前玩的是日文版的，真心费劲。\n","source":"_posts/入手日版Nintendo Switch.md","raw":"title: 入手日版Nintendo Switch\ndate: 2020-01-29 12:49\ntoc: true\n\n---\n<img src=\"https://images.shiguangping.com/imgs/202001/IMG_5103.JPG\" width=600>\n\n这是我入手的第三台任天堂switch。\n\n第一台是任天堂刚发布switch不久之后购入的，当时系统还没有简体中文，大多数游戏都没有中文，后来闲鱼出手了。\n\n第二台是去年吧，被异度之刃2这款游戏的CG吸引了，玩了没多久也卖了。\n\n前几天一直在为入手NS还是NSL所困扰，后来合计一步到位，以后能在电视上玩，还是买了这台Switch，好像是日版的续航增强版，现在版本真多。\n\n机器是昨天到的，贴膜是今天上午到的。\n\n刚刚贴膜的时候膜贴废了，随后又在京东买了张贴膜，还有内存卡，打算明天再重新贴一下。\n\n最近这几天，在家躲避疫情，重新开始玩玩之前的神作，***塞尔达旷野之息***。\n\n之前玩的是日文版的，真心费劲。\n","slug":"入手日版Nintendo Switch","published":1,"updated":"2020-04-20T09:55:05.697Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6g6000neiudpjohif3u","content":"<p><img src=\"https://images.shiguangping.com/imgs/202001/IMG_5103.JPG\" width=\"600\"></p>\n<p>这是我入手的第三台任天堂switch。</p>\n<p>第一台是任天堂刚发布switch不久之后购入的，当时系统还没有简体中文，大多数游戏都没有中文，后来闲鱼出手了。</p>\n<p>第二台是去年吧，被异度之刃2这款游戏的CG吸引了，玩了没多久也卖了。</p>\n<p>前几天一直在为入手NS还是NSL所困扰，后来合计一步到位，以后能在电视上玩，还是买了这台Switch，好像是日版的续航增强版，现在版本真多。</p>\n<p>机器是昨天到的，贴膜是今天上午到的。</p>\n<p>刚刚贴膜的时候膜贴废了，随后又在京东买了张贴膜，还有内存卡，打算明天再重新贴一下。</p>\n<p>最近这几天，在家躲避疫情，重新开始玩玩之前的神作，<strong><em>塞尔达旷野之息</em></strong>。</p>\n<p>之前玩的是日文版的，真心费劲。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://images.shiguangping.com/imgs/202001/IMG_5103.JPG\" width=\"600\"></p>\n<p>这是我入手的第三台任天堂switch。</p>\n<p>第一台是任天堂刚发布switch不久之后购入的，当时系统还没有简体中文，大多数游戏都没有中文，后来闲鱼出手了。</p>\n<p>第二台是去年吧，被异度之刃2这款游戏的CG吸引了，玩了没多久也卖了。</p>\n<p>前几天一直在为入手NS还是NSL所困扰，后来合计一步到位，以后能在电视上玩，还是买了这台Switch，好像是日版的续航增强版，现在版本真多。</p>\n<p>机器是昨天到的，贴膜是今天上午到的。</p>\n<p>刚刚贴膜的时候膜贴废了，随后又在京东买了张贴膜，还有内存卡，打算明天再重新贴一下。</p>\n<p>最近这几天，在家躲避疫情，重新开始玩玩之前的神作，<strong><em>塞尔达旷野之息</em></strong>。</p>\n<p>之前玩的是日文版的，真心费劲。</p>\n"},{"title":"GitHub 查看分支","date":"2020-01-20T04:19:00.000Z","toc":true,"_content":"初始化一个Git仓库 git init\n\n查看分支 git branch\n\n创建分支 git branch <branch-name>\n\n切换分支 git checkout <branch-name>\n\n创建并切换分支 git checkout -b <branch-name>\n\n合并某分支到当前分支 git merge <branch-name>\n\n删除分支 git branch -D <branch-name>\n","source":"_posts/github查看分支.md","raw":"title: GitHub 查看分支\ndate: 2020-01-20 12:19\ntoc: true\n\n---\n初始化一个Git仓库 git init\n\n查看分支 git branch\n\n创建分支 git branch <branch-name>\n\n切换分支 git checkout <branch-name>\n\n创建并切换分支 git checkout -b <branch-name>\n\n合并某分支到当前分支 git merge <branch-name>\n\n删除分支 git branch -D <branch-name>\n","slug":"github查看分支","published":1,"updated":"2020-04-20T09:55:05.694Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6g6000peiudiehqa8cu","content":"<p>初始化一个Git仓库 git init</p>\n<p>查看分支 git branch</p>\n<p>创建分支 git branch <branch-name></branch-name></p>\n<p>切换分支 git checkout <branch-name></branch-name></p>\n<p>创建并切换分支 git checkout -b <branch-name></branch-name></p>\n<p>合并某分支到当前分支 git merge <branch-name></branch-name></p>\n<p>删除分支 git branch -D <branch-name></branch-name></p>\n","site":{"data":{}},"excerpt":"","more":"<p>初始化一个Git仓库 git init</p>\n<p>查看分支 git branch</p>\n<p>创建分支 git branch <branch-name></branch-name></p>\n<p>切换分支 git checkout <branch-name></branch-name></p>\n<p>创建并切换分支 git checkout -b <branch-name></branch-name></p>\n<p>合并某分支到当前分支 git merge <branch-name></branch-name></p>\n<p>删除分支 git branch -D <branch-name></branch-name></p>\n"},{"title":"在Linux中使配置alias永久生效","date":"2018-06-13T07:06:45.000Z","toc":true,"_content":"### 编辑.bashrc\n\n在终端，通过命令回家：\n```shell\ncd ~\n```\n\n之后通过文本编辑器编辑文本`.bashrc`：\n```shell\nsudo gedit .bashrc\n```\n\n或者，使用vim编辑：\n```shell\nsudo vim .bashrc\n```\n\n\n如果没有`.bashrc`文件，需要手动创建一个。\n\n*注意：`.bashrc`是隐藏文件，在文件管理器中查看时需要勾选`显示隐藏文件`。*\n\n\n\n创建好之后，在`.bashrc`最后一行添加你要设置的alias命令，例如：\n\n```shell\nalias hxc='rm -f ~/blog/db.json && hexo clean'\n```\n\n如果是新建的`.bashrc`文件，直接在里面添加alias命令就可以，命令是一行一行的。\n\n添加完之后保存，再通过source命令使刚才的配置文件生效：  \n\n```shell\nsource .bashrc\n```\n\n\n\n之后在终端敲击`alias`命令，查看刚刚配置的alias命令是否生效。\n\n### 编辑.bash_profile\n\n在`.bash_profile`最后一行添加一条命令：\n```shell\nsource ~/.bash_profile\n```\n\n*注意：如果没有`.bash_profile`文件就新建一个。*\n\n添加完之后保存退出，终端通过source命令使配置生效：\n\n```shell\nsource .bash_profile\n```\n\n此时可以重新打开终端，输入`alias`命令，查看配置的alias是否已经生效。\n\n","source":"_posts/在Linux中使配置alias永久生效.md","raw":"title: 在Linux中使配置alias永久生效\ndate: 2018-06-13 15:06:45\ntoc: true\n\n---\n### 编辑.bashrc\n\n在终端，通过命令回家：\n```shell\ncd ~\n```\n\n之后通过文本编辑器编辑文本`.bashrc`：\n```shell\nsudo gedit .bashrc\n```\n\n或者，使用vim编辑：\n```shell\nsudo vim .bashrc\n```\n\n\n如果没有`.bashrc`文件，需要手动创建一个。\n\n*注意：`.bashrc`是隐藏文件，在文件管理器中查看时需要勾选`显示隐藏文件`。*\n\n\n\n创建好之后，在`.bashrc`最后一行添加你要设置的alias命令，例如：\n\n```shell\nalias hxc='rm -f ~/blog/db.json && hexo clean'\n```\n\n如果是新建的`.bashrc`文件，直接在里面添加alias命令就可以，命令是一行一行的。\n\n添加完之后保存，再通过source命令使刚才的配置文件生效：  \n\n```shell\nsource .bashrc\n```\n\n\n\n之后在终端敲击`alias`命令，查看刚刚配置的alias命令是否生效。\n\n### 编辑.bash_profile\n\n在`.bash_profile`最后一行添加一条命令：\n```shell\nsource ~/.bash_profile\n```\n\n*注意：如果没有`.bash_profile`文件就新建一个。*\n\n添加完之后保存退出，终端通过source命令使配置生效：\n\n```shell\nsource .bash_profile\n```\n\n此时可以重新打开终端，输入`alias`命令，查看配置的alias是否已经生效。\n\n","slug":"在Linux中使配置alias永久生效","published":1,"updated":"2020-04-20T16:18:53.542Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6g7000qeiudu5niu0n2","content":"<h3 id=\"编辑-bashrc\"><a href=\"#编辑-bashrc\" class=\"headerlink\" title=\"编辑.bashrc\"></a>编辑.bashrc</h3><p>在终端，通过命令回家：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~</span><br></pre></td></tr></table></figure></p>\n<p>之后通过文本编辑器编辑文本<code>.bashrc</code>：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gedit .bashrc</span><br></pre></td></tr></table></figure></p>\n<p>或者，使用vim编辑：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim .bashrc</span><br></pre></td></tr></table></figure></p>\n<p>如果没有<code>.bashrc</code>文件，需要手动创建一个。</p>\n<p><em>注意：<code>.bashrc</code>是隐藏文件，在文件管理器中查看时需要勾选<code>显示隐藏文件</code>。</em></p>\n<p>创建好之后，在<code>.bashrc</code>最后一行添加你要设置的alias命令，例如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias hxc='rm -f ~/blog/db.json &amp;&amp; hexo clean'</span><br></pre></td></tr></table></figure>\n<p>如果是新建的<code>.bashrc</code>文件，直接在里面添加alias命令就可以，命令是一行一行的。</p>\n<p>添加完之后保存，再通过source命令使刚才的配置文件生效：  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source .bashrc</span><br></pre></td></tr></table></figure>\n<p>之后在终端敲击<code>alias</code>命令，查看刚刚配置的alias命令是否生效。</p>\n<h3 id=\"编辑-bash-profile\"><a href=\"#编辑-bash-profile\" class=\"headerlink\" title=\"编辑.bash_profile\"></a>编辑.bash_profile</h3><p>在<code>.bash_profile</code>最后一行添加一条命令：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bash_profile</span><br></pre></td></tr></table></figure></p>\n<p><em>注意：如果没有<code>.bash_profile</code>文件就新建一个。</em></p>\n<p>添加完之后保存退出，终端通过source命令使配置生效：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source .bash_profile</span><br></pre></td></tr></table></figure>\n<p>此时可以重新打开终端，输入<code>alias</code>命令，查看配置的alias是否已经生效。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"编辑-bashrc\"><a href=\"#编辑-bashrc\" class=\"headerlink\" title=\"编辑.bashrc\"></a>编辑.bashrc</h3><p>在终端，通过命令回家：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~</span><br></pre></td></tr></table></figure></p>\n<p>之后通过文本编辑器编辑文本<code>.bashrc</code>：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gedit .bashrc</span><br></pre></td></tr></table></figure></p>\n<p>或者，使用vim编辑：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim .bashrc</span><br></pre></td></tr></table></figure></p>\n<p>如果没有<code>.bashrc</code>文件，需要手动创建一个。</p>\n<p><em>注意：<code>.bashrc</code>是隐藏文件，在文件管理器中查看时需要勾选<code>显示隐藏文件</code>。</em></p>\n<p>创建好之后，在<code>.bashrc</code>最后一行添加你要设置的alias命令，例如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias hxc='rm -f ~/blog/db.json &amp;&amp; hexo clean'</span><br></pre></td></tr></table></figure>\n<p>如果是新建的<code>.bashrc</code>文件，直接在里面添加alias命令就可以，命令是一行一行的。</p>\n<p>添加完之后保存，再通过source命令使刚才的配置文件生效：  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source .bashrc</span><br></pre></td></tr></table></figure>\n<p>之后在终端敲击<code>alias</code>命令，查看刚刚配置的alias命令是否生效。</p>\n<h3 id=\"编辑-bash-profile\"><a href=\"#编辑-bash-profile\" class=\"headerlink\" title=\"编辑.bash_profile\"></a>编辑.bash_profile</h3><p>在<code>.bash_profile</code>最后一行添加一条命令：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bash_profile</span><br></pre></td></tr></table></figure></p>\n<p><em>注意：如果没有<code>.bash_profile</code>文件就新建一个。</em></p>\n<p>添加完之后保存退出，终端通过source命令使配置生效：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source .bash_profile</span><br></pre></td></tr></table></figure>\n<p>此时可以重新打开终端，输入<code>alias</code>命令，查看配置的alias是否已经生效。</p>\n"},{"title":"根据转载的一篇文章总结的Java学习方法","date":"2018-06-17T15:19:26.000Z","toc":true,"_content":"# step 1 学习路线\n\n路线：***JavaSE-->web-->Java后端***\n\n### 1. JavaSE\n\n找一个Java基础教程，尽量多动手，对Java有一个基本的了解。\n\n### 2. web开发\n\n**学习web，学习顺序：**  \n\n1. HTML/CSS/JS\n\n2. Servlet/JSP(JAVAEE)\n\n3. Mysql(数据库)\n\n- 首先，要学习**HTML/CSS/JS**，这些东西对于Java后端开发来说，理论上不是特别重要，但至少要达到可以自己写页面的水平。\n\n- 然后，**Servlet/JSP(JAVAEE)**这部分，这部分是Java后端必须必须精通的，这部分也是三部分中最需要花费精力的。\n\n- 最后，学习使用数据库，**Mysql**是不错的入门选择，而且Java领域主流的关系型数据库就是Myqsl。这部分一般在学习**Servlet/JSP**的时候就会接触到，其中JDBC部分就是数据库的相关部分。这部分不仅要学会用JDBC操作数据库，还要学会使用数据库客户端工具，例如：**navicat**，**sqlyog**，二选一即可.  \n\n### 3. 开发框架\n\n学会以上内容还不足以参加工作，为了提高开发效率，会使用一些**Java Web框架**。目前比较主流的是**SSM框架**，即**spring**，**springmvc**，**mybatis**。这里需要学会这三种框架的搭建，并用他们做出一个简单的增删改查项目.\n\n快速地利用SSM搭建出一个web框架是必须的，记录下第一次的搭建过程是很有必要的。在搭建SSM的过程中，会接触到一个叫**maven**的工具，这个工具是以后工作当中会经常用到的工具。在目前这个阶段，只需要到网上了解一下maven的基本用法即可，更高端的用法会随着工作经验的增加，逐渐接触到的。\n\n### 4. 找工作\n\n当完成开发框架的学习以后，就该找工作了。在找工作的同时，不应该停下学习。上面这些内容只是囫囵吞枣的学会了使用，你可以逐步尝试着去了解更多的东西，网络是你最重要的老师。\n\n# step 2 Java编程思想,深入理解Java基础\n\n对于参加工作___1年以内___的同学，恭喜你，这个时候，你已经拥有了一份Java的工作。这个阶段是你成长极快的阶段，而且你可能会经常加班。但是加班不代表你就可以松懈了，永远记得我说的那句话，*从你入行那一刻起，你就要不停的学习*。 \n\n在这一年里，你至少需要看完**《Java编程思想》**这本书。这本书的内容是帮助你对于Java有一个更加深入的了解，是Java基础的升级版。这本书很厚，当初看这本书，我花了整整三个月。正常速度的话，应该可以在半年左右看完。我这里不要求过高，只要你在一年以内把这本书看完即可。当然了，我所说的看完，是充分吸收，而不是读一遍就完事了，因此有些内容你可能会看不止一遍。总而言之，这个阶段的核心学习思想就是，在工作中实践，并且更加深入的了解Java基础。\n\n### 设计模型\n\n**对于参加工作1年到2年的同学**，这部分时间段的同学，已经对Java有了一个更加深入的了解。但是对于面向对象的体会可能还不够深刻，编程的时候还停留在完成功能的层次，很少会去考虑设计的问题。于是这个时候，设计模式就来了。我当时看的是**《大话设计模式》**这本书，并且写了完整版的设计模式博客。因此，我要求大家，最多在你工作一年的时候，必须开始写博客，而设计模式就是你博客的开端。\n\n请记住，我所提的基本都是最低要求，因此不要有任何松懈的心理，否则五年后，你不要去羡慕别人高于你的工资，也不要去羡慕别人进入了某公司。这一年，你必须对于设计模式了如指掌，《大话设计模式》可以作为你的开端。此外，设计模式并不是你这一年唯一的任务，你还需要看一些关于代码编写优化的书。比如**《重构 改善既有代码的设计》**，**《effective java》**。总而言之，这个阶段，你的核心任务就是提高你的代码能力，要能写出一手优雅的代码。  \n\n# step 3 参加工作2年到3年的同学\n\n**对于参加工作2年到3年的同学**，有的同学在这个时候觉得自己已经很牛逼了，于是忍不住开始慢慢松懈.请记住,你还嫩的多。对这个阶段，有一本书是你必须看的，它叫做**《深入理解Java虚拟机》**。这本书绝对是Java开发者最重要的书，没有之一。在我眼里，这本书的重要性还要高于《Java编程思想》。这本书的内容是帮助你全面的了解Java虚拟机，在这个阶段，你一定已经知道Java是运行在JVM之上的。所以，对于JVM，你没有任何理由不了解它。\n\n另外，在过去2年的工作当中，你肯定或多或少接触过并发。这个时候，你应该去更加深入的了解并发相关的知识，而这部分内容，我比较推荐**《Java并发编程实战》**这本书。只要你把这本书啃下来了，并发的部分基本已经了解了十之六。与此同时，这个阶段你要做的事情还远不止如此。这个时候，你应该对于你所使用的框架应该有了更深入的了解，对于Java的类库也有了更深入的了解。\n\n因此，你需要去看一些jdk中的类的源码，也包括你所使用的框架的源码。这些源码能看懂的前提是，你必须对设计模式非常了解。否则的话，你看源码的过程中，永远会有这样那样的疑问，这段代码为什么要这么写？为什么要定义这个接口，它看起来好像很多余？由此也可以看出，这些学习的过程是环环相扣的，如果你任何一个阶段拉下来了，那么你就真的跟不上了，或者说是一步慢步步慢。而且我很负责的告诉你，我在这个阶段的时候，所学习的东西远多于这里所罗列出来的。\n\n因此千万不要觉得你已经学的很多了，我所说的这些都只是最低要求，不光是我，很多人在这个时间段所学习的内容都远超本文的范围。如果你不能跟上节奏的话，若干年后，如果不是程序猿市场还不错的话，你很可能不仅仅是工资比别人低，公司没别人好，而是根本就找不到工作。总而言之，这个阶段，你需要做的是深入了解**Java底层**和**Java类库**（比如并发那本书就是Java并发包java.concurrent的内容），也就是JVM和JDK的相关内容。而且还要更深入的去了解你所使用的框架，方式比较推荐看源码或者看官方文档。另外，还有一种学习的方式，在2年这个阶段，也应该启用了，那就是造轮子。不要听信那套“不要重复造轮子”的论调，那是公司为了节省时间成本编造出来的。重复造轮子或许对别人没有价值，因为你造的轮子可能早就有了，而且一般情况下你造出来的轮子还没有现存的好。\n\n但是对别人没有价值，不代表对你自己没有价值。一个造轮子的过程，是一个从无到有的过程。这个过程可以对你进行系统的锻炼，它不仅考察你的编码能力，还考察你的框架设计能力，你需要让你的轮子拥有足够好的扩展性、健壮性。而且在造轮子的过程中，你会遇到各种各样的难题，这些难题往往又是你学习的契机。当你把轮子造好的时候，你一定会发现，其实你自己收获了很多。所以，这个阶段，除了上面提到的了解JVM/JDK和框架源码以外，也请你根据别人优秀的源码,去造一个任何你能够想象出来的轮子。\n\n# step 4 参加工作3年到4年的同学\n\n**对于参加工作3年到4年的同学**，这个阶段的同学，提升已经是很难了，而且这个阶段的学习往往会比较多样化。因为在前3年的过程中，你肯定或多或少接触过一些其它的技术，比如大数据、分布式缓存、分布式消息服务、分布式计算、软负载均衡等等。这些技术，你能精通任何一项，都将是你未来面试时巨大的优势，因此如果你对某一项技术感兴趣的话，这个时候可以深入去研究一下。这项技术不一定是你工作所用到的，但一定是相关的。而且在研究一门新技术时，切忌朝三暮四。有的同学今天去整整大数据，搞搞Hadoop/hbase一类的东西。过不了一段时间，就觉得没意思，又去研究分布式缓存，比如redis。然后又过不了一段时间，又去研究分布式计算，比如整整Mapreduce或者storm。结果到最后，搞得自己好像什么都会一样，在简历上大言不惭的写上大数据、分布式缓存、分布式计算都了解，其实任何一个都只是浮于表面。到时候面试官随便一问，就把你给识破了。\n\n一定要记住，作为一个程序猿，平日里所接触的技术可能会很多，但是想要让一门技术成为你的优势，那么一定是你对这门技术的了解强过绝大多数人才行。因此在这个阶段，你就不能再简单的去学习前3年的内容了，虽然前面的学习如果还不够深入的话依旧要继续，但这个时候你应该更多的考虑建立你的优势，也可以称为差异性。差异性相信不难理解，就是让你自己变得与众不同。你前面三年的学习足够你成为一名基本合格的Java开发者，但你离成为一名优秀的Java开发者还有很大的距离。\n\n所谓优秀，即能别人所不能。而你前三年所学习的内容，是很多做过几年的Java开发都能够掌握的。那么为了让自己有差异性，你就需要另辟蹊径，找一个方向深入研究下去，以期在将来，你能够成为这个领域的专家，比如分布式计算领域的专家，大数据领域的专家，并发领域的专家等等。此外，你除了建立你的差异性之外，还要去弥补你基础上的不足，直到现在，我都没有提及基础知识。原因是基础是很枯燥无味的，学的太早不仅容易懵逼，而且懵逼的同时还容易产生心理阴影，以至于以后再不想去研究这些基础。但基础又是你深入研究一些领域时所必须掌握的，比如你去研究分布式计算，你不懂算法你玩个毛？比如你去做分布式缓存，你对计算机系统的内存不了解，你如何去做缓存？\n\n如果你的基础本来就非常强，那么恭喜你，相信你在之前的工作中已经充分体会到了这些基础对你的帮助。但我相信大部分人的基础都很薄弱，哪怕是科班毕业的人，很多人也不敢说自己当初的基础学的多么强大，比如算法、计算机系统原理、编译原理这些。但是每个人时间都是有限的，而且这些基础的书籍每一本读下来，没个一年半载的，还真拿不下来，因此还是要有所抉择的。虽然艺多不压身，但问题是艺多是有代价的，是需要你付出时间和精力的，而我个人更赞成在同等代价的情况下获取最大的收获。\n\n首先，我比较推崇的基础书籍有三本，分别是**《深入理解计算机系统》**，**《tcp/ip详解 卷一、二、三》**，**《数据结构与算法》**。其中TCP/IP有三本书，但我们这里把这三本看成是一本大书。这三本分别适合三种人，《深入理解计算机系统》比较适合一直从事Java Web开发和APP后端开发工作的人群。《tcp/ip详解 卷一、二、三》比较适合做网络编程的人群，比如你使用netty去开发的话，那么就要对TCP/IP有更深入的了解。而《数据结构与算法》这本书，则比较适合做计算研究工作的人，比如刚才提到的分布式计算。另外，我要强调的是，这里所说的适合，并不是其它两本对你就没有用。比如你做Java Web和APP后端开发，《tcp/ip详解 卷一、二、三》这本书对你的作用也是很大的。这里只是分出个主次关系而已，你要是时间足够的话，能把三本都精读那当然最好不过了。\n\n但如果时间有限的话，那么就先挑对你帮助最大的书去读。理论上来讲，这一年你能把这三本其中一本精读下来，就已经非常厉害了。有了基础，有了前面的工作经验，你就可以去开拓属于你的领域了。在这一年里，一定要规划好自己的领域，建立好自己的优势，制造出差异性。如果你对自己的领域不够清晰的话，随着你工作的时间日益增多，你接触的技术会越来越多，这个时候，你很容易被淹死在技术的海洋里，看似接触的技术越来越多，会用的也越来越多，但你毫无优势。有的同学可能会问，“我，我也不知道我的领域是什么啊？怎么办呢？”对于这种人，我只想说，“卧槽，这还问我？要不干脆我替你学习得了，好不好？”\n\n# step 5 参加工作4年到5年的同学\n\n**对于参加工作4年到5年的同学**，经过前面一年的历练，相信你在自己所钻研的领域已经有了自己一定的见解，这个时候，技术上你应该已经遇到瓶颈了。这个时候不要着急提高自己的技术，已经是时候提高你的影响力了，你可以尝试去一些知名的公司去提高你的背景，你可以发表一些文章去影响更多的人。当然，你也可以去GitHub创建一个属于你的开源项目，去打造自己的产品。\n\n这次的开源项目不同于之前的造轮子，你这个时候是真的要去尽量尝试造出来真正对别人有价值的轮子。技术学到这个阶段，很容易遇到瓶颈，而且往往达到一定程度后，你再深入下去的收效就真的微乎其微了，除非你是专门搞学术研究的。然而很可惜，大部分程序猿做不到这一步，那是科学家做的事情。这个时候提高影响力不仅仅是因为技术上容易遇到瓶颈，更多的是影响力可以给你创造更多的机会。程序猿在某种程度上和明星很像，一个好的电视剧和电影就可以成就一批明星，程序猿有的时候也是，一个好的项目就可以成就一群程序猿。比如国内几个脍炙人口的项目，像淘宝、支付宝、QQ、百度、微信等等。这每一个项目，都成就了一批程序猿。我敢说，这里面任何一个项目，如果你是它的核心开发，光是这样一个Title，就已经是你非常大的优势。更何况还不止如此，Title说到底也是个名头，更重要的是，这种项目在做的时候，对你的历练一定也是非常给力的。\n\n而你如果想要参与这样的项目，除了靠运气之外，影响力也是很重要的一个手段。比如你在分布式计算领域有一定的影响力，那么如果有什么好的关于分布式计算的项目，对方就很可能会邀请你。就算人家不邀请你，你自己主动去面试的时候，对方如果知道你在这个领域的影响力，也肯定会起到很大的作用，而这个作用，甚至可能会超过你现在的技术能力。所以，在这个阶段，你最大的任务是提高自己的影响力，为自己未来的十年工作生涯那一天做准备。如果你能够靠你的影响力和以前积累的技术，参与到一个伟大的项目当中，那么你后面的五年也就有着落了。当然了，我现在满打满算，做程序猿也就4年半不到，因此关于4年到5年这一部分，我的见解不一定是对的，就算是对的，也不一定是适合任何人的。\n\n所以，希望大家自己有的判断力，去决定到底该如何度过这一年。  \n\n# 结语\n\n本文到此就基本结束了，整篇文章很长，但其实主要就说了两部分内容，一个是社招面试的准备，一个是Java生涯的学习。关于这两部分，我已经给出了自己的见解，但是还是那句话，每个人吸收知识的时候，都要有抽取精华，去除糟粕的能力。我所说的，可能有些是对的，有些是错的，有些是适合你的，有些是不太适合你的，你要自己能够判断。其实你在生活和工作当中也是一样的，你身边的人形形色色，有的人你喜欢，有的人你很讨厌。但其实你喜欢的人也有缺点，你讨厌的人也有优点。你要学会从你讨厌的人身上学会他的优点，千万不要一棒子打死，这只会让你失去很多学习成长的机会。好了，说了这么多了，就到此为止吧，希望本文可以帮助到作为程序猿或即将成为程序猿的你。  \n\n**声明**：*本文转载自网络，[原文地址](http://www.cnblogs.com/huaxingtianxia/p/5724093.html)。*\n\n*这篇文章发表自2016年，距离现在已经过了很长一段时间。可能再过一段时间，会出现更多的技术，学习路线可能也会发生改变。但是这篇文章的一些想法和思路是非常值得借鉴和学习的。---2018年6月17日*\n\n*整理博客时，又看到了这篇文章。这回正式决心杀进程序猿行业，拿出半年时间培训，最后一次机会，来之不易，成本颇大，规划好学习路线，必须比其他人掌握的更多，才能多一份机会。我发现培训机构的同学是真心都学习啊，课堂气氛太活跃了。---2020年4月20日*","source":"_posts/根据转载的一篇文章总结的Java学习方法.md","raw":"title: 根据转载的一篇文章总结的Java学习方法\ndate: 2018-06-17 23:19:26\ntoc: true\n\n---\n# step 1 学习路线\n\n路线：***JavaSE-->web-->Java后端***\n\n### 1. JavaSE\n\n找一个Java基础教程，尽量多动手，对Java有一个基本的了解。\n\n### 2. web开发\n\n**学习web，学习顺序：**  \n\n1. HTML/CSS/JS\n\n2. Servlet/JSP(JAVAEE)\n\n3. Mysql(数据库)\n\n- 首先，要学习**HTML/CSS/JS**，这些东西对于Java后端开发来说，理论上不是特别重要，但至少要达到可以自己写页面的水平。\n\n- 然后，**Servlet/JSP(JAVAEE)**这部分，这部分是Java后端必须必须精通的，这部分也是三部分中最需要花费精力的。\n\n- 最后，学习使用数据库，**Mysql**是不错的入门选择，而且Java领域主流的关系型数据库就是Myqsl。这部分一般在学习**Servlet/JSP**的时候就会接触到，其中JDBC部分就是数据库的相关部分。这部分不仅要学会用JDBC操作数据库，还要学会使用数据库客户端工具，例如：**navicat**，**sqlyog**，二选一即可.  \n\n### 3. 开发框架\n\n学会以上内容还不足以参加工作，为了提高开发效率，会使用一些**Java Web框架**。目前比较主流的是**SSM框架**，即**spring**，**springmvc**，**mybatis**。这里需要学会这三种框架的搭建，并用他们做出一个简单的增删改查项目.\n\n快速地利用SSM搭建出一个web框架是必须的，记录下第一次的搭建过程是很有必要的。在搭建SSM的过程中，会接触到一个叫**maven**的工具，这个工具是以后工作当中会经常用到的工具。在目前这个阶段，只需要到网上了解一下maven的基本用法即可，更高端的用法会随着工作经验的增加，逐渐接触到的。\n\n### 4. 找工作\n\n当完成开发框架的学习以后，就该找工作了。在找工作的同时，不应该停下学习。上面这些内容只是囫囵吞枣的学会了使用，你可以逐步尝试着去了解更多的东西，网络是你最重要的老师。\n\n# step 2 Java编程思想,深入理解Java基础\n\n对于参加工作___1年以内___的同学，恭喜你，这个时候，你已经拥有了一份Java的工作。这个阶段是你成长极快的阶段，而且你可能会经常加班。但是加班不代表你就可以松懈了，永远记得我说的那句话，*从你入行那一刻起，你就要不停的学习*。 \n\n在这一年里，你至少需要看完**《Java编程思想》**这本书。这本书的内容是帮助你对于Java有一个更加深入的了解，是Java基础的升级版。这本书很厚，当初看这本书，我花了整整三个月。正常速度的话，应该可以在半年左右看完。我这里不要求过高，只要你在一年以内把这本书看完即可。当然了，我所说的看完，是充分吸收，而不是读一遍就完事了，因此有些内容你可能会看不止一遍。总而言之，这个阶段的核心学习思想就是，在工作中实践，并且更加深入的了解Java基础。\n\n### 设计模型\n\n**对于参加工作1年到2年的同学**，这部分时间段的同学，已经对Java有了一个更加深入的了解。但是对于面向对象的体会可能还不够深刻，编程的时候还停留在完成功能的层次，很少会去考虑设计的问题。于是这个时候，设计模式就来了。我当时看的是**《大话设计模式》**这本书，并且写了完整版的设计模式博客。因此，我要求大家，最多在你工作一年的时候，必须开始写博客，而设计模式就是你博客的开端。\n\n请记住，我所提的基本都是最低要求，因此不要有任何松懈的心理，否则五年后，你不要去羡慕别人高于你的工资，也不要去羡慕别人进入了某公司。这一年，你必须对于设计模式了如指掌，《大话设计模式》可以作为你的开端。此外，设计模式并不是你这一年唯一的任务，你还需要看一些关于代码编写优化的书。比如**《重构 改善既有代码的设计》**，**《effective java》**。总而言之，这个阶段，你的核心任务就是提高你的代码能力，要能写出一手优雅的代码。  \n\n# step 3 参加工作2年到3年的同学\n\n**对于参加工作2年到3年的同学**，有的同学在这个时候觉得自己已经很牛逼了，于是忍不住开始慢慢松懈.请记住,你还嫩的多。对这个阶段，有一本书是你必须看的，它叫做**《深入理解Java虚拟机》**。这本书绝对是Java开发者最重要的书，没有之一。在我眼里，这本书的重要性还要高于《Java编程思想》。这本书的内容是帮助你全面的了解Java虚拟机，在这个阶段，你一定已经知道Java是运行在JVM之上的。所以，对于JVM，你没有任何理由不了解它。\n\n另外，在过去2年的工作当中，你肯定或多或少接触过并发。这个时候，你应该去更加深入的了解并发相关的知识，而这部分内容，我比较推荐**《Java并发编程实战》**这本书。只要你把这本书啃下来了，并发的部分基本已经了解了十之六。与此同时，这个阶段你要做的事情还远不止如此。这个时候，你应该对于你所使用的框架应该有了更深入的了解，对于Java的类库也有了更深入的了解。\n\n因此，你需要去看一些jdk中的类的源码，也包括你所使用的框架的源码。这些源码能看懂的前提是，你必须对设计模式非常了解。否则的话，你看源码的过程中，永远会有这样那样的疑问，这段代码为什么要这么写？为什么要定义这个接口，它看起来好像很多余？由此也可以看出，这些学习的过程是环环相扣的，如果你任何一个阶段拉下来了，那么你就真的跟不上了，或者说是一步慢步步慢。而且我很负责的告诉你，我在这个阶段的时候，所学习的东西远多于这里所罗列出来的。\n\n因此千万不要觉得你已经学的很多了，我所说的这些都只是最低要求，不光是我，很多人在这个时间段所学习的内容都远超本文的范围。如果你不能跟上节奏的话，若干年后，如果不是程序猿市场还不错的话，你很可能不仅仅是工资比别人低，公司没别人好，而是根本就找不到工作。总而言之，这个阶段，你需要做的是深入了解**Java底层**和**Java类库**（比如并发那本书就是Java并发包java.concurrent的内容），也就是JVM和JDK的相关内容。而且还要更深入的去了解你所使用的框架，方式比较推荐看源码或者看官方文档。另外，还有一种学习的方式，在2年这个阶段，也应该启用了，那就是造轮子。不要听信那套“不要重复造轮子”的论调，那是公司为了节省时间成本编造出来的。重复造轮子或许对别人没有价值，因为你造的轮子可能早就有了，而且一般情况下你造出来的轮子还没有现存的好。\n\n但是对别人没有价值，不代表对你自己没有价值。一个造轮子的过程，是一个从无到有的过程。这个过程可以对你进行系统的锻炼，它不仅考察你的编码能力，还考察你的框架设计能力，你需要让你的轮子拥有足够好的扩展性、健壮性。而且在造轮子的过程中，你会遇到各种各样的难题，这些难题往往又是你学习的契机。当你把轮子造好的时候，你一定会发现，其实你自己收获了很多。所以，这个阶段，除了上面提到的了解JVM/JDK和框架源码以外，也请你根据别人优秀的源码,去造一个任何你能够想象出来的轮子。\n\n# step 4 参加工作3年到4年的同学\n\n**对于参加工作3年到4年的同学**，这个阶段的同学，提升已经是很难了，而且这个阶段的学习往往会比较多样化。因为在前3年的过程中，你肯定或多或少接触过一些其它的技术，比如大数据、分布式缓存、分布式消息服务、分布式计算、软负载均衡等等。这些技术，你能精通任何一项，都将是你未来面试时巨大的优势，因此如果你对某一项技术感兴趣的话，这个时候可以深入去研究一下。这项技术不一定是你工作所用到的，但一定是相关的。而且在研究一门新技术时，切忌朝三暮四。有的同学今天去整整大数据，搞搞Hadoop/hbase一类的东西。过不了一段时间，就觉得没意思，又去研究分布式缓存，比如redis。然后又过不了一段时间，又去研究分布式计算，比如整整Mapreduce或者storm。结果到最后，搞得自己好像什么都会一样，在简历上大言不惭的写上大数据、分布式缓存、分布式计算都了解，其实任何一个都只是浮于表面。到时候面试官随便一问，就把你给识破了。\n\n一定要记住，作为一个程序猿，平日里所接触的技术可能会很多，但是想要让一门技术成为你的优势，那么一定是你对这门技术的了解强过绝大多数人才行。因此在这个阶段，你就不能再简单的去学习前3年的内容了，虽然前面的学习如果还不够深入的话依旧要继续，但这个时候你应该更多的考虑建立你的优势，也可以称为差异性。差异性相信不难理解，就是让你自己变得与众不同。你前面三年的学习足够你成为一名基本合格的Java开发者，但你离成为一名优秀的Java开发者还有很大的距离。\n\n所谓优秀，即能别人所不能。而你前三年所学习的内容，是很多做过几年的Java开发都能够掌握的。那么为了让自己有差异性，你就需要另辟蹊径，找一个方向深入研究下去，以期在将来，你能够成为这个领域的专家，比如分布式计算领域的专家，大数据领域的专家，并发领域的专家等等。此外，你除了建立你的差异性之外，还要去弥补你基础上的不足，直到现在，我都没有提及基础知识。原因是基础是很枯燥无味的，学的太早不仅容易懵逼，而且懵逼的同时还容易产生心理阴影，以至于以后再不想去研究这些基础。但基础又是你深入研究一些领域时所必须掌握的，比如你去研究分布式计算，你不懂算法你玩个毛？比如你去做分布式缓存，你对计算机系统的内存不了解，你如何去做缓存？\n\n如果你的基础本来就非常强，那么恭喜你，相信你在之前的工作中已经充分体会到了这些基础对你的帮助。但我相信大部分人的基础都很薄弱，哪怕是科班毕业的人，很多人也不敢说自己当初的基础学的多么强大，比如算法、计算机系统原理、编译原理这些。但是每个人时间都是有限的，而且这些基础的书籍每一本读下来，没个一年半载的，还真拿不下来，因此还是要有所抉择的。虽然艺多不压身，但问题是艺多是有代价的，是需要你付出时间和精力的，而我个人更赞成在同等代价的情况下获取最大的收获。\n\n首先，我比较推崇的基础书籍有三本，分别是**《深入理解计算机系统》**，**《tcp/ip详解 卷一、二、三》**，**《数据结构与算法》**。其中TCP/IP有三本书，但我们这里把这三本看成是一本大书。这三本分别适合三种人，《深入理解计算机系统》比较适合一直从事Java Web开发和APP后端开发工作的人群。《tcp/ip详解 卷一、二、三》比较适合做网络编程的人群，比如你使用netty去开发的话，那么就要对TCP/IP有更深入的了解。而《数据结构与算法》这本书，则比较适合做计算研究工作的人，比如刚才提到的分布式计算。另外，我要强调的是，这里所说的适合，并不是其它两本对你就没有用。比如你做Java Web和APP后端开发，《tcp/ip详解 卷一、二、三》这本书对你的作用也是很大的。这里只是分出个主次关系而已，你要是时间足够的话，能把三本都精读那当然最好不过了。\n\n但如果时间有限的话，那么就先挑对你帮助最大的书去读。理论上来讲，这一年你能把这三本其中一本精读下来，就已经非常厉害了。有了基础，有了前面的工作经验，你就可以去开拓属于你的领域了。在这一年里，一定要规划好自己的领域，建立好自己的优势，制造出差异性。如果你对自己的领域不够清晰的话，随着你工作的时间日益增多，你接触的技术会越来越多，这个时候，你很容易被淹死在技术的海洋里，看似接触的技术越来越多，会用的也越来越多，但你毫无优势。有的同学可能会问，“我，我也不知道我的领域是什么啊？怎么办呢？”对于这种人，我只想说，“卧槽，这还问我？要不干脆我替你学习得了，好不好？”\n\n# step 5 参加工作4年到5年的同学\n\n**对于参加工作4年到5年的同学**，经过前面一年的历练，相信你在自己所钻研的领域已经有了自己一定的见解，这个时候，技术上你应该已经遇到瓶颈了。这个时候不要着急提高自己的技术，已经是时候提高你的影响力了，你可以尝试去一些知名的公司去提高你的背景，你可以发表一些文章去影响更多的人。当然，你也可以去GitHub创建一个属于你的开源项目，去打造自己的产品。\n\n这次的开源项目不同于之前的造轮子，你这个时候是真的要去尽量尝试造出来真正对别人有价值的轮子。技术学到这个阶段，很容易遇到瓶颈，而且往往达到一定程度后，你再深入下去的收效就真的微乎其微了，除非你是专门搞学术研究的。然而很可惜，大部分程序猿做不到这一步，那是科学家做的事情。这个时候提高影响力不仅仅是因为技术上容易遇到瓶颈，更多的是影响力可以给你创造更多的机会。程序猿在某种程度上和明星很像，一个好的电视剧和电影就可以成就一批明星，程序猿有的时候也是，一个好的项目就可以成就一群程序猿。比如国内几个脍炙人口的项目，像淘宝、支付宝、QQ、百度、微信等等。这每一个项目，都成就了一批程序猿。我敢说，这里面任何一个项目，如果你是它的核心开发，光是这样一个Title，就已经是你非常大的优势。更何况还不止如此，Title说到底也是个名头，更重要的是，这种项目在做的时候，对你的历练一定也是非常给力的。\n\n而你如果想要参与这样的项目，除了靠运气之外，影响力也是很重要的一个手段。比如你在分布式计算领域有一定的影响力，那么如果有什么好的关于分布式计算的项目，对方就很可能会邀请你。就算人家不邀请你，你自己主动去面试的时候，对方如果知道你在这个领域的影响力，也肯定会起到很大的作用，而这个作用，甚至可能会超过你现在的技术能力。所以，在这个阶段，你最大的任务是提高自己的影响力，为自己未来的十年工作生涯那一天做准备。如果你能够靠你的影响力和以前积累的技术，参与到一个伟大的项目当中，那么你后面的五年也就有着落了。当然了，我现在满打满算，做程序猿也就4年半不到，因此关于4年到5年这一部分，我的见解不一定是对的，就算是对的，也不一定是适合任何人的。\n\n所以，希望大家自己有的判断力，去决定到底该如何度过这一年。  \n\n# 结语\n\n本文到此就基本结束了，整篇文章很长，但其实主要就说了两部分内容，一个是社招面试的准备，一个是Java生涯的学习。关于这两部分，我已经给出了自己的见解，但是还是那句话，每个人吸收知识的时候，都要有抽取精华，去除糟粕的能力。我所说的，可能有些是对的，有些是错的，有些是适合你的，有些是不太适合你的，你要自己能够判断。其实你在生活和工作当中也是一样的，你身边的人形形色色，有的人你喜欢，有的人你很讨厌。但其实你喜欢的人也有缺点，你讨厌的人也有优点。你要学会从你讨厌的人身上学会他的优点，千万不要一棒子打死，这只会让你失去很多学习成长的机会。好了，说了这么多了，就到此为止吧，希望本文可以帮助到作为程序猿或即将成为程序猿的你。  \n\n**声明**：*本文转载自网络，[原文地址](http://www.cnblogs.com/huaxingtianxia/p/5724093.html)。*\n\n*这篇文章发表自2016年，距离现在已经过了很长一段时间。可能再过一段时间，会出现更多的技术，学习路线可能也会发生改变。但是这篇文章的一些想法和思路是非常值得借鉴和学习的。---2018年6月17日*\n\n*整理博客时，又看到了这篇文章。这回正式决心杀进程序猿行业，拿出半年时间培训，最后一次机会，来之不易，成本颇大，规划好学习路线，必须比其他人掌握的更多，才能多一份机会。我发现培训机构的同学是真心都学习啊，课堂气氛太活跃了。---2020年4月20日*","slug":"根据转载的一篇文章总结的Java学习方法","published":1,"updated":"2020-04-20T15:45:49.718Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6g8000reiudajohi4mc","content":"<h1 id=\"step-1-学习路线\"><a href=\"#step-1-学习路线\" class=\"headerlink\" title=\"step 1 学习路线\"></a>step 1 学习路线</h1><p>路线：<strong><em>JavaSE–&gt;web–&gt;Java后端</em></strong></p>\n<h3 id=\"1-JavaSE\"><a href=\"#1-JavaSE\" class=\"headerlink\" title=\"1. JavaSE\"></a>1. JavaSE</h3><p>找一个Java基础教程，尽量多动手，对Java有一个基本的了解。</p>\n<h3 id=\"2-web开发\"><a href=\"#2-web开发\" class=\"headerlink\" title=\"2. web开发\"></a>2. web开发</h3><p><strong>学习web，学习顺序：</strong>  </p>\n<ol>\n<li><p>HTML/CSS/JS</p>\n</li>\n<li><p>Servlet/JSP(JAVAEE)</p>\n</li>\n<li><p>Mysql(数据库)</p>\n</li>\n</ol>\n<ul>\n<li><p>首先，要学习<strong>HTML/CSS/JS</strong>，这些东西对于Java后端开发来说，理论上不是特别重要，但至少要达到可以自己写页面的水平。</p>\n</li>\n<li><p>然后，<strong>Servlet/JSP(JAVAEE)</strong>这部分，这部分是Java后端必须必须精通的，这部分也是三部分中最需要花费精力的。</p>\n</li>\n<li><p>最后，学习使用数据库，<strong>Mysql</strong>是不错的入门选择，而且Java领域主流的关系型数据库就是Myqsl。这部分一般在学习<strong>Servlet/JSP</strong>的时候就会接触到，其中JDBC部分就是数据库的相关部分。这部分不仅要学会用JDBC操作数据库，还要学会使用数据库客户端工具，例如：<strong>navicat</strong>，<strong>sqlyog</strong>，二选一即可.  </p>\n</li>\n</ul>\n<h3 id=\"3-开发框架\"><a href=\"#3-开发框架\" class=\"headerlink\" title=\"3. 开发框架\"></a>3. 开发框架</h3><p>学会以上内容还不足以参加工作，为了提高开发效率，会使用一些<strong>Java Web框架</strong>。目前比较主流的是<strong>SSM框架</strong>，即<strong>spring</strong>，<strong>springmvc</strong>，<strong>mybatis</strong>。这里需要学会这三种框架的搭建，并用他们做出一个简单的增删改查项目.</p>\n<p>快速地利用SSM搭建出一个web框架是必须的，记录下第一次的搭建过程是很有必要的。在搭建SSM的过程中，会接触到一个叫<strong>maven</strong>的工具，这个工具是以后工作当中会经常用到的工具。在目前这个阶段，只需要到网上了解一下maven的基本用法即可，更高端的用法会随着工作经验的增加，逐渐接触到的。</p>\n<h3 id=\"4-找工作\"><a href=\"#4-找工作\" class=\"headerlink\" title=\"4. 找工作\"></a>4. 找工作</h3><p>当完成开发框架的学习以后，就该找工作了。在找工作的同时，不应该停下学习。上面这些内容只是囫囵吞枣的学会了使用，你可以逐步尝试着去了解更多的东西，网络是你最重要的老师。</p>\n<h1 id=\"step-2-Java编程思想-深入理解Java基础\"><a href=\"#step-2-Java编程思想-深入理解Java基础\" class=\"headerlink\" title=\"step 2 Java编程思想,深入理解Java基础\"></a>step 2 Java编程思想,深入理解Java基础</h1><p>对于参加工作<strong><em>1年以内</em></strong>的同学，恭喜你，这个时候，你已经拥有了一份Java的工作。这个阶段是你成长极快的阶段，而且你可能会经常加班。但是加班不代表你就可以松懈了，永远记得我说的那句话，<em>从你入行那一刻起，你就要不停的学习</em>。 </p>\n<p>在这一年里，你至少需要看完<strong>《Java编程思想》</strong>这本书。这本书的内容是帮助你对于Java有一个更加深入的了解，是Java基础的升级版。这本书很厚，当初看这本书，我花了整整三个月。正常速度的话，应该可以在半年左右看完。我这里不要求过高，只要你在一年以内把这本书看完即可。当然了，我所说的看完，是充分吸收，而不是读一遍就完事了，因此有些内容你可能会看不止一遍。总而言之，这个阶段的核心学习思想就是，在工作中实践，并且更加深入的了解Java基础。</p>\n<h3 id=\"设计模型\"><a href=\"#设计模型\" class=\"headerlink\" title=\"设计模型\"></a>设计模型</h3><p><strong>对于参加工作1年到2年的同学</strong>，这部分时间段的同学，已经对Java有了一个更加深入的了解。但是对于面向对象的体会可能还不够深刻，编程的时候还停留在完成功能的层次，很少会去考虑设计的问题。于是这个时候，设计模式就来了。我当时看的是<strong>《大话设计模式》</strong>这本书，并且写了完整版的设计模式博客。因此，我要求大家，最多在你工作一年的时候，必须开始写博客，而设计模式就是你博客的开端。</p>\n<p>请记住，我所提的基本都是最低要求，因此不要有任何松懈的心理，否则五年后，你不要去羡慕别人高于你的工资，也不要去羡慕别人进入了某公司。这一年，你必须对于设计模式了如指掌，《大话设计模式》可以作为你的开端。此外，设计模式并不是你这一年唯一的任务，你还需要看一些关于代码编写优化的书。比如<strong>《重构 改善既有代码的设计》</strong>，<strong>《effective java》</strong>。总而言之，这个阶段，你的核心任务就是提高你的代码能力，要能写出一手优雅的代码。  </p>\n<h1 id=\"step-3-参加工作2年到3年的同学\"><a href=\"#step-3-参加工作2年到3年的同学\" class=\"headerlink\" title=\"step 3 参加工作2年到3年的同学\"></a>step 3 参加工作2年到3年的同学</h1><p><strong>对于参加工作2年到3年的同学</strong>，有的同学在这个时候觉得自己已经很牛逼了，于是忍不住开始慢慢松懈.请记住,你还嫩的多。对这个阶段，有一本书是你必须看的，它叫做<strong>《深入理解Java虚拟机》</strong>。这本书绝对是Java开发者最重要的书，没有之一。在我眼里，这本书的重要性还要高于《Java编程思想》。这本书的内容是帮助你全面的了解Java虚拟机，在这个阶段，你一定已经知道Java是运行在JVM之上的。所以，对于JVM，你没有任何理由不了解它。</p>\n<p>另外，在过去2年的工作当中，你肯定或多或少接触过并发。这个时候，你应该去更加深入的了解并发相关的知识，而这部分内容，我比较推荐<strong>《Java并发编程实战》</strong>这本书。只要你把这本书啃下来了，并发的部分基本已经了解了十之六。与此同时，这个阶段你要做的事情还远不止如此。这个时候，你应该对于你所使用的框架应该有了更深入的了解，对于Java的类库也有了更深入的了解。</p>\n<p>因此，你需要去看一些jdk中的类的源码，也包括你所使用的框架的源码。这些源码能看懂的前提是，你必须对设计模式非常了解。否则的话，你看源码的过程中，永远会有这样那样的疑问，这段代码为什么要这么写？为什么要定义这个接口，它看起来好像很多余？由此也可以看出，这些学习的过程是环环相扣的，如果你任何一个阶段拉下来了，那么你就真的跟不上了，或者说是一步慢步步慢。而且我很负责的告诉你，我在这个阶段的时候，所学习的东西远多于这里所罗列出来的。</p>\n<p>因此千万不要觉得你已经学的很多了，我所说的这些都只是最低要求，不光是我，很多人在这个时间段所学习的内容都远超本文的范围。如果你不能跟上节奏的话，若干年后，如果不是程序猿市场还不错的话，你很可能不仅仅是工资比别人低，公司没别人好，而是根本就找不到工作。总而言之，这个阶段，你需要做的是深入了解<strong>Java底层</strong>和<strong>Java类库</strong>（比如并发那本书就是Java并发包java.concurrent的内容），也就是JVM和JDK的相关内容。而且还要更深入的去了解你所使用的框架，方式比较推荐看源码或者看官方文档。另外，还有一种学习的方式，在2年这个阶段，也应该启用了，那就是造轮子。不要听信那套“不要重复造轮子”的论调，那是公司为了节省时间成本编造出来的。重复造轮子或许对别人没有价值，因为你造的轮子可能早就有了，而且一般情况下你造出来的轮子还没有现存的好。</p>\n<p>但是对别人没有价值，不代表对你自己没有价值。一个造轮子的过程，是一个从无到有的过程。这个过程可以对你进行系统的锻炼，它不仅考察你的编码能力，还考察你的框架设计能力，你需要让你的轮子拥有足够好的扩展性、健壮性。而且在造轮子的过程中，你会遇到各种各样的难题，这些难题往往又是你学习的契机。当你把轮子造好的时候，你一定会发现，其实你自己收获了很多。所以，这个阶段，除了上面提到的了解JVM/JDK和框架源码以外，也请你根据别人优秀的源码,去造一个任何你能够想象出来的轮子。</p>\n<h1 id=\"step-4-参加工作3年到4年的同学\"><a href=\"#step-4-参加工作3年到4年的同学\" class=\"headerlink\" title=\"step 4 参加工作3年到4年的同学\"></a>step 4 参加工作3年到4年的同学</h1><p><strong>对于参加工作3年到4年的同学</strong>，这个阶段的同学，提升已经是很难了，而且这个阶段的学习往往会比较多样化。因为在前3年的过程中，你肯定或多或少接触过一些其它的技术，比如大数据、分布式缓存、分布式消息服务、分布式计算、软负载均衡等等。这些技术，你能精通任何一项，都将是你未来面试时巨大的优势，因此如果你对某一项技术感兴趣的话，这个时候可以深入去研究一下。这项技术不一定是你工作所用到的，但一定是相关的。而且在研究一门新技术时，切忌朝三暮四。有的同学今天去整整大数据，搞搞Hadoop/hbase一类的东西。过不了一段时间，就觉得没意思，又去研究分布式缓存，比如redis。然后又过不了一段时间，又去研究分布式计算，比如整整Mapreduce或者storm。结果到最后，搞得自己好像什么都会一样，在简历上大言不惭的写上大数据、分布式缓存、分布式计算都了解，其实任何一个都只是浮于表面。到时候面试官随便一问，就把你给识破了。</p>\n<p>一定要记住，作为一个程序猿，平日里所接触的技术可能会很多，但是想要让一门技术成为你的优势，那么一定是你对这门技术的了解强过绝大多数人才行。因此在这个阶段，你就不能再简单的去学习前3年的内容了，虽然前面的学习如果还不够深入的话依旧要继续，但这个时候你应该更多的考虑建立你的优势，也可以称为差异性。差异性相信不难理解，就是让你自己变得与众不同。你前面三年的学习足够你成为一名基本合格的Java开发者，但你离成为一名优秀的Java开发者还有很大的距离。</p>\n<p>所谓优秀，即能别人所不能。而你前三年所学习的内容，是很多做过几年的Java开发都能够掌握的。那么为了让自己有差异性，你就需要另辟蹊径，找一个方向深入研究下去，以期在将来，你能够成为这个领域的专家，比如分布式计算领域的专家，大数据领域的专家，并发领域的专家等等。此外，你除了建立你的差异性之外，还要去弥补你基础上的不足，直到现在，我都没有提及基础知识。原因是基础是很枯燥无味的，学的太早不仅容易懵逼，而且懵逼的同时还容易产生心理阴影，以至于以后再不想去研究这些基础。但基础又是你深入研究一些领域时所必须掌握的，比如你去研究分布式计算，你不懂算法你玩个毛？比如你去做分布式缓存，你对计算机系统的内存不了解，你如何去做缓存？</p>\n<p>如果你的基础本来就非常强，那么恭喜你，相信你在之前的工作中已经充分体会到了这些基础对你的帮助。但我相信大部分人的基础都很薄弱，哪怕是科班毕业的人，很多人也不敢说自己当初的基础学的多么强大，比如算法、计算机系统原理、编译原理这些。但是每个人时间都是有限的，而且这些基础的书籍每一本读下来，没个一年半载的，还真拿不下来，因此还是要有所抉择的。虽然艺多不压身，但问题是艺多是有代价的，是需要你付出时间和精力的，而我个人更赞成在同等代价的情况下获取最大的收获。</p>\n<p>首先，我比较推崇的基础书籍有三本，分别是<strong>《深入理解计算机系统》</strong>，<strong>《tcp/ip详解 卷一、二、三》</strong>，<strong>《数据结构与算法》</strong>。其中TCP/IP有三本书，但我们这里把这三本看成是一本大书。这三本分别适合三种人，《深入理解计算机系统》比较适合一直从事Java Web开发和APP后端开发工作的人群。《tcp/ip详解 卷一、二、三》比较适合做网络编程的人群，比如你使用netty去开发的话，那么就要对TCP/IP有更深入的了解。而《数据结构与算法》这本书，则比较适合做计算研究工作的人，比如刚才提到的分布式计算。另外，我要强调的是，这里所说的适合，并不是其它两本对你就没有用。比如你做Java Web和APP后端开发，《tcp/ip详解 卷一、二、三》这本书对你的作用也是很大的。这里只是分出个主次关系而已，你要是时间足够的话，能把三本都精读那当然最好不过了。</p>\n<p>但如果时间有限的话，那么就先挑对你帮助最大的书去读。理论上来讲，这一年你能把这三本其中一本精读下来，就已经非常厉害了。有了基础，有了前面的工作经验，你就可以去开拓属于你的领域了。在这一年里，一定要规划好自己的领域，建立好自己的优势，制造出差异性。如果你对自己的领域不够清晰的话，随着你工作的时间日益增多，你接触的技术会越来越多，这个时候，你很容易被淹死在技术的海洋里，看似接触的技术越来越多，会用的也越来越多，但你毫无优势。有的同学可能会问，“我，我也不知道我的领域是什么啊？怎么办呢？”对于这种人，我只想说，“卧槽，这还问我？要不干脆我替你学习得了，好不好？”</p>\n<h1 id=\"step-5-参加工作4年到5年的同学\"><a href=\"#step-5-参加工作4年到5年的同学\" class=\"headerlink\" title=\"step 5 参加工作4年到5年的同学\"></a>step 5 参加工作4年到5年的同学</h1><p><strong>对于参加工作4年到5年的同学</strong>，经过前面一年的历练，相信你在自己所钻研的领域已经有了自己一定的见解，这个时候，技术上你应该已经遇到瓶颈了。这个时候不要着急提高自己的技术，已经是时候提高你的影响力了，你可以尝试去一些知名的公司去提高你的背景，你可以发表一些文章去影响更多的人。当然，你也可以去GitHub创建一个属于你的开源项目，去打造自己的产品。</p>\n<p>这次的开源项目不同于之前的造轮子，你这个时候是真的要去尽量尝试造出来真正对别人有价值的轮子。技术学到这个阶段，很容易遇到瓶颈，而且往往达到一定程度后，你再深入下去的收效就真的微乎其微了，除非你是专门搞学术研究的。然而很可惜，大部分程序猿做不到这一步，那是科学家做的事情。这个时候提高影响力不仅仅是因为技术上容易遇到瓶颈，更多的是影响力可以给你创造更多的机会。程序猿在某种程度上和明星很像，一个好的电视剧和电影就可以成就一批明星，程序猿有的时候也是，一个好的项目就可以成就一群程序猿。比如国内几个脍炙人口的项目，像淘宝、支付宝、QQ、百度、微信等等。这每一个项目，都成就了一批程序猿。我敢说，这里面任何一个项目，如果你是它的核心开发，光是这样一个Title，就已经是你非常大的优势。更何况还不止如此，Title说到底也是个名头，更重要的是，这种项目在做的时候，对你的历练一定也是非常给力的。</p>\n<p>而你如果想要参与这样的项目，除了靠运气之外，影响力也是很重要的一个手段。比如你在分布式计算领域有一定的影响力，那么如果有什么好的关于分布式计算的项目，对方就很可能会邀请你。就算人家不邀请你，你自己主动去面试的时候，对方如果知道你在这个领域的影响力，也肯定会起到很大的作用，而这个作用，甚至可能会超过你现在的技术能力。所以，在这个阶段，你最大的任务是提高自己的影响力，为自己未来的十年工作生涯那一天做准备。如果你能够靠你的影响力和以前积累的技术，参与到一个伟大的项目当中，那么你后面的五年也就有着落了。当然了，我现在满打满算，做程序猿也就4年半不到，因此关于4年到5年这一部分，我的见解不一定是对的，就算是对的，也不一定是适合任何人的。</p>\n<p>所以，希望大家自己有的判断力，去决定到底该如何度过这一年。  </p>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>本文到此就基本结束了，整篇文章很长，但其实主要就说了两部分内容，一个是社招面试的准备，一个是Java生涯的学习。关于这两部分，我已经给出了自己的见解，但是还是那句话，每个人吸收知识的时候，都要有抽取精华，去除糟粕的能力。我所说的，可能有些是对的，有些是错的，有些是适合你的，有些是不太适合你的，你要自己能够判断。其实你在生活和工作当中也是一样的，你身边的人形形色色，有的人你喜欢，有的人你很讨厌。但其实你喜欢的人也有缺点，你讨厌的人也有优点。你要学会从你讨厌的人身上学会他的优点，千万不要一棒子打死，这只会让你失去很多学习成长的机会。好了，说了这么多了，就到此为止吧，希望本文可以帮助到作为程序猿或即将成为程序猿的你。  </p>\n<p><strong>声明</strong>：<em>本文转载自网络，<a href=\"http://www.cnblogs.com/huaxingtianxia/p/5724093.html\" target=\"_blank\" rel=\"noopener\">原文地址</a>。</em></p>\n<p><em>这篇文章发表自2016年，距离现在已经过了很长一段时间。可能再过一段时间，会出现更多的技术，学习路线可能也会发生改变。但是这篇文章的一些想法和思路是非常值得借鉴和学习的。—2018年6月17日</em></p>\n<p><em>整理博客时，又看到了这篇文章。这回正式决心杀进程序猿行业，拿出半年时间培训，最后一次机会，来之不易，成本颇大，规划好学习路线，必须比其他人掌握的更多，才能多一份机会。我发现培训机构的同学是真心都学习啊，课堂气氛太活跃了。—2020年4月20日</em></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"step-1-学习路线\"><a href=\"#step-1-学习路线\" class=\"headerlink\" title=\"step 1 学习路线\"></a>step 1 学习路线</h1><p>路线：<strong><em>JavaSE–&gt;web–&gt;Java后端</em></strong></p>\n<h3 id=\"1-JavaSE\"><a href=\"#1-JavaSE\" class=\"headerlink\" title=\"1. JavaSE\"></a>1. JavaSE</h3><p>找一个Java基础教程，尽量多动手，对Java有一个基本的了解。</p>\n<h3 id=\"2-web开发\"><a href=\"#2-web开发\" class=\"headerlink\" title=\"2. web开发\"></a>2. web开发</h3><p><strong>学习web，学习顺序：</strong>  </p>\n<ol>\n<li><p>HTML/CSS/JS</p>\n</li>\n<li><p>Servlet/JSP(JAVAEE)</p>\n</li>\n<li><p>Mysql(数据库)</p>\n</li>\n</ol>\n<ul>\n<li><p>首先，要学习<strong>HTML/CSS/JS</strong>，这些东西对于Java后端开发来说，理论上不是特别重要，但至少要达到可以自己写页面的水平。</p>\n</li>\n<li><p>然后，<strong>Servlet/JSP(JAVAEE)</strong>这部分，这部分是Java后端必须必须精通的，这部分也是三部分中最需要花费精力的。</p>\n</li>\n<li><p>最后，学习使用数据库，<strong>Mysql</strong>是不错的入门选择，而且Java领域主流的关系型数据库就是Myqsl。这部分一般在学习<strong>Servlet/JSP</strong>的时候就会接触到，其中JDBC部分就是数据库的相关部分。这部分不仅要学会用JDBC操作数据库，还要学会使用数据库客户端工具，例如：<strong>navicat</strong>，<strong>sqlyog</strong>，二选一即可.  </p>\n</li>\n</ul>\n<h3 id=\"3-开发框架\"><a href=\"#3-开发框架\" class=\"headerlink\" title=\"3. 开发框架\"></a>3. 开发框架</h3><p>学会以上内容还不足以参加工作，为了提高开发效率，会使用一些<strong>Java Web框架</strong>。目前比较主流的是<strong>SSM框架</strong>，即<strong>spring</strong>，<strong>springmvc</strong>，<strong>mybatis</strong>。这里需要学会这三种框架的搭建，并用他们做出一个简单的增删改查项目.</p>\n<p>快速地利用SSM搭建出一个web框架是必须的，记录下第一次的搭建过程是很有必要的。在搭建SSM的过程中，会接触到一个叫<strong>maven</strong>的工具，这个工具是以后工作当中会经常用到的工具。在目前这个阶段，只需要到网上了解一下maven的基本用法即可，更高端的用法会随着工作经验的增加，逐渐接触到的。</p>\n<h3 id=\"4-找工作\"><a href=\"#4-找工作\" class=\"headerlink\" title=\"4. 找工作\"></a>4. 找工作</h3><p>当完成开发框架的学习以后，就该找工作了。在找工作的同时，不应该停下学习。上面这些内容只是囫囵吞枣的学会了使用，你可以逐步尝试着去了解更多的东西，网络是你最重要的老师。</p>\n<h1 id=\"step-2-Java编程思想-深入理解Java基础\"><a href=\"#step-2-Java编程思想-深入理解Java基础\" class=\"headerlink\" title=\"step 2 Java编程思想,深入理解Java基础\"></a>step 2 Java编程思想,深入理解Java基础</h1><p>对于参加工作<strong><em>1年以内</em></strong>的同学，恭喜你，这个时候，你已经拥有了一份Java的工作。这个阶段是你成长极快的阶段，而且你可能会经常加班。但是加班不代表你就可以松懈了，永远记得我说的那句话，<em>从你入行那一刻起，你就要不停的学习</em>。 </p>\n<p>在这一年里，你至少需要看完<strong>《Java编程思想》</strong>这本书。这本书的内容是帮助你对于Java有一个更加深入的了解，是Java基础的升级版。这本书很厚，当初看这本书，我花了整整三个月。正常速度的话，应该可以在半年左右看完。我这里不要求过高，只要你在一年以内把这本书看完即可。当然了，我所说的看完，是充分吸收，而不是读一遍就完事了，因此有些内容你可能会看不止一遍。总而言之，这个阶段的核心学习思想就是，在工作中实践，并且更加深入的了解Java基础。</p>\n<h3 id=\"设计模型\"><a href=\"#设计模型\" class=\"headerlink\" title=\"设计模型\"></a>设计模型</h3><p><strong>对于参加工作1年到2年的同学</strong>，这部分时间段的同学，已经对Java有了一个更加深入的了解。但是对于面向对象的体会可能还不够深刻，编程的时候还停留在完成功能的层次，很少会去考虑设计的问题。于是这个时候，设计模式就来了。我当时看的是<strong>《大话设计模式》</strong>这本书，并且写了完整版的设计模式博客。因此，我要求大家，最多在你工作一年的时候，必须开始写博客，而设计模式就是你博客的开端。</p>\n<p>请记住，我所提的基本都是最低要求，因此不要有任何松懈的心理，否则五年后，你不要去羡慕别人高于你的工资，也不要去羡慕别人进入了某公司。这一年，你必须对于设计模式了如指掌，《大话设计模式》可以作为你的开端。此外，设计模式并不是你这一年唯一的任务，你还需要看一些关于代码编写优化的书。比如<strong>《重构 改善既有代码的设计》</strong>，<strong>《effective java》</strong>。总而言之，这个阶段，你的核心任务就是提高你的代码能力，要能写出一手优雅的代码。  </p>\n<h1 id=\"step-3-参加工作2年到3年的同学\"><a href=\"#step-3-参加工作2年到3年的同学\" class=\"headerlink\" title=\"step 3 参加工作2年到3年的同学\"></a>step 3 参加工作2年到3年的同学</h1><p><strong>对于参加工作2年到3年的同学</strong>，有的同学在这个时候觉得自己已经很牛逼了，于是忍不住开始慢慢松懈.请记住,你还嫩的多。对这个阶段，有一本书是你必须看的，它叫做<strong>《深入理解Java虚拟机》</strong>。这本书绝对是Java开发者最重要的书，没有之一。在我眼里，这本书的重要性还要高于《Java编程思想》。这本书的内容是帮助你全面的了解Java虚拟机，在这个阶段，你一定已经知道Java是运行在JVM之上的。所以，对于JVM，你没有任何理由不了解它。</p>\n<p>另外，在过去2年的工作当中，你肯定或多或少接触过并发。这个时候，你应该去更加深入的了解并发相关的知识，而这部分内容，我比较推荐<strong>《Java并发编程实战》</strong>这本书。只要你把这本书啃下来了，并发的部分基本已经了解了十之六。与此同时，这个阶段你要做的事情还远不止如此。这个时候，你应该对于你所使用的框架应该有了更深入的了解，对于Java的类库也有了更深入的了解。</p>\n<p>因此，你需要去看一些jdk中的类的源码，也包括你所使用的框架的源码。这些源码能看懂的前提是，你必须对设计模式非常了解。否则的话，你看源码的过程中，永远会有这样那样的疑问，这段代码为什么要这么写？为什么要定义这个接口，它看起来好像很多余？由此也可以看出，这些学习的过程是环环相扣的，如果你任何一个阶段拉下来了，那么你就真的跟不上了，或者说是一步慢步步慢。而且我很负责的告诉你，我在这个阶段的时候，所学习的东西远多于这里所罗列出来的。</p>\n<p>因此千万不要觉得你已经学的很多了，我所说的这些都只是最低要求，不光是我，很多人在这个时间段所学习的内容都远超本文的范围。如果你不能跟上节奏的话，若干年后，如果不是程序猿市场还不错的话，你很可能不仅仅是工资比别人低，公司没别人好，而是根本就找不到工作。总而言之，这个阶段，你需要做的是深入了解<strong>Java底层</strong>和<strong>Java类库</strong>（比如并发那本书就是Java并发包java.concurrent的内容），也就是JVM和JDK的相关内容。而且还要更深入的去了解你所使用的框架，方式比较推荐看源码或者看官方文档。另外，还有一种学习的方式，在2年这个阶段，也应该启用了，那就是造轮子。不要听信那套“不要重复造轮子”的论调，那是公司为了节省时间成本编造出来的。重复造轮子或许对别人没有价值，因为你造的轮子可能早就有了，而且一般情况下你造出来的轮子还没有现存的好。</p>\n<p>但是对别人没有价值，不代表对你自己没有价值。一个造轮子的过程，是一个从无到有的过程。这个过程可以对你进行系统的锻炼，它不仅考察你的编码能力，还考察你的框架设计能力，你需要让你的轮子拥有足够好的扩展性、健壮性。而且在造轮子的过程中，你会遇到各种各样的难题，这些难题往往又是你学习的契机。当你把轮子造好的时候，你一定会发现，其实你自己收获了很多。所以，这个阶段，除了上面提到的了解JVM/JDK和框架源码以外，也请你根据别人优秀的源码,去造一个任何你能够想象出来的轮子。</p>\n<h1 id=\"step-4-参加工作3年到4年的同学\"><a href=\"#step-4-参加工作3年到4年的同学\" class=\"headerlink\" title=\"step 4 参加工作3年到4年的同学\"></a>step 4 参加工作3年到4年的同学</h1><p><strong>对于参加工作3年到4年的同学</strong>，这个阶段的同学，提升已经是很难了，而且这个阶段的学习往往会比较多样化。因为在前3年的过程中，你肯定或多或少接触过一些其它的技术，比如大数据、分布式缓存、分布式消息服务、分布式计算、软负载均衡等等。这些技术，你能精通任何一项，都将是你未来面试时巨大的优势，因此如果你对某一项技术感兴趣的话，这个时候可以深入去研究一下。这项技术不一定是你工作所用到的，但一定是相关的。而且在研究一门新技术时，切忌朝三暮四。有的同学今天去整整大数据，搞搞Hadoop/hbase一类的东西。过不了一段时间，就觉得没意思，又去研究分布式缓存，比如redis。然后又过不了一段时间，又去研究分布式计算，比如整整Mapreduce或者storm。结果到最后，搞得自己好像什么都会一样，在简历上大言不惭的写上大数据、分布式缓存、分布式计算都了解，其实任何一个都只是浮于表面。到时候面试官随便一问，就把你给识破了。</p>\n<p>一定要记住，作为一个程序猿，平日里所接触的技术可能会很多，但是想要让一门技术成为你的优势，那么一定是你对这门技术的了解强过绝大多数人才行。因此在这个阶段，你就不能再简单的去学习前3年的内容了，虽然前面的学习如果还不够深入的话依旧要继续，但这个时候你应该更多的考虑建立你的优势，也可以称为差异性。差异性相信不难理解，就是让你自己变得与众不同。你前面三年的学习足够你成为一名基本合格的Java开发者，但你离成为一名优秀的Java开发者还有很大的距离。</p>\n<p>所谓优秀，即能别人所不能。而你前三年所学习的内容，是很多做过几年的Java开发都能够掌握的。那么为了让自己有差异性，你就需要另辟蹊径，找一个方向深入研究下去，以期在将来，你能够成为这个领域的专家，比如分布式计算领域的专家，大数据领域的专家，并发领域的专家等等。此外，你除了建立你的差异性之外，还要去弥补你基础上的不足，直到现在，我都没有提及基础知识。原因是基础是很枯燥无味的，学的太早不仅容易懵逼，而且懵逼的同时还容易产生心理阴影，以至于以后再不想去研究这些基础。但基础又是你深入研究一些领域时所必须掌握的，比如你去研究分布式计算，你不懂算法你玩个毛？比如你去做分布式缓存，你对计算机系统的内存不了解，你如何去做缓存？</p>\n<p>如果你的基础本来就非常强，那么恭喜你，相信你在之前的工作中已经充分体会到了这些基础对你的帮助。但我相信大部分人的基础都很薄弱，哪怕是科班毕业的人，很多人也不敢说自己当初的基础学的多么强大，比如算法、计算机系统原理、编译原理这些。但是每个人时间都是有限的，而且这些基础的书籍每一本读下来，没个一年半载的，还真拿不下来，因此还是要有所抉择的。虽然艺多不压身，但问题是艺多是有代价的，是需要你付出时间和精力的，而我个人更赞成在同等代价的情况下获取最大的收获。</p>\n<p>首先，我比较推崇的基础书籍有三本，分别是<strong>《深入理解计算机系统》</strong>，<strong>《tcp/ip详解 卷一、二、三》</strong>，<strong>《数据结构与算法》</strong>。其中TCP/IP有三本书，但我们这里把这三本看成是一本大书。这三本分别适合三种人，《深入理解计算机系统》比较适合一直从事Java Web开发和APP后端开发工作的人群。《tcp/ip详解 卷一、二、三》比较适合做网络编程的人群，比如你使用netty去开发的话，那么就要对TCP/IP有更深入的了解。而《数据结构与算法》这本书，则比较适合做计算研究工作的人，比如刚才提到的分布式计算。另外，我要强调的是，这里所说的适合，并不是其它两本对你就没有用。比如你做Java Web和APP后端开发，《tcp/ip详解 卷一、二、三》这本书对你的作用也是很大的。这里只是分出个主次关系而已，你要是时间足够的话，能把三本都精读那当然最好不过了。</p>\n<p>但如果时间有限的话，那么就先挑对你帮助最大的书去读。理论上来讲，这一年你能把这三本其中一本精读下来，就已经非常厉害了。有了基础，有了前面的工作经验，你就可以去开拓属于你的领域了。在这一年里，一定要规划好自己的领域，建立好自己的优势，制造出差异性。如果你对自己的领域不够清晰的话，随着你工作的时间日益增多，你接触的技术会越来越多，这个时候，你很容易被淹死在技术的海洋里，看似接触的技术越来越多，会用的也越来越多，但你毫无优势。有的同学可能会问，“我，我也不知道我的领域是什么啊？怎么办呢？”对于这种人，我只想说，“卧槽，这还问我？要不干脆我替你学习得了，好不好？”</p>\n<h1 id=\"step-5-参加工作4年到5年的同学\"><a href=\"#step-5-参加工作4年到5年的同学\" class=\"headerlink\" title=\"step 5 参加工作4年到5年的同学\"></a>step 5 参加工作4年到5年的同学</h1><p><strong>对于参加工作4年到5年的同学</strong>，经过前面一年的历练，相信你在自己所钻研的领域已经有了自己一定的见解，这个时候，技术上你应该已经遇到瓶颈了。这个时候不要着急提高自己的技术，已经是时候提高你的影响力了，你可以尝试去一些知名的公司去提高你的背景，你可以发表一些文章去影响更多的人。当然，你也可以去GitHub创建一个属于你的开源项目，去打造自己的产品。</p>\n<p>这次的开源项目不同于之前的造轮子，你这个时候是真的要去尽量尝试造出来真正对别人有价值的轮子。技术学到这个阶段，很容易遇到瓶颈，而且往往达到一定程度后，你再深入下去的收效就真的微乎其微了，除非你是专门搞学术研究的。然而很可惜，大部分程序猿做不到这一步，那是科学家做的事情。这个时候提高影响力不仅仅是因为技术上容易遇到瓶颈，更多的是影响力可以给你创造更多的机会。程序猿在某种程度上和明星很像，一个好的电视剧和电影就可以成就一批明星，程序猿有的时候也是，一个好的项目就可以成就一群程序猿。比如国内几个脍炙人口的项目，像淘宝、支付宝、QQ、百度、微信等等。这每一个项目，都成就了一批程序猿。我敢说，这里面任何一个项目，如果你是它的核心开发，光是这样一个Title，就已经是你非常大的优势。更何况还不止如此，Title说到底也是个名头，更重要的是，这种项目在做的时候，对你的历练一定也是非常给力的。</p>\n<p>而你如果想要参与这样的项目，除了靠运气之外，影响力也是很重要的一个手段。比如你在分布式计算领域有一定的影响力，那么如果有什么好的关于分布式计算的项目，对方就很可能会邀请你。就算人家不邀请你，你自己主动去面试的时候，对方如果知道你在这个领域的影响力，也肯定会起到很大的作用，而这个作用，甚至可能会超过你现在的技术能力。所以，在这个阶段，你最大的任务是提高自己的影响力，为自己未来的十年工作生涯那一天做准备。如果你能够靠你的影响力和以前积累的技术，参与到一个伟大的项目当中，那么你后面的五年也就有着落了。当然了，我现在满打满算，做程序猿也就4年半不到，因此关于4年到5年这一部分，我的见解不一定是对的，就算是对的，也不一定是适合任何人的。</p>\n<p>所以，希望大家自己有的判断力，去决定到底该如何度过这一年。  </p>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>本文到此就基本结束了，整篇文章很长，但其实主要就说了两部分内容，一个是社招面试的准备，一个是Java生涯的学习。关于这两部分，我已经给出了自己的见解，但是还是那句话，每个人吸收知识的时候，都要有抽取精华，去除糟粕的能力。我所说的，可能有些是对的，有些是错的，有些是适合你的，有些是不太适合你的，你要自己能够判断。其实你在生活和工作当中也是一样的，你身边的人形形色色，有的人你喜欢，有的人你很讨厌。但其实你喜欢的人也有缺点，你讨厌的人也有优点。你要学会从你讨厌的人身上学会他的优点，千万不要一棒子打死，这只会让你失去很多学习成长的机会。好了，说了这么多了，就到此为止吧，希望本文可以帮助到作为程序猿或即将成为程序猿的你。  </p>\n<p><strong>声明</strong>：<em>本文转载自网络，<a href=\"http://www.cnblogs.com/huaxingtianxia/p/5724093.html\" target=\"_blank\" rel=\"noopener\">原文地址</a>。</em></p>\n<p><em>这篇文章发表自2016年，距离现在已经过了很长一段时间。可能再过一段时间，会出现更多的技术，学习路线可能也会发生改变。但是这篇文章的一些想法和思路是非常值得借鉴和学习的。—2018年6月17日</em></p>\n<p><em>整理博客时，又看到了这篇文章。这回正式决心杀进程序猿行业，拿出半年时间培训，最后一次机会，来之不易，成本颇大，规划好学习路线，必须比其他人掌握的更多，才能多一份机会。我发现培训机构的同学是真心都学习啊，课堂气氛太活跃了。—2020年4月20日</em></p>\n"},{"title":"小白部署HEXO到GitHub","date":"2018-06-09T18:38:31.000Z","toc":true,"_content":"# 前言\n呃，终于忙乎完了!\n\n从昨天傍晚的7点半一直到现在的2点50分，并且到目前都还在折腾，这也是第一篇文章，即将要上传到GitHub上的。\n\n之前我是没有接触过GitHub和HEXO的，我现在在用的博客程序是z-blog，它部署在腾讯云，地址是：[时光瓶](https:www.shiguangping.com),现在之所以搞hexo，是因为看到了一位前端大咖的博客，[diygod.me](https://diygod.me/)，看到之后很惊艳，由此认识到了hexo和GitHub。\n通过维护这个博客开始我的学习之旅，慢慢了解GitHub，了解开源世界。  \n\n然后说一下现在正在用的这个HEXO主题，这个主题是像素风格的，很有魔性，所以就采用了。在此感谢主题的作者，作者的博客有关于这个主题的说明，虽然我看作者已经很久没有更新他的博客了，[主题作者](http://blackshow.me/).\n\n# 开始搭建\n# 1. 本地安装HEXO\n安装步骤可以参考官方文档，[中文地址](https://hexo.io/zh-cn/docs/ )。\n\n### 安装前提\n\n- [Node.js](http://nodejs.org/)（Node.js 版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本）\n\n- [Git](http://git-scm.com/)\n\n  *这两个是安装Hexo之前必须要安装的*\n\n### 安装Hexo\n\n```shell\nnpm install -g hexo-cli\n```\n\n安装完Hexo之后，执行下列命令，Hexo会在指定文件夹新建所需文件。\n\n```shell\nhexo init <folder>\ncd <folder>\nnpm install\n```\n\n新建完成后，指定文件夹的目录如下：\n\n```\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n*每个文件的作用请参考官方文档，文档包含详细的安装和配置步骤。*\n\n```shell\nhexo server\n```\n\n启动服务，默认情况下，使用浏览器访问地址://localhost:4000/，如果这个地址无效，可通过命令：\n\n```shell\nhexo server -p 5000\n```\n\n-p 指定端口，重新尝试。如果可以正常访问，页面正常，说明本地配置OK。\n\n# 2. 下载和安装主题\n\n我使用的主题是[blackshow](http://blackshow.me \"blackshow\")编写的开源主题，该主题基于Freemind修改，样式替换为BOOTSTR.386.作者的博客里有提到。  \n1. 安装主题：  \n\n```shell\ngit clone git@github.com:blackshow/hexo-theme-freemind.386.git themes/freemind\n```\n\n2. 安装 hexo-tag-bootstrap （可选）:  \n```shell\nnpm install hexo-tag-bootstrap --save\n```\n\n3. 安装 hexo-generatr-search （可选）：  \n```shell\nnpm install hexo-generator-search --save\n```\n\n4. 创建页面：\nFreemind 预先定义了 Categories（分类）、Tags（标签） 和 About（关于）页面，要使用它们，你需要先在你的博客的 `source` 目录中添加相应页面。\n例如，要创建 `Categories` 页面，在终端上:  \n\n```shell\ncd /path/to/hexo/\nhexo n page categories\n```\n\n\n\n然后编辑 `source/categories/` 下的 index.md，内容如下：  \n\n```\ntitle: Categories\nlayout: categories\n```\n\n\n\n5. 关于主题的配置和一些相关问题，具体请参考主题作者的[说明文档](http://blackshow.me/2015/11/25/hexo-theme-freemind-386-readme-cn/ \"说明\")和原作者关于Freemind的[说明文档](http://www.hahack.com/codes/hexo-theme-freemind/ \"说明文档\")。  \n6. 每一步如果想预览，使用一下命令，通过浏览器预览访问本地预览：\n```shell\nhexo server\n```\n\n\n\n# 3. 把本地Hexo部署到GitHub\n\n1. 注册GitHub帐号，然后登陆。  \n2. 在GitHub新建一个repository，页面的右上角有个加号，里面的New repository \n这里的Repository Name要和前面的Owner名字相同，格式就是这样的ENNRIaaa.github.io，ENNRIaaa就是我的Owner名字，然后选择public，创建就可以了。  \n3. 编辑HEXO目录下的站点配置文件`_config.yml，`在最下面加上几行  \n```\ndeploy:\n      type: git\n      repository: https://github.com/ENNRIaaa/ENNRIaaa.github.io.git\n      branch: master\n```\n\n*把地址替换为自己GitHub库的地址*\n\n然后在终端一次敲如命令：\n\n```shell\nhexo clean //清除public文件\nhexo g //生成静态文件\nhexo d -g //把html静态文件推送到GitHub\n```\n\n\n\n此时可能会提示输入GitHub的用户名和密码。我看网上有教程说此步骤需要配置SSH，这个由于我没有配置，也不太懂，所以不多说明。*（后续会写如何配置SSH）*\n\n本地文件上传到GitHub之后，访问刚才的**ENNRIaaa.github.io**，看看是否能正常访问到你的博客。\n\n# 4. 绑定个人域名\n\n如果你不需要绑定个人域名，可以忽略这一步，博客可直接通过ENNRIaaa.github.io访问。  \n1. 在你域名的解析页面添加解析，我是添加的CNAME，直接解析ENNRIaaa.github.io，有的人添加的A记录解析的博客的IP地址。  \n2. 在刚刚创建的GitHub的repository，选择Setting标签页，在下面的GitHub Pages里面有Custom domain，填上你的域名，Save就可以了。如果没有Custom domain，那就把GitHub Pages下的Source改为master branch。  \n3. 在访问绑定的域名，看看是否能正常访问到博客。\n\n# 关于新建文章\n新建文章需要使用markdown文档编辑工具，我使用的是Typora，支持win/mac平台，编辑时所见即所得。\n\n文章的头部通过这几个标签来定义标题，日期，描述，分类，标签等...（具体只能靠自己摸索）\n\n```\ntitle: 小白部署HEXO到GitHub\ndate: 2018-06-10 02:38:31\ndescription: 从傍晚到凌晨，HEXO和GitHub摸索中\ncategories: 生活随笔\ntags: [hexo,GitHub]\ntoc: true\nfeature:\n```\n\n\n\n\n# 总结\n我从昨晚一直折腾到今天早晨，很累。\n\n本文搭建流程都靠记忆，因为之前没有接触过这些，我也不是编程工作者，所以很多都是通过google一点一点地查，遇到问题的时候，网上给出的答案也是很零散的。\n\n我写的这个流程可能也有一些错误或者失误的地方，遇到问题只能自己摸索了。  \n\n1. 关于命令以及配置文件.yml对格式的要求很严谨，例如:  \n\n```\ntype: git\n```\n\n*冒号：和后面的git之间都要有空格。*\n\n2. 每次写完文章，上传到GitHub之前都要：\n\n```shell\nhexo c --删除public文件夹\nhexo g --生成静态文件\nhexo d -g --上传到GitHub仓库\n```\n\n\n\n3. 关于上面三个命令可参照主题作者的[HEXO使用心得](http://blackshow.me/2015/11/30/hexo-cheats/)这篇文章。\n\n  关于搭建和使用hexo，可以看看主题[作者的博客](http://blackshow.me)，他有几遍文章专门是介绍说明HEXO的使用的，很有帮助。\n\n4. 每次上传到GitHub之后，访问绑定的域名可能会遇到404页面，解决办法是到repository的Setting-->GitHub Pages重新设置域名，再到本地hexo目录下的source，添加一个名为CNAME的文件，文件内容是自己绑定的域名，问题解决。不会新建文件的可通过新建文本文档命名为CNAME，然后编辑内容，之后保存，再删除掉该文档的后缀即可，即删除.txt。\n\n---\n本文到此结束。\n","source":"_posts/小白部署HEXO到GitHub.md","raw":"title: 小白部署HEXO到GitHub\ndate: 2018-06-10 02:38:31\ntoc: true\n\n----------\n# 前言\n呃，终于忙乎完了!\n\n从昨天傍晚的7点半一直到现在的2点50分，并且到目前都还在折腾，这也是第一篇文章，即将要上传到GitHub上的。\n\n之前我是没有接触过GitHub和HEXO的，我现在在用的博客程序是z-blog，它部署在腾讯云，地址是：[时光瓶](https:www.shiguangping.com),现在之所以搞hexo，是因为看到了一位前端大咖的博客，[diygod.me](https://diygod.me/)，看到之后很惊艳，由此认识到了hexo和GitHub。\n通过维护这个博客开始我的学习之旅，慢慢了解GitHub，了解开源世界。  \n\n然后说一下现在正在用的这个HEXO主题，这个主题是像素风格的，很有魔性，所以就采用了。在此感谢主题的作者，作者的博客有关于这个主题的说明，虽然我看作者已经很久没有更新他的博客了，[主题作者](http://blackshow.me/).\n\n# 开始搭建\n# 1. 本地安装HEXO\n安装步骤可以参考官方文档，[中文地址](https://hexo.io/zh-cn/docs/ )。\n\n### 安装前提\n\n- [Node.js](http://nodejs.org/)（Node.js 版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本）\n\n- [Git](http://git-scm.com/)\n\n  *这两个是安装Hexo之前必须要安装的*\n\n### 安装Hexo\n\n```shell\nnpm install -g hexo-cli\n```\n\n安装完Hexo之后，执行下列命令，Hexo会在指定文件夹新建所需文件。\n\n```shell\nhexo init <folder>\ncd <folder>\nnpm install\n```\n\n新建完成后，指定文件夹的目录如下：\n\n```\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n*每个文件的作用请参考官方文档，文档包含详细的安装和配置步骤。*\n\n```shell\nhexo server\n```\n\n启动服务，默认情况下，使用浏览器访问地址://localhost:4000/，如果这个地址无效，可通过命令：\n\n```shell\nhexo server -p 5000\n```\n\n-p 指定端口，重新尝试。如果可以正常访问，页面正常，说明本地配置OK。\n\n# 2. 下载和安装主题\n\n我使用的主题是[blackshow](http://blackshow.me \"blackshow\")编写的开源主题，该主题基于Freemind修改，样式替换为BOOTSTR.386.作者的博客里有提到。  \n1. 安装主题：  \n\n```shell\ngit clone git@github.com:blackshow/hexo-theme-freemind.386.git themes/freemind\n```\n\n2. 安装 hexo-tag-bootstrap （可选）:  \n```shell\nnpm install hexo-tag-bootstrap --save\n```\n\n3. 安装 hexo-generatr-search （可选）：  \n```shell\nnpm install hexo-generator-search --save\n```\n\n4. 创建页面：\nFreemind 预先定义了 Categories（分类）、Tags（标签） 和 About（关于）页面，要使用它们，你需要先在你的博客的 `source` 目录中添加相应页面。\n例如，要创建 `Categories` 页面，在终端上:  \n\n```shell\ncd /path/to/hexo/\nhexo n page categories\n```\n\n\n\n然后编辑 `source/categories/` 下的 index.md，内容如下：  \n\n```\ntitle: Categories\nlayout: categories\n```\n\n\n\n5. 关于主题的配置和一些相关问题，具体请参考主题作者的[说明文档](http://blackshow.me/2015/11/25/hexo-theme-freemind-386-readme-cn/ \"说明\")和原作者关于Freemind的[说明文档](http://www.hahack.com/codes/hexo-theme-freemind/ \"说明文档\")。  \n6. 每一步如果想预览，使用一下命令，通过浏览器预览访问本地预览：\n```shell\nhexo server\n```\n\n\n\n# 3. 把本地Hexo部署到GitHub\n\n1. 注册GitHub帐号，然后登陆。  \n2. 在GitHub新建一个repository，页面的右上角有个加号，里面的New repository \n这里的Repository Name要和前面的Owner名字相同，格式就是这样的ENNRIaaa.github.io，ENNRIaaa就是我的Owner名字，然后选择public，创建就可以了。  \n3. 编辑HEXO目录下的站点配置文件`_config.yml，`在最下面加上几行  \n```\ndeploy:\n      type: git\n      repository: https://github.com/ENNRIaaa/ENNRIaaa.github.io.git\n      branch: master\n```\n\n*把地址替换为自己GitHub库的地址*\n\n然后在终端一次敲如命令：\n\n```shell\nhexo clean //清除public文件\nhexo g //生成静态文件\nhexo d -g //把html静态文件推送到GitHub\n```\n\n\n\n此时可能会提示输入GitHub的用户名和密码。我看网上有教程说此步骤需要配置SSH，这个由于我没有配置，也不太懂，所以不多说明。*（后续会写如何配置SSH）*\n\n本地文件上传到GitHub之后，访问刚才的**ENNRIaaa.github.io**，看看是否能正常访问到你的博客。\n\n# 4. 绑定个人域名\n\n如果你不需要绑定个人域名，可以忽略这一步，博客可直接通过ENNRIaaa.github.io访问。  \n1. 在你域名的解析页面添加解析，我是添加的CNAME，直接解析ENNRIaaa.github.io，有的人添加的A记录解析的博客的IP地址。  \n2. 在刚刚创建的GitHub的repository，选择Setting标签页，在下面的GitHub Pages里面有Custom domain，填上你的域名，Save就可以了。如果没有Custom domain，那就把GitHub Pages下的Source改为master branch。  \n3. 在访问绑定的域名，看看是否能正常访问到博客。\n\n# 关于新建文章\n新建文章需要使用markdown文档编辑工具，我使用的是Typora，支持win/mac平台，编辑时所见即所得。\n\n文章的头部通过这几个标签来定义标题，日期，描述，分类，标签等...（具体只能靠自己摸索）\n\n```\ntitle: 小白部署HEXO到GitHub\ndate: 2018-06-10 02:38:31\ndescription: 从傍晚到凌晨，HEXO和GitHub摸索中\ncategories: 生活随笔\ntags: [hexo,GitHub]\ntoc: true\nfeature:\n```\n\n\n\n\n# 总结\n我从昨晚一直折腾到今天早晨，很累。\n\n本文搭建流程都靠记忆，因为之前没有接触过这些，我也不是编程工作者，所以很多都是通过google一点一点地查，遇到问题的时候，网上给出的答案也是很零散的。\n\n我写的这个流程可能也有一些错误或者失误的地方，遇到问题只能自己摸索了。  \n\n1. 关于命令以及配置文件.yml对格式的要求很严谨，例如:  \n\n```\ntype: git\n```\n\n*冒号：和后面的git之间都要有空格。*\n\n2. 每次写完文章，上传到GitHub之前都要：\n\n```shell\nhexo c --删除public文件夹\nhexo g --生成静态文件\nhexo d -g --上传到GitHub仓库\n```\n\n\n\n3. 关于上面三个命令可参照主题作者的[HEXO使用心得](http://blackshow.me/2015/11/30/hexo-cheats/)这篇文章。\n\n  关于搭建和使用hexo，可以看看主题[作者的博客](http://blackshow.me)，他有几遍文章专门是介绍说明HEXO的使用的，很有帮助。\n\n4. 每次上传到GitHub之后，访问绑定的域名可能会遇到404页面，解决办法是到repository的Setting-->GitHub Pages重新设置域名，再到本地hexo目录下的source，添加一个名为CNAME的文件，文件内容是自己绑定的域名，问题解决。不会新建文件的可通过新建文本文档命名为CNAME，然后编辑内容，之后保存，再删除掉该文档的后缀即可，即删除.txt。\n\n---\n本文到此结束。\n","slug":"小白部署HEXO到GitHub","published":1,"updated":"2020-04-21T14:28:08.809Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6g9000seiudygrq2m4v","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>呃，终于忙乎完了!</p>\n<p>从昨天傍晚的7点半一直到现在的2点50分，并且到目前都还在折腾，这也是第一篇文章，即将要上传到GitHub上的。</p>\n<p>之前我是没有接触过GitHub和HEXO的，我现在在用的博客程序是z-blog，它部署在腾讯云，地址是：<a href=\"https:www.shiguangping.com\" target=\"_blank\" rel=\"noopener\">时光瓶</a>,现在之所以搞hexo，是因为看到了一位前端大咖的博客，<a href=\"https://diygod.me/\" target=\"_blank\" rel=\"noopener\">diygod.me</a>，看到之后很惊艳，由此认识到了hexo和GitHub。<br>通过维护这个博客开始我的学习之旅，慢慢了解GitHub，了解开源世界。  </p>\n<p>然后说一下现在正在用的这个HEXO主题，这个主题是像素风格的，很有魔性，所以就采用了。在此感谢主题的作者，作者的博客有关于这个主题的说明，虽然我看作者已经很久没有更新他的博客了，<a href=\"http://blackshow.me/\" target=\"_blank\" rel=\"noopener\">主题作者</a>.</p>\n<h1 id=\"开始搭建\"><a href=\"#开始搭建\" class=\"headerlink\" title=\"开始搭建\"></a>开始搭建</h1><h1 id=\"1-本地安装HEXO\"><a href=\"#1-本地安装HEXO\" class=\"headerlink\" title=\"1. 本地安装HEXO\"></a>1. 本地安装HEXO</h1><p>安装步骤可以参考官方文档，<a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">中文地址</a>。</p>\n<h3 id=\"安装前提\"><a href=\"#安装前提\" class=\"headerlink\" title=\"安装前提\"></a>安装前提</h3><ul>\n<li><p><a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">Node.js</a>（Node.js 版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本）</p>\n</li>\n<li><p><a href=\"http://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a></p>\n<p><em>这两个是安装Hexo之前必须要安装的</em></p>\n</li>\n</ul>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>安装完Hexo之后，执行下列命令，Hexo会在指定文件夹新建所需文件。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\">cd &lt;folder&gt;</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<p><em>每个文件的作用请参考官方文档，文档包含详细的安装和配置步骤。</em></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<p>启动服务，默认情况下，使用浏览器访问地址://localhost:4000/，如果这个地址无效，可通过命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server -p 5000</span><br></pre></td></tr></table></figure>\n<p>-p 指定端口，重新尝试。如果可以正常访问，页面正常，说明本地配置OK。</p>\n<h1 id=\"2-下载和安装主题\"><a href=\"#2-下载和安装主题\" class=\"headerlink\" title=\"2. 下载和安装主题\"></a>2. 下载和安装主题</h1><p>我使用的主题是<a href=\"http://blackshow.me\" title=\"blackshow\" target=\"_blank\" rel=\"noopener\">blackshow</a>编写的开源主题，该主题基于Freemind修改，样式替换为BOOTSTR.386.作者的博客里有提到。  </p>\n<ol>\n<li>安装主题：  </li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:blackshow/hexo-theme-freemind.386.git themes/freemind</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><p>安装 hexo-tag-bootstrap （可选）:  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-tag-bootstrap --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装 hexo-generatr-search （可选）：  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建页面：<br>Freemind 预先定义了 Categories（分类）、Tags（标签） 和 About（关于）页面，要使用它们，你需要先在你的博客的 <code>source</code> 目录中添加相应页面。<br>例如，要创建 <code>Categories</code> 页面，在终端上:  </p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /path/to/hexo/</span><br><span class=\"line\">hexo n page categories</span><br></pre></td></tr></table></figure>\n<p>然后编辑 <code>source/categories/</code> 下的 index.md，内容如下：  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: Categories</span><br><span class=\"line\">layout: categories</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>关于主题的配置和一些相关问题，具体请参考主题作者的<a href=\"http://blackshow.me/2015/11/25/hexo-theme-freemind-386-readme-cn/\" title=\"说明\" target=\"_blank\" rel=\"noopener\">说明文档</a>和原作者关于Freemind的<a href=\"http://www.hahack.com/codes/hexo-theme-freemind/\" title=\"说明文档\" target=\"_blank\" rel=\"noopener\">说明文档</a>。  </li>\n<li>每一步如果想预览，使用一下命令，通过浏览器预览访问本地预览：<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"3-把本地Hexo部署到GitHub\"><a href=\"#3-把本地Hexo部署到GitHub\" class=\"headerlink\" title=\"3. 把本地Hexo部署到GitHub\"></a>3. 把本地Hexo部署到GitHub</h1><ol>\n<li>注册GitHub帐号，然后登陆。  </li>\n<li>在GitHub新建一个repository，页面的右上角有个加号，里面的New repository<br>这里的Repository Name要和前面的Owner名字相同，格式就是这样的ENNRIaaa.github.io，ENNRIaaa就是我的Owner名字，然后选择public，创建就可以了。  </li>\n<li>编辑HEXO目录下的站点配置文件<code>_config.yml，</code>在最下面加上几行  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">      type: git</span><br><span class=\"line\">      repository: https://github.com/ENNRIaaa/ENNRIaaa.github.io.git</span><br><span class=\"line\">      branch: master</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><em>把地址替换为自己GitHub库的地址</em></p>\n<p>然后在终端一次敲如命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean //清除public文件</span><br><span class=\"line\">hexo g //生成静态文件</span><br><span class=\"line\">hexo d -g //把html静态文件推送到GitHub</span><br></pre></td></tr></table></figure>\n<p>此时可能会提示输入GitHub的用户名和密码。我看网上有教程说此步骤需要配置SSH，这个由于我没有配置，也不太懂，所以不多说明。<em>（后续会写如何配置SSH）</em></p>\n<p>本地文件上传到GitHub之后，访问刚才的<strong>ENNRIaaa.github.io</strong>，看看是否能正常访问到你的博客。</p>\n<h1 id=\"4-绑定个人域名\"><a href=\"#4-绑定个人域名\" class=\"headerlink\" title=\"4. 绑定个人域名\"></a>4. 绑定个人域名</h1><p>如果你不需要绑定个人域名，可以忽略这一步，博客可直接通过ENNRIaaa.github.io访问。  </p>\n<ol>\n<li>在你域名的解析页面添加解析，我是添加的CNAME，直接解析ENNRIaaa.github.io，有的人添加的A记录解析的博客的IP地址。  </li>\n<li>在刚刚创建的GitHub的repository，选择Setting标签页，在下面的GitHub Pages里面有Custom domain，填上你的域名，Save就可以了。如果没有Custom domain，那就把GitHub Pages下的Source改为master branch。  </li>\n<li>在访问绑定的域名，看看是否能正常访问到博客。</li>\n</ol>\n<h1 id=\"关于新建文章\"><a href=\"#关于新建文章\" class=\"headerlink\" title=\"关于新建文章\"></a>关于新建文章</h1><p>新建文章需要使用markdown文档编辑工具，我使用的是Typora，支持win/mac平台，编辑时所见即所得。</p>\n<p>文章的头部通过这几个标签来定义标题，日期，描述，分类，标签等…（具体只能靠自己摸索）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 小白部署HEXO到GitHub</span><br><span class=\"line\">date: 2018-06-10 02:38:31</span><br><span class=\"line\">description: 从傍晚到凌晨，HEXO和GitHub摸索中</span><br><span class=\"line\">categories: 生活随笔</span><br><span class=\"line\">tags: [hexo,GitHub]</span><br><span class=\"line\">toc: true</span><br><span class=\"line\">feature:</span><br></pre></td></tr></table></figure>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>我从昨晚一直折腾到今天早晨，很累。</p>\n<p>本文搭建流程都靠记忆，因为之前没有接触过这些，我也不是编程工作者，所以很多都是通过google一点一点地查，遇到问题的时候，网上给出的答案也是很零散的。</p>\n<p>我写的这个流程可能也有一些错误或者失误的地方，遇到问题只能自己摸索了。  </p>\n<ol>\n<li>关于命令以及配置文件.yml对格式的要求很严谨，例如:  </li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type: git</span><br></pre></td></tr></table></figure>\n<p><em>冒号：和后面的git之间都要有空格。</em></p>\n<ol start=\"2\">\n<li>每次写完文章，上传到GitHub之前都要：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo c --删除public文件夹</span><br><span class=\"line\">hexo g --生成静态文件</span><br><span class=\"line\">hexo d -g --上传到GitHub仓库</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><p>关于上面三个命令可参照主题作者的<a href=\"http://blackshow.me/2015/11/30/hexo-cheats/\" target=\"_blank\" rel=\"noopener\">HEXO使用心得</a>这篇文章。</p>\n<p>关于搭建和使用hexo，可以看看主题<a href=\"http://blackshow.me\" target=\"_blank\" rel=\"noopener\">作者的博客</a>，他有几遍文章专门是介绍说明HEXO的使用的，很有帮助。</p>\n</li>\n<li><p>每次上传到GitHub之后，访问绑定的域名可能会遇到404页面，解决办法是到repository的Setting–&gt;GitHub Pages重新设置域名，再到本地hexo目录下的source，添加一个名为CNAME的文件，文件内容是自己绑定的域名，问题解决。不会新建文件的可通过新建文本文档命名为CNAME，然后编辑内容，之后保存，再删除掉该文档的后缀即可，即删除.txt。</p>\n</li>\n</ol>\n<hr>\n<p>本文到此结束。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>呃，终于忙乎完了!</p>\n<p>从昨天傍晚的7点半一直到现在的2点50分，并且到目前都还在折腾，这也是第一篇文章，即将要上传到GitHub上的。</p>\n<p>之前我是没有接触过GitHub和HEXO的，我现在在用的博客程序是z-blog，它部署在腾讯云，地址是：<a href=\"https:www.shiguangping.com\" target=\"_blank\" rel=\"noopener\">时光瓶</a>,现在之所以搞hexo，是因为看到了一位前端大咖的博客，<a href=\"https://diygod.me/\" target=\"_blank\" rel=\"noopener\">diygod.me</a>，看到之后很惊艳，由此认识到了hexo和GitHub。<br>通过维护这个博客开始我的学习之旅，慢慢了解GitHub，了解开源世界。  </p>\n<p>然后说一下现在正在用的这个HEXO主题，这个主题是像素风格的，很有魔性，所以就采用了。在此感谢主题的作者，作者的博客有关于这个主题的说明，虽然我看作者已经很久没有更新他的博客了，<a href=\"http://blackshow.me/\" target=\"_blank\" rel=\"noopener\">主题作者</a>.</p>\n<h1 id=\"开始搭建\"><a href=\"#开始搭建\" class=\"headerlink\" title=\"开始搭建\"></a>开始搭建</h1><h1 id=\"1-本地安装HEXO\"><a href=\"#1-本地安装HEXO\" class=\"headerlink\" title=\"1. 本地安装HEXO\"></a>1. 本地安装HEXO</h1><p>安装步骤可以参考官方文档，<a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">中文地址</a>。</p>\n<h3 id=\"安装前提\"><a href=\"#安装前提\" class=\"headerlink\" title=\"安装前提\"></a>安装前提</h3><ul>\n<li><p><a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">Node.js</a>（Node.js 版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本）</p>\n</li>\n<li><p><a href=\"http://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a></p>\n<p><em>这两个是安装Hexo之前必须要安装的</em></p>\n</li>\n</ul>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>安装完Hexo之后，执行下列命令，Hexo会在指定文件夹新建所需文件。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\">cd &lt;folder&gt;</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<p><em>每个文件的作用请参考官方文档，文档包含详细的安装和配置步骤。</em></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<p>启动服务，默认情况下，使用浏览器访问地址://localhost:4000/，如果这个地址无效，可通过命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server -p 5000</span><br></pre></td></tr></table></figure>\n<p>-p 指定端口，重新尝试。如果可以正常访问，页面正常，说明本地配置OK。</p>\n<h1 id=\"2-下载和安装主题\"><a href=\"#2-下载和安装主题\" class=\"headerlink\" title=\"2. 下载和安装主题\"></a>2. 下载和安装主题</h1><p>我使用的主题是<a href=\"http://blackshow.me\" title=\"blackshow\" target=\"_blank\" rel=\"noopener\">blackshow</a>编写的开源主题，该主题基于Freemind修改，样式替换为BOOTSTR.386.作者的博客里有提到。  </p>\n<ol>\n<li>安装主题：  </li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:blackshow/hexo-theme-freemind.386.git themes/freemind</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><p>安装 hexo-tag-bootstrap （可选）:  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-tag-bootstrap --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装 hexo-generatr-search （可选）：  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建页面：<br>Freemind 预先定义了 Categories（分类）、Tags（标签） 和 About（关于）页面，要使用它们，你需要先在你的博客的 <code>source</code> 目录中添加相应页面。<br>例如，要创建 <code>Categories</code> 页面，在终端上:  </p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /path/to/hexo/</span><br><span class=\"line\">hexo n page categories</span><br></pre></td></tr></table></figure>\n<p>然后编辑 <code>source/categories/</code> 下的 index.md，内容如下：  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: Categories</span><br><span class=\"line\">layout: categories</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>关于主题的配置和一些相关问题，具体请参考主题作者的<a href=\"http://blackshow.me/2015/11/25/hexo-theme-freemind-386-readme-cn/\" title=\"说明\" target=\"_blank\" rel=\"noopener\">说明文档</a>和原作者关于Freemind的<a href=\"http://www.hahack.com/codes/hexo-theme-freemind/\" title=\"说明文档\" target=\"_blank\" rel=\"noopener\">说明文档</a>。  </li>\n<li>每一步如果想预览，使用一下命令，通过浏览器预览访问本地预览：<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"3-把本地Hexo部署到GitHub\"><a href=\"#3-把本地Hexo部署到GitHub\" class=\"headerlink\" title=\"3. 把本地Hexo部署到GitHub\"></a>3. 把本地Hexo部署到GitHub</h1><ol>\n<li>注册GitHub帐号，然后登陆。  </li>\n<li>在GitHub新建一个repository，页面的右上角有个加号，里面的New repository<br>这里的Repository Name要和前面的Owner名字相同，格式就是这样的ENNRIaaa.github.io，ENNRIaaa就是我的Owner名字，然后选择public，创建就可以了。  </li>\n<li>编辑HEXO目录下的站点配置文件<code>_config.yml，</code>在最下面加上几行  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">      type: git</span><br><span class=\"line\">      repository: https://github.com/ENNRIaaa/ENNRIaaa.github.io.git</span><br><span class=\"line\">      branch: master</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><em>把地址替换为自己GitHub库的地址</em></p>\n<p>然后在终端一次敲如命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean //清除public文件</span><br><span class=\"line\">hexo g //生成静态文件</span><br><span class=\"line\">hexo d -g //把html静态文件推送到GitHub</span><br></pre></td></tr></table></figure>\n<p>此时可能会提示输入GitHub的用户名和密码。我看网上有教程说此步骤需要配置SSH，这个由于我没有配置，也不太懂，所以不多说明。<em>（后续会写如何配置SSH）</em></p>\n<p>本地文件上传到GitHub之后，访问刚才的<strong>ENNRIaaa.github.io</strong>，看看是否能正常访问到你的博客。</p>\n<h1 id=\"4-绑定个人域名\"><a href=\"#4-绑定个人域名\" class=\"headerlink\" title=\"4. 绑定个人域名\"></a>4. 绑定个人域名</h1><p>如果你不需要绑定个人域名，可以忽略这一步，博客可直接通过ENNRIaaa.github.io访问。  </p>\n<ol>\n<li>在你域名的解析页面添加解析，我是添加的CNAME，直接解析ENNRIaaa.github.io，有的人添加的A记录解析的博客的IP地址。  </li>\n<li>在刚刚创建的GitHub的repository，选择Setting标签页，在下面的GitHub Pages里面有Custom domain，填上你的域名，Save就可以了。如果没有Custom domain，那就把GitHub Pages下的Source改为master branch。  </li>\n<li>在访问绑定的域名，看看是否能正常访问到博客。</li>\n</ol>\n<h1 id=\"关于新建文章\"><a href=\"#关于新建文章\" class=\"headerlink\" title=\"关于新建文章\"></a>关于新建文章</h1><p>新建文章需要使用markdown文档编辑工具，我使用的是Typora，支持win/mac平台，编辑时所见即所得。</p>\n<p>文章的头部通过这几个标签来定义标题，日期，描述，分类，标签等…（具体只能靠自己摸索）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 小白部署HEXO到GitHub</span><br><span class=\"line\">date: 2018-06-10 02:38:31</span><br><span class=\"line\">description: 从傍晚到凌晨，HEXO和GitHub摸索中</span><br><span class=\"line\">categories: 生活随笔</span><br><span class=\"line\">tags: [hexo,GitHub]</span><br><span class=\"line\">toc: true</span><br><span class=\"line\">feature:</span><br></pre></td></tr></table></figure>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>我从昨晚一直折腾到今天早晨，很累。</p>\n<p>本文搭建流程都靠记忆，因为之前没有接触过这些，我也不是编程工作者，所以很多都是通过google一点一点地查，遇到问题的时候，网上给出的答案也是很零散的。</p>\n<p>我写的这个流程可能也有一些错误或者失误的地方，遇到问题只能自己摸索了。  </p>\n<ol>\n<li>关于命令以及配置文件.yml对格式的要求很严谨，例如:  </li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type: git</span><br></pre></td></tr></table></figure>\n<p><em>冒号：和后面的git之间都要有空格。</em></p>\n<ol start=\"2\">\n<li>每次写完文章，上传到GitHub之前都要：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo c --删除public文件夹</span><br><span class=\"line\">hexo g --生成静态文件</span><br><span class=\"line\">hexo d -g --上传到GitHub仓库</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><p>关于上面三个命令可参照主题作者的<a href=\"http://blackshow.me/2015/11/30/hexo-cheats/\" target=\"_blank\" rel=\"noopener\">HEXO使用心得</a>这篇文章。</p>\n<p>关于搭建和使用hexo，可以看看主题<a href=\"http://blackshow.me\" target=\"_blank\" rel=\"noopener\">作者的博客</a>，他有几遍文章专门是介绍说明HEXO的使用的，很有帮助。</p>\n</li>\n<li><p>每次上传到GitHub之后，访问绑定的域名可能会遇到404页面，解决办法是到repository的Setting–&gt;GitHub Pages重新设置域名，再到本地hexo目录下的source，添加一个名为CNAME的文件，文件内容是自己绑定的域名，问题解决。不会新建文件的可通过新建文本文档命名为CNAME，然后编辑内容，之后保存，再删除掉该文档的后缀即可，即删除.txt。</p>\n</li>\n</ol>\n<hr>\n<p>本文到此结束。</p>\n"},{"title":"生日礼物 - Niz静电容键盘","date":"2019-12-14T06:53:00.000Z","toc":true,"_content":" 今天提前收到小姐姐送的生日礼物，一把心仪已久的键盘，***Niz宁芝静电容键盘（micro82 45g)***。  \n\n废话不多说了，上图：  \n\n*（这手感和声音，爽~）*  \n\n***小姐姐说这个键盘按起来像以前上微机课的键盘-。-！***\n\n<img src=\"https://images.shiguangping.com/imgs/201912/20191214_144301.jpg\" width=\"400px\"/>\n\n*外包装比较简单*  \n\n<img src=\"https://images.shiguangping.com/imgs/201912/20191214_144329.jpg\" width=\"400px\"/>\n\n*键盘本体，这款是82键版本，白灰的键帽配色，很有敲敲敲的欲望。*\n\n*键盘自带了Mac键帽可以替换，还带了几个增压弹簧。*\n\n*键盘采用PBT键帽，用久了也不会出现打油的情况。键盘我还是推荐白色，或者类似白色，干净不易脏，看久了不腻。黑色尤其是ABS键帽，特别不耐脏。*\n\n<img src=\"https://images.shiguangping.com/imgs/201912/20191214_150504.jpg\" width=\"400px\"/>\n\n*Niz的logo。*\n\n*键盘有些地方有毛边，但也对得起它的价格。和动辄2000多的HHKB比起来，这款键盘的价格相当亲民了。*\n\n<img src=\"https://images.shiguangping.com/imgs/201912/20191214_151002.jpg\" width=\"400px\"/>\n\n\n***感谢小姐姐，2019年12月14日。***\n","source":"_posts/退烧键盘-Niz micro82 45g.md","raw":"title: 生日礼物 - Niz静电容键盘\ndate: 2019-12-14 14:53\ntoc: true\n\n---\n 今天提前收到小姐姐送的生日礼物，一把心仪已久的键盘，***Niz宁芝静电容键盘（micro82 45g)***。  \n\n废话不多说了，上图：  \n\n*（这手感和声音，爽~）*  \n\n***小姐姐说这个键盘按起来像以前上微机课的键盘-。-！***\n\n<img src=\"https://images.shiguangping.com/imgs/201912/20191214_144301.jpg\" width=\"400px\"/>\n\n*外包装比较简单*  \n\n<img src=\"https://images.shiguangping.com/imgs/201912/20191214_144329.jpg\" width=\"400px\"/>\n\n*键盘本体，这款是82键版本，白灰的键帽配色，很有敲敲敲的欲望。*\n\n*键盘自带了Mac键帽可以替换，还带了几个增压弹簧。*\n\n*键盘采用PBT键帽，用久了也不会出现打油的情况。键盘我还是推荐白色，或者类似白色，干净不易脏，看久了不腻。黑色尤其是ABS键帽，特别不耐脏。*\n\n<img src=\"https://images.shiguangping.com/imgs/201912/20191214_150504.jpg\" width=\"400px\"/>\n\n*Niz的logo。*\n\n*键盘有些地方有毛边，但也对得起它的价格。和动辄2000多的HHKB比起来，这款键盘的价格相当亲民了。*\n\n<img src=\"https://images.shiguangping.com/imgs/201912/20191214_151002.jpg\" width=\"400px\"/>\n\n\n***感谢小姐姐，2019年12月14日。***\n","slug":"退烧键盘-Niz micro82 45g","published":1,"updated":"2020-04-21T14:01:49.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9aoo6g9000teiuds2hkkbrz","content":"<p> 今天提前收到小姐姐送的生日礼物，一把心仪已久的键盘，<strong><em>Niz宁芝静电容键盘（micro82 45g)</em></strong>。  </p>\n<p>废话不多说了，上图：  </p>\n<p><em>（这手感和声音，爽~）</em>  </p>\n<p><strong><em>小姐姐说这个键盘按起来像以前上微机课的键盘-。-！</em></strong></p>\n<p><img src=\"https://images.shiguangping.com/imgs/201912/20191214_144301.jpg\" width=\"400px\"></p>\n<p><em>外包装比较简单</em>  </p>\n<p><img src=\"https://images.shiguangping.com/imgs/201912/20191214_144329.jpg\" width=\"400px\"></p>\n<p><em>键盘本体，这款是82键版本，白灰的键帽配色，很有敲敲敲的欲望。</em></p>\n<p><em>键盘自带了Mac键帽可以替换，还带了几个增压弹簧。</em></p>\n<p><em>键盘采用PBT键帽，用久了也不会出现打油的情况。键盘我还是推荐白色，或者类似白色，干净不易脏，看久了不腻。黑色尤其是ABS键帽，特别不耐脏。</em></p>\n<p><img src=\"https://images.shiguangping.com/imgs/201912/20191214_150504.jpg\" width=\"400px\"></p>\n<p><em>Niz的logo。</em></p>\n<p><em>键盘有些地方有毛边，但也对得起它的价格。和动辄2000多的HHKB比起来，这款键盘的价格相当亲民了。</em></p>\n<p><img src=\"https://images.shiguangping.com/imgs/201912/20191214_151002.jpg\" width=\"400px\"></p>\n<p><strong><em>感谢小姐姐，2019年12月14日。</em></strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p> 今天提前收到小姐姐送的生日礼物，一把心仪已久的键盘，<strong><em>Niz宁芝静电容键盘（micro82 45g)</em></strong>。  </p>\n<p>废话不多说了，上图：  </p>\n<p><em>（这手感和声音，爽~）</em>  </p>\n<p><strong><em>小姐姐说这个键盘按起来像以前上微机课的键盘-。-！</em></strong></p>\n<p><img src=\"https://images.shiguangping.com/imgs/201912/20191214_144301.jpg\" width=\"400px\"></p>\n<p><em>外包装比较简单</em>  </p>\n<p><img src=\"https://images.shiguangping.com/imgs/201912/20191214_144329.jpg\" width=\"400px\"></p>\n<p><em>键盘本体，这款是82键版本，白灰的键帽配色，很有敲敲敲的欲望。</em></p>\n<p><em>键盘自带了Mac键帽可以替换，还带了几个增压弹簧。</em></p>\n<p><em>键盘采用PBT键帽，用久了也不会出现打油的情况。键盘我还是推荐白色，或者类似白色，干净不易脏，看久了不腻。黑色尤其是ABS键帽，特别不耐脏。</em></p>\n<p><img src=\"https://images.shiguangping.com/imgs/201912/20191214_150504.jpg\" width=\"400px\"></p>\n<p><em>Niz的logo。</em></p>\n<p><em>键盘有些地方有毛边，但也对得起它的价格。和动辄2000多的HHKB比起来，这款键盘的价格相当亲民了。</em></p>\n<p><img src=\"https://images.shiguangping.com/imgs/201912/20191214_151002.jpg\" width=\"400px\"></p>\n<p><strong><em>感谢小姐姐，2019年12月14日。</em></strong></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck9aoo6fv000eeiudchxtjo4a","category_id":"ck9aoo6fx000geiudgtcy39v0","_id":"ck9aoo6g6000oeiudu48a7d7g"}],"PostTag":[{"post_id":"ck9aoo6fv000eeiudchxtjo4a","tag_id":"ck9aoo6g0000heiud6v7xqlzz","_id":"ck9aoo6g5000leiudv3p68hxt"}],"Tag":[{"name":"Linux","_id":"ck9aoo6g0000heiud6v7xqlzz"}]}}