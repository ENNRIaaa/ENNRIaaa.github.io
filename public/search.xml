<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Java学习笔记</title>
      <link href="/2020/04/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/04/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h3 id="阶段学习笔记："><a href="#阶段学习笔记：" class="headerlink" title="阶段学习笔记："></a>阶段学习笔记：</h3><ol><li><a href="https://ennriaaa.github.io/Java_notebook/" target="_blank" rel="noopener">Java学习笔记-随着学习进度持续更新</a></li><li></li></ol><hr><p>其他笔记正在整理当中</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>eclipse实现自动补全</title>
      <link href="/2020/04/eclipse%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8/"/>
      <url>/2020/04/eclipse%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8/</url>
      <content type="html"><![CDATA[<p>Preference中：</p><p><img src="https://images.shiguangping.com/imgs/20200421150151.png" width="500px"></p><p><code>Auto activation triggers for Java</code>的值成：<code>.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</code></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Java编译运行时报错尝试解决办法</title>
      <link href="/2020/04/Jave%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C%E6%97%B6%E6%8A%A5%E9%94%99%E5%B0%9D%E8%AF%95%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>/2020/04/Jave%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C%E6%97%B6%E6%8A%A5%E9%94%99%E5%B0%9D%E8%AF%95%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>“Description Resource Path Location Type Java compiler level does not match the version of”解决办法<br>project编译问题，需要有三处的jdk版本保持一致，才能编译通过。</p><ol><li><p>在右键项目–&gt;properties–&gt;project Facets–&gt;修改右侧Java的version，要与当前项目jdk版本保持一致</p><p><img src="https://images.shiguangping.com/imgs/20200420161608.png" alt=""></p></li><li><p>设置选项preference–&gt;java–&gt;Compiler–&gt;设置的右侧的Compiler compliance level</p><p><img src="https://images.shiguangping.com/imgs/20200420162147.jpg" alt=""></p><p><em>这一步有的时候不匹配也能编译运行通过</em></p></li><li><p>preferences–&gt;java–&gt;Installed JREs–&gt;设置或者选择右侧的Installed JREs</p><p><img src="https://images.shiguangping.com/imgs/20200420162237.jpg" alt=""></p><p><em>这里就是jre环境路径</em></p></li></ol><p><strong><em>说明：</em></strong><br><strong><em>这个报错的解决办法，首先检查前两步骤，第一步骤修改完之后会解决当前项目的报错问题，程序可以正常编译运行，但是再新建项目之后，任然会出现该问题；第二步骤修改完之后，可以解决新项目报错问题，避免每次新建项目都需要手动去修改第一步骤；第三步就是当前jdk的开发环境，这个一般都没问题。</em></strong></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Hexo上传本地源文件到GitHub</title>
      <link href="/2020/04/Hexo%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E6%BA%90%E6%96%87%E4%BB%B6%E5%88%B0GitHub/"/>
      <url>/2020/04/Hexo%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E6%BA%90%E6%96%87%E4%BB%B6%E5%88%B0GitHub/</url>
      <content type="html"><![CDATA[<h1 id="前言-可忽略不看"><a href="#前言-可忽略不看" class="headerlink" title="前言(可忽略不看)"></a>前言(可忽略不看)</h1><p>这个问题是在我部署完HEXO博客之后就想到的，我要是换了一台电脑或者重新装系统之后，还怎么更新HEXO博客呢？</p><p>我今天在网上开始寻找解决办法，上网一看才知道这是很多人很早以前就面临的问题，当然有很多大神做了解答，但是绝大多数的回答我都是看不懂的。大多数的办法是在同一个GitHub仓库创建两个分支，一个用来存放HEXO上传的静态页面，一个用来保存HEXO的本地源文件。但是对于我这个小白来说，仓库一词我都是最近才知道的，更别提分支了。还有一大堆的命令，我也看不懂所以然。</p><p>最后，我还是用了这个办法，在原有的仓库基础上再创建一个分支，用来保存本地的源文件。（网上主要的还是这个办法）</p><p>我试着把我的操作流程写下来，可能其中会有遗漏或者小错误，遇到问题只能自己解决了。因为我也是凭借自己理解操作的。</p><h1 id="我为什么要把源文件上传到GitHub呢？"><a href="#我为什么要把源文件上传到GitHub呢？" class="headerlink" title="我为什么要把源文件上传到GitHub呢？"></a>我为什么要把源文件上传到GitHub呢？</h1><p>因为我今天在电脑上安装了Linux，所以以后敲字都要靠Linux了。  </p><h1 id="一-本地源文件上传到GitHub："><a href="#一-本地源文件上传到GitHub：" class="headerlink" title="一.本地源文件上传到GitHub："></a>一.本地源文件上传到GitHub：</h1><h2 id="1-提前准备"><a href="#1-提前准备" class="headerlink" title="1.提前准备"></a>1.提前准备</h2><p>首先，不论是在另一台电脑上还是重新安装了系统，都要安装好Node.js和Git，还有HEXO，它们的安装方式具体参考HEXO的<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">说明文档</a>。  </p><h2 id="2-操作流程"><a href="#2-操作流程" class="headerlink" title="2.操作流程"></a>2.操作流程</h2><p>1.登录到GitHub，打开HEXO所在的仓库，在博客所在的repository新建一个分支<strong>hexo</strong>，在仓库Setting下的Branches中，设置<strong>hexo</strong>为默认分支。<br>2.克隆repository到本地，命令如下：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git@github.com:ENNRIaaa/shiguangping-blog.git</span><br></pre></td></tr></table></figure><p>注：克隆的文件夹保存在哪取决于你所在的位置，可通过pwd命令查看你当前所在位置。<br>3.克隆好之后，打开本地的文件夹，默认的文件夹名字就是repository的名字，把文件夹内除了<strong>.git</strong>文件夹之外的所有文件全部删除。注意：<strong>.git</strong>是隐藏文件夹。<br>4.之后把原电脑上的HEXO文件全部复制到这个文件夹下。<br>5.复制完之后里面应该有一个名为<strong>.gitignore</strong>文件，如果没有的话通过终端命令创建：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch .gitignore</span><br></pre></td></tr></table></figure><p>正常<strong>.gitignore</strong>的内容是：</p><ul><li><p>.DS_Store</p></li><li><p>Thumbs.db</p></li><li>db.json</li><li>*.log</li><li>node_modules/</li><li>public/</li><li>.deploy*/</li></ul><p>6.切换到<strong>hexo</strong>分支上，命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b hexo</span><br></pre></td></tr></table></figure><p>7.提交复制过来的文件到<strong>暂存区</strong>，命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add --all</span><br></pre></td></tr></table></figure><p><em>注意：all前面是两个”-“</em></p><p>8.提交，命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m "新建分支资源文件"</span><br></pre></td></tr></table></figure><p><em>引号内的内容自定义，就是一个备注。</em><br>9.推送分支到GitHub上，命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --set-upstream origin hexo</span><br></pre></td></tr></table></figure><p><em>注意：set前面是两个”-“</em><br>推送成功之后，到GitHub仓库刷新一下，看看<strong>hexo</strong>分支下是否已经成功上传了本地的源文件。<br>到这里，本地的源文件已经上传到GitHub上，HEXO本地源文件直接使用<code>git push</code>命令就可以了，HEXO发博客的操作跟以前一样，还是这三步：<code>hexo c</code>、<code>hexo g</code>、<code>hexo d -g</code>。  </p><p><em>注：期间终端可能会提示需要输入一下密码啊，或者提示让你输入邮箱和用户名等，只需根据提示输入即可。<br>在安装完Git和node.js之后，我就把SSH密钥配置完了。设置GitHub的SSH密钥，可参考<a href="https://sora.red/2018/GitHub%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AESSH/" target="_blank" rel="noopener">GitHub如何配置SSH</a>。</em>  </p><h1 id="二-如果今后换电脑该如何操作"><a href="#二-如果今后换电脑该如何操作" class="headerlink" title="二.如果今后换电脑该如何操作"></a>二.如果今后换电脑该如何操作</h1><p>本地源文件保存到GitHub之后，今后在其他电脑上或者重装系统后，先把<code>Git</code>、<code>Node.js</code>、<code>HEXO</code>这些基本的都安装好,（<em>注意：<strong>Hexo</strong>安装好之后不要执行<code>hexo init</code>初始化命令</em>），再把GitHub上保存HEXO源文件的<strong>hexo</strong>分支克隆到本地即可。<br>克隆分支的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b hexo git@github.com:ENNRIaaa/shiguangping-blog.git</span><br></pre></td></tr></table></figure><p><code>-b</code>后面的是分支的名称，后面替换自己仓库的链接。</p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>今天主要提供帮助的是CSDN博主LeonWuV,如果我的文章有一些地方看不懂，或者有错误，可参考<a href="https://blog.csdn.net/wxl1555/article/details/79293159" target="_blank" rel="noopener">此博主的文章</a>。<br>本文写了一个多小时，终于结束了。虽然很墨迹，但是很快乐。</p><p><strong><em>创作时间：2018-06-13 01:34:21</em></strong></p><p><strong><em>更新时间：2020-04-15 21:23</em></strong></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Linux下的Vim使用教程</title>
      <link href="/2020/04/Linux%E4%B8%8B%E7%9A%84Vim%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2020/04/Linux%E4%B8%8B%E7%9A%84Vim%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h3 id="什么是Vim？"><a href="#什么是Vim？" class="headerlink" title="什么是Vim？"></a>什么是Vim？</h3><p>Vim是从Vi发展出来的一个功能非常强大的文本编辑器，在程序员中广泛使用。</p><h3 id="Vim-Vi的使用"><a href="#Vim-Vi的使用" class="headerlink" title="Vim/Vi的使用"></a>Vim/Vi的使用</h3><p>基本上Vim/Vi共分为三种模式：分别是<strong>命令模式（Command mode）</strong>，<strong>输入模式（Insert mode）</strong>和<strong>底线命令模式（Last line mode）</strong>。这三种模式的作用分别是：</p><h4 id="命令模式："><a href="#命令模式：" class="headerlink" title="命令模式："></a>命令模式：</h4><p>用户进入Vim时即是<strong>命令模式</strong>。</p><h4 id="输入模式："><a href="#输入模式：" class="headerlink" title="输入模式："></a>输入模式：</h4><p>在命令模式下按 <strong>“ i ”</strong>进入输入模式。</p><p>输入模式下按<strong>“ ESC ”</strong>，退出到命令模式。</p><h4 id="底线命令模式："><a href="#底线命令模式：" class="headerlink" title="底线命令模式："></a>底线命令模式：</h4><p>在命令模式下按<strong>“ ：“</strong>（英文状态下的冒号），进入底线命令模式。</p><p>在底线命令模式下可以输入单个或多个字符的命令，可用的命令非常多。</p><p>在底线命令模式中，基本的命令有（已经省略了冒号）：</p><ul><li>q 退出程序</li><li>w 保存文件</li></ul><p>按<strong>” ESC “ </strong> 键退出底线命令模式。</p><p>Vim工作模式：</p><p><code>vim filename</code>进入<code>命令模式</code></p><p><code>i</code>进入<code>输入模式</code></p><p><code>esc</code>退出到<code>命令模式</code></p><p><code>:</code>命令模式下按冒号进入到<code>底线命令模式</code></p><p><code>:wq</code>保存并退出Vim</p><h4 id="常见命令："><a href="#常见命令：" class="headerlink" title="常见命令："></a>常见命令：</h4>]]></content>
      
      
    </entry>
    
    <entry>
      <title>L2TP/IPSec一键安装脚本</title>
      <link href="/2020/03/L2TP:IPSec%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/"/>
      <url>/2020/03/L2TP:IPSec%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/</url>
      <content type="html"><![CDATA[<h4 id="本脚本适用环境："><a href="#本脚本适用环境：" class="headerlink" title="本脚本适用环境："></a>本脚本适用环境：</h4><p>系统支持：CentOS6+，Debian7+，Ubuntu12+<br>内存要求：≥128M<br>更新日期：2017 年 05 月 28 日</p><h4 id="关于本脚本："><a href="#关于本脚本：" class="headerlink" title="关于本脚本："></a>关于本脚本：</h4><p>名词解释如下<br>L2TP（Layer 2 Tunneling Protocol）<br>IPSec（Internet Protocol Security）<br>IKEv2 (Internet Key Exchange v2)<br>能实现 IPsec 的目前总体上有 openswan，libreswan，strongswan 这3种。<br>libreswan 是基于 openswan 的 fork，所以现在各个发行版基本已经看不到 openswan 的身影了。<br>当然也有使用 strongswan 的。</p><p>之所以要更新 L2TP 一键安装脚本，是因为随着各个 Linux 发行版不断推陈出新，原有的脚本已经不适应现在的需求。<br>本脚本通过编译安装最新版 libreswan 来实现 IPSec（CentOS7 下则是全部 yum 安装），yum 或 apt-get 来安装 xl2tpd，再根据各个发行版的使用方法不同，部署防火墙规则。</p><h4 id="写在前面："><a href="#写在前面：" class="headerlink" title="写在前面："></a>写在前面：</h4><p>基于 OpenVZ 虚拟化技术的 VPS 需要开启TUN/TAP才能正常使用，购买 VPS 时请先咨询服务商是否支持开启 TUN/TAP。</p><p>OpenVZ 虚拟的 VPS 需要系统内核支持 IPSec 才行。也就是说，母服务器的内核如果不支持的话那就没办法，只能换 VPS。<br>因此，一般不建议在 OpenVZ 的 VPS 上安装本脚本。脚本如果检测到该 VPS 为 OpenVZ 架构，会出现警告提醒。</p><h6 id="如何检测是否支持TUN模块？"><a href="#如何检测是否支持TUN模块？" class="headerlink" title="如何检测是否支持TUN模块？"></a>如何检测是否支持TUN模块？</h6><p>执行命令：<br><code>cat /dev/net/tun</code><br>如果返回信息为：<br>cat: /dev/net/tun: File descriptor in bad state<br>说明正常</p><h6 id="如何检测是否支持ppp模块？"><a href="#如何检测是否支持ppp模块？" class="headerlink" title="如何检测是否支持ppp模块？"></a>如何检测是否支持ppp模块？</h6><p>执行命令：<br><code>cat /dev/ppp</code><br>如果返回信息为：cat: /dev/ppp: No such device or address 说明正常</p><p>当然，脚本在安装时也会执行检查，如果不适用于安装，脚本会予以提示。</p><h4 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h4><p>root 用户登录后，运行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/across/master/l2tp.sh</span><br><span class="line">chmod +x l2tp.sh</span><br><span class="line">./l2tp.sh</span><br></pre></td></tr></table></figure></p><p>执行后，会有如下交互界面<br><img src="https://teddysun.com/wp-content/uploads/2016/l2tp_1.png" width="400"></p><p>Please input IP-Range:<br>(Default Range: 192.168.18):<br>输入本地IP段范围（本地电脑连接到VPS后给分配的一个本地IP地址），直接回车意味着输入默认值192.168.18</p><p>Please input PSK:<br>(Default PSK: teddysun.com):<br>PSK意为预共享密钥，即指定一个密钥将来在连接时需要用到，直接回车意味着输入默认值teddysun.com</p><p>Please input Username:<br>(Default Username: teddysun):<br>Username意为用户名，即第一个默认用户。直接回车意味着输入默认值teddysun</p><p>Please input teddysun’s password:<br>(Default Password: Q4SKhu2EXQ):<br>输入用户的密码，默认会随机生成一个10位包含大小写字母和数字的密码，当然你也可以指定密码。</p><p>ServerIP:your_server_main_IP<br>显示你的 VPS 的主 IP（如果是多 IP 的 VPS 也只显示一个）</p><p>Server Local IP:192.168.18.1<br>显示你的 VPS 的本地 IP（默认即可）</p><p>Client Remote IP Range:192.168.18.2-192.168.18.254<br>显示 IP 段范围</p><p>PSK:teddysun.com<br>显示 PSK</p><p>Press any key to start…or Press Ctrl+c to cancel<br>按下任意按键继续，如果想取消安装，请按Ctrl+c键</p><p>安装完成后，脚本会执行 ipsec verify 命令并提示如下：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">If there are no [FAILED] above, then you can connect to your</span><br><span class="line">L2TP VPN Server with the default Username/Password is below:</span><br><span class="line"></span><br><span class="line">ServerIP:your_server_IP</span><br><span class="line">PSK:your PSK</span><br><span class="line">Username:your usename</span><br><span class="line">Password:your password</span><br><span class="line"></span><br><span class="line">If you want to modify user settings, please use command(s):</span><br><span class="line">l2tp -a (Add a user)</span><br><span class="line">l2tp -d (Delete a user)</span><br><span class="line">l2tp -l (List all users)</span><br><span class="line">l2tp -m (Modify a user password)</span><br><span class="line">Welcome to visit https://teddysun.com/448.html</span><br><span class="line">Enjoy it!</span><br></pre></td></tr></table></figure><p>如果你要想对用户进行操作，可以使用如下命令：<br>l2tp -a 新增用户<br>l2tp -d 删除用户<br>l2tp -m 修改现有的用户的密码<br>l2tp -l 列出所有用户名和密码<br>l2tp -h 列出帮助信息  </p><h6 id="其他事项："><a href="#其他事项：" class="headerlink" title="其他事项："></a>其他事项：</h6><p>1、脚本在安装完成后，已自动启动进程，并加入了开机自启动。<br>2、脚本会改写 iptables 或 firewalld 的规则。<br>3、脚本安装时，会即时将安装日志写到 /root/l2tp.log 文件里，如果你安装失败，可以通过此文件来寻找错误信息。  </p><h6 id="使用命令："><a href="#使用命令：" class="headerlink" title="使用命令："></a>使用命令：</h6><p>ipsec status （查看 IPSec 运行状态）<br>ipsec verify （查看 IPSec 检查结果）<br>/etc/init.d/ipsec start|stop|restart|status （CentOS6 下使用）<br>/etc/init.d/xl2tpd start|stop|restart （CentOS6 下使用）<br>systemctl start|stop|restart|status ipsec （CentOS7 下使用）<br>systemctl start|stop|restart xl2tpd （CentOS7 下使用）<br>service ipsec start|stop|restart|status （Debian/Ubuntu 下使用）<br>service xl2tpd start|stop|restart （Debian/Ubuntu 下使用）  </p><h6 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h6><p>2017 年 05 月 28 日：<br>升级 libreswan 到版本 3.20。<br>修正 libreswan 的若干配置问题。<br>修正 xl2tpd 的端口监听配置问题。<br>修正在 CentOS 6 对 libevent2 的依赖问题，改为 yum 安装 libevent2-devel。<br>测试表明，在内网环境的 VPS 里（如AWS， IDCF，GCE，腾讯云，阿里云等）也可以正常使用了。  </p><p>2017 年 02 月 25 日：<br>升级 libreswan 到版本 3.19。  </p><p>2016 年 09 月 12 日：<br>修正了在 CentOS 6 下 libevent2 依赖的问题；<br>新增了一个 -m 选项，用以修改现有用户的密码。  </p><p>2016 年 08 月 13 日：<br>修正 Debian 8 下的 sd-daemon.h: No such file or directory 问题，是由于缺少依赖包 libsystemd-daemon-dev 导致的。</p><p>2016 年 08 月 05 日：<br>升级 libreswan 到版本 3.18。  </p><p>2016 年 06 月 10 日：<br>脚本在安装完成后，新增了几个命令，便于操作用户<br>l2tp -a 新增用户<br>l2tp -d 删除用户<br>l2tp -l 列出所有用户<br>l2tp -h 列出帮助信息  </p><p>2016 年 04 月 25 日：<br>4、在 Vultr 的 Debian 7的系统模板下安装时，软件包 libcurl4-nss-dev 会出现依赖错误。如下所示：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The following packages have unmet dependencies:</span><br><span class="line">libcurl4-nss-dev : Depends: libldap2-dev but it is not going to be installed</span><br><span class="line">Depends: librtmp-dev but it is not going to be installed</span><br></pre></td></tr></table></figure><p>而 libldap2-dev 和 librtmp-dev 又依赖了其他几种软件包。总之最后的依赖关系如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">libldap2-dev : Depends: libldap-2.4-2 (= 2.4.31-2+deb7u1) but 2.4.31+really2.4.40+dfsg-1+deb8u1~bpo70+1 is to be installed</span><br><span class="line">librtmp-dev : Depends: libgnutls-dev but it is not going to be installed</span><br><span class="line">libgnutls-dev : Depends: libp11-kit-dev (&gt;= 0.4) but it is not going to be installed</span><br><span class="line">libp11-kit-dev : Depends: libp11-kit0 (= 0.12-3) but 0.20.7-1~bpo70+1 is to be installed</span><br></pre></td></tr></table></figure><p>那么解决办法就是把最底层的依赖包 libp11-kit0 先卸载掉，然后再安装 libcurl4-nss-dev 即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get -y remove libp11-kit0</span><br><span class="line">apt-get -y --no-install-recommends install libcurl4-nss-dev wget</span><br></pre></td></tr></table></figure><p>然后再运行脚本安装即可。</p><p>2016 年 04 月 22 日：<br>修复了在 Ubuntu 16.04 下因为默认缺少 python 命令而导致 ipsec verify 等命令不能用的问题。</p><p>2016 年 04 月 19 日：<br>修复了在 Debian 7 下因为 libnss3 和 libnspr4 的版本过低而导致编译 libreswan 失败的问题。</p><p>2016 年 04 月 18 日：<br>目前在 Debian 7 上测试的结果，因为 libnss3 和 libnspr4 的版本过低而导致编译 libreswan 失败。临时解决办法是 dpkg 安装 libnss3_3.17.2 和 libnspr4_4.10.7 的 deb 包后重试。</p><hr><p>本内容来源于：<a href="https://teddysun.com/448.html" target="_blank" rel="noopener">https://teddysun.com/448.html</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>入手日版Nintendo Switch</title>
      <link href="/2020/01/%E5%85%A5%E6%89%8B%E6%97%A5%E7%89%88Nintendo%20Switch/"/>
      <url>/2020/01/%E5%85%A5%E6%89%8B%E6%97%A5%E7%89%88Nintendo%20Switch/</url>
      <content type="html"><![CDATA[<p><img src="https://images.shiguangping.com/imgs/202001/IMG_5103.JPG" width="600"></p><p>这是我入手的第三台任天堂switch。</p><p>第一台是任天堂刚发布switch不久之后购入的，当时系统还没有简体中文，大多数游戏都没有中文，后来闲鱼出手了。</p><p>第二台是去年吧，被异度之刃2这款游戏的CG吸引了，玩了没多久也卖了。</p><p>前几天一直在为入手NS还是NSL所困扰，后来合计一步到位，以后能在电视上玩，还是买了这台Switch，好像是日版的续航增强版，现在版本真多。</p><p>机器是昨天到的，贴膜是今天上午到的。</p><p>刚刚贴膜的时候膜贴废了，随后又在京东买了张贴膜，还有内存卡，打算明天再重新贴一下。</p><p>最近这几天，在家躲避疫情，重新开始玩玩之前的神作，<strong><em>塞尔达旷野之息</em></strong>。</p><p>之前玩的是日文版的，真心费劲。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>GitHub 查看分支</title>
      <link href="/2020/01/github%E6%9F%A5%E7%9C%8B%E5%88%86%E6%94%AF/"/>
      <url>/2020/01/github%E6%9F%A5%E7%9C%8B%E5%88%86%E6%94%AF/</url>
      <content type="html"><![CDATA[<p>初始化一个Git仓库 git init</p><p>查看分支 git branch</p><p>创建分支 git branch <branch-name></branch-name></p><p>切换分支 git checkout <branch-name></branch-name></p><p>创建并切换分支 git checkout -b <branch-name></branch-name></p><p>合并某分支到当前分支 git merge <branch-name></branch-name></p><p>删除分支 git branch -D <branch-name></branch-name></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>生日礼物 - Niz静电容键盘</title>
      <link href="/2019/12/%E9%80%80%E7%83%A7%E9%94%AE%E7%9B%98-Niz%20micro82%2045g/"/>
      <url>/2019/12/%E9%80%80%E7%83%A7%E9%94%AE%E7%9B%98-Niz%20micro82%2045g/</url>
      <content type="html"><![CDATA[<p> 今天提前收到小姐姐送的生日礼物，一把心仪已久的键盘，<strong><em>Niz宁芝静电容键盘（micro82 45g)</em></strong>。  </p><p>废话不多说了，上图：  </p><p><em>（这手感和声音，爽~）</em>  </p><p><strong><em>小姐姐说这个键盘按起来像以前上微机课的键盘-。-！</em></strong></p><p><img src="https://images.shiguangping.com/imgs/201912/20191214_144301.jpg" width="400px"></p><p><em>外包装比较简单</em>  </p><p><img src="https://images.shiguangping.com/imgs/201912/20191214_144329.jpg" width="400px"></p><p><em>键盘本体，这款是82键版本，白灰的键帽配色，很有敲敲敲的欲望。</em></p><p><em>键盘自带了Mac键帽可以替换，还带了几个增压弹簧。</em></p><p><em>键盘采用PBT键帽，用久了也不会出现打油的情况。键盘我还是推荐白色，或者类似白色，干净不易脏，看久了不腻。黑色尤其是ABS键帽，特别不耐脏。</em></p><p><img src="https://images.shiguangping.com/imgs/201912/20191214_150504.jpg" width="400px"></p><p><em>Niz的logo。</em></p><p><em>键盘有些地方有毛边，但也对得起它的价格。和动辄2000多的HHKB比起来，这款键盘的价格相当亲民了。</em></p><p><img src="https://images.shiguangping.com/imgs/201912/20191214_151002.jpg" width="400px"></p><p><strong><em>感谢小姐姐，2019年12月14日。</em></strong></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>与铁蛋儿的“一夜情”</title>
      <link href="/2019/09/%E4%B8%8E%E9%93%81%E8%9B%8B%E5%84%BF%E7%9A%84%E2%80%9C%E4%B8%80%E5%A4%9C%E6%83%85%E2%80%9D/"/>
      <url>/2019/09/%E4%B8%8E%E9%93%81%E8%9B%8B%E5%84%BF%E7%9A%84%E2%80%9C%E4%B8%80%E5%A4%9C%E6%83%85%E2%80%9D/</url>
      <content type="html"><![CDATA[<p>铁蛋儿是我昨天晚上捡回来的。  </p><p>昨晚在楼下电影院看完<em>郭森斯坦森</em>和<em>巨石强森</em>主演的《速度与激情：特别行动》后回来，在楼下看见了铁蛋儿。  </p><p>刚看见铁蛋儿时以为是只野猫，因为小区里的野猫特别多，但是小区的野猫都不近人。铁蛋儿看见我之后，走到我腿边儿蹭，我猜它是饿了。  </p><p>随后我就把它勾引回家了。  </p><p>回到家我给它水，火腿，吃完东西后给它洗澡，洗澡时有点儿抗拒<em>（猫咪果然天生不喜欢水）</em>。  </p><p>看它傻头傻脑的样儿，给它取了名字叫<strong>铁蛋儿</strong>，感觉特配它的傻气。 </p><p><img src="https://images.shiguangping.com/typecho/uploads/2019/09/1766375958.jpg " width="400px"></p><p><em>（今早儿拍的照片，还把以前买的一直没机会戴的猫铃铛给它戴上了）</em></p><p>当天晚上我到客厅窗边打电话，它就跟着我到了客厅窗台上站着，一动不动。  </p><p>我回卧室躺着，它也屁颠儿屁颠儿地跑到床上，过一会儿就在我身边睡着了，伴随着猫咪特有的呼噜声。  </p><p>期间它醒了几次，不一会儿又睡着了。  </p><p><img src="https://images.shiguangping.com/typecho/uploads/2019/09/1482629674.jpg" width="400px"></p><p>我在床上躺着开始上网查如何养猫，养猫要注意什么？怎么才能不让它破坏家里面的东西，内心纠结着能不能对它的一生付责任。 </p><p>早晨起来发现它在我家门口旁的袋子上尿尿了，估计是当成猫砂了。我猜铁蛋儿是有主人的。 </p><p>结果今早儿，铁蛋儿的主人就在小区群里发了寻猫启事。  </p><p>虽然对铁蛋儿有很多的不舍，但我还是联系了铁蛋儿真正的主人。  </p><p>与其我模棱两可的纠结是否收养它，不如把它交给真正对它好的主人身边吧。  </p><p>我和铁蛋儿的“一夜情”就这样结束了。  </p><p><em>从主人处得知，铁蛋儿是一只约三个多月大的小母猫。</em></p><h2 id="铁蛋儿の写真"><a href="#铁蛋儿の写真" class="headerlink" title="铁蛋儿の写真"></a>铁蛋儿の写真</h2><p><img src="https://images.shiguangping.com/typecho/uploads/2019/09/2867367599.jpg" width="400px"></p><p><img src="https://images.shiguangping.com/typecho/uploads/2019/09/1564673647.jpg" width="400px"></p><p><img src="https://images.shiguangping.com/typecho/uploads/2019/09/833197968.jpg" width="400px"></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>使用Cloudreve搭建私有云盘</title>
      <link href="/2019/09/%E4%BD%BF%E7%94%A8Cloudreve%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BA%91%E7%9B%98/"/>
      <url>/2019/09/%E4%BD%BF%E7%94%A8Cloudreve%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BA%91%E7%9B%98/</url>
      <content type="html"><![CDATA[<h3 id="1-访问官网下载源码"><a href="#1-访问官网下载源码" class="headerlink" title="1.访问官网下载源码"></a>1.访问<a href="https://cloudreve.org/" target="_blank" rel="noopener">官网</a>下载源码</h3><p><img src="https://images.shiguangping.com/typecho/uploads/2019/09/1528145123.png" width="400px"></p><p><strong><em>下载最新的安装包</em></strong></p><p><img src="https://images.shiguangping.com/typecho/uploads/2019/09/3690622660.png" width="400px"></p><h3 id="2-解压缩并将源码上传至服务器空间"><a href="#2-解压缩并将源码上传至服务器空间" class="headerlink" title="2.解压缩并将源码上传至服务器空间"></a>2.解压缩并将源码上传至服务器空间</h3><p>将下载好的安装包解压后，将文件夹内的所有文件全部上传至服务器空间</p><p><img src="https://images.shiguangping.com/typecho/uploads/2019/09/2470042002.png" width="400px"></p><h3 id="3-访问域名导入数据库安装"><a href="#3-访问域名导入数据库安装" class="headerlink" title="3.访问域名导入数据库安装"></a>3.访问域名导入数据库安装</h3><p>源码上传至空间后，浏览器访问<code>域名/CloudreveInstaller</code>进行环境检查，配置数据库信息。</p><h3 id="4-登录后台配置相关设置"><a href="#4-登录后台配置相关设置" class="headerlink" title="4.登录后台配置相关设置"></a>4.登录后台配置相关设置</h3><p>安装完成后，访问【您的域名/admin】，登录到后台，可修改用户名密码，以及配置所需要的设置等</p><p><img src="https://images.shiguangping.com/typecho/uploads/2019/09/4131852593.png" width="400px"></p><h3 id="5-遇到的问题"><a href="#5-遇到的问题" class="headerlink" title="5.遇到的问题"></a>5.遇到的问题</h3><ol><li>头像显示问题，上传头像不显示，可能是服务器PHP没有安装【fileinfo】插件。我用的bt面板，在PHP的安装扩展里安装fileinfo即可。</li><li>不支持文件夹上传，这个不算是问题，我看论坛，开发者目前没有加入文件夹上传这一功能。</li></ol>]]></content>
      
      
    </entry>
    
    <entry>
      <title>根据转载的一篇文章总结的Java学习方法</title>
      <link href="/2018/06/%E6%A0%B9%E6%8D%AE%E8%BD%AC%E8%BD%BD%E7%9A%84%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E6%80%BB%E7%BB%93%E7%9A%84Java%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
      <url>/2018/06/%E6%A0%B9%E6%8D%AE%E8%BD%AC%E8%BD%BD%E7%9A%84%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E6%80%BB%E7%BB%93%E7%9A%84Java%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<h1 id="step-1-学习路线"><a href="#step-1-学习路线" class="headerlink" title="step 1 学习路线"></a>step 1 学习路线</h1><p>路线：<strong><em>JavaSE–&gt;web–&gt;Java后端</em></strong></p><h3 id="1-JavaSE"><a href="#1-JavaSE" class="headerlink" title="1. JavaSE"></a>1. JavaSE</h3><p>找一个Java基础教程，尽量多动手，对Java有一个基本的了解。</p><h3 id="2-web开发"><a href="#2-web开发" class="headerlink" title="2. web开发"></a>2. web开发</h3><p><strong>学习web，学习顺序：</strong>  </p><ol><li><p>HTML/CSS/JS</p></li><li><p>Servlet/JSP(JAVAEE)</p></li><li><p>Mysql(数据库)</p></li></ol><ul><li><p>首先，要学习<strong>HTML/CSS/JS</strong>，这些东西对于Java后端开发来说，理论上不是特别重要，但至少要达到可以自己写页面的水平。</p></li><li><p>然后，<strong>Servlet/JSP(JAVAEE)</strong>这部分，这部分是Java后端必须必须精通的，这部分也是三部分中最需要花费精力的。</p></li><li><p>最后，学习使用数据库，<strong>Mysql</strong>是不错的入门选择，而且Java领域主流的关系型数据库就是Myqsl。这部分一般在学习<strong>Servlet/JSP</strong>的时候就会接触到，其中JDBC部分就是数据库的相关部分。这部分不仅要学会用JDBC操作数据库，还要学会使用数据库客户端工具，例如：<strong>navicat</strong>，<strong>sqlyog</strong>，二选一即可.  </p></li></ul><h3 id="3-开发框架"><a href="#3-开发框架" class="headerlink" title="3. 开发框架"></a>3. 开发框架</h3><p>学会以上内容还不足以参加工作，为了提高开发效率，会使用一些<strong>Java Web框架</strong>。目前比较主流的是<strong>SSM框架</strong>，即<strong>spring</strong>，<strong>springmvc</strong>，<strong>mybatis</strong>。这里需要学会这三种框架的搭建，并用他们做出一个简单的增删改查项目.</p><p>快速地利用SSM搭建出一个web框架是必须的，记录下第一次的搭建过程是很有必要的。在搭建SSM的过程中，会接触到一个叫<strong>maven</strong>的工具，这个工具是以后工作当中会经常用到的工具。在目前这个阶段，只需要到网上了解一下maven的基本用法即可，更高端的用法会随着工作经验的增加，逐渐接触到的。</p><h3 id="4-找工作"><a href="#4-找工作" class="headerlink" title="4. 找工作"></a>4. 找工作</h3><p>当完成开发框架的学习以后，就该找工作了。在找工作的同时，不应该停下学习。上面这些内容只是囫囵吞枣的学会了使用，你可以逐步尝试着去了解更多的东西，网络是你最重要的老师。</p><h1 id="step-2-Java编程思想-深入理解Java基础"><a href="#step-2-Java编程思想-深入理解Java基础" class="headerlink" title="step 2 Java编程思想,深入理解Java基础"></a>step 2 Java编程思想,深入理解Java基础</h1><p>对于参加工作<strong><em>1年以内</em></strong>的同学，恭喜你，这个时候，你已经拥有了一份Java的工作。这个阶段是你成长极快的阶段，而且你可能会经常加班。但是加班不代表你就可以松懈了，永远记得我说的那句话，<em>从你入行那一刻起，你就要不停的学习</em>。 </p><p>在这一年里，你至少需要看完<strong>《Java编程思想》</strong>这本书。这本书的内容是帮助你对于Java有一个更加深入的了解，是Java基础的升级版。这本书很厚，当初看这本书，我花了整整三个月。正常速度的话，应该可以在半年左右看完。我这里不要求过高，只要你在一年以内把这本书看完即可。当然了，我所说的看完，是充分吸收，而不是读一遍就完事了，因此有些内容你可能会看不止一遍。总而言之，这个阶段的核心学习思想就是，在工作中实践，并且更加深入的了解Java基础。</p><h3 id="设计模型"><a href="#设计模型" class="headerlink" title="设计模型"></a>设计模型</h3><p><strong>对于参加工作1年到2年的同学</strong>，这部分时间段的同学，已经对Java有了一个更加深入的了解。但是对于面向对象的体会可能还不够深刻，编程的时候还停留在完成功能的层次，很少会去考虑设计的问题。于是这个时候，设计模式就来了。我当时看的是<strong>《大话设计模式》</strong>这本书，并且写了完整版的设计模式博客。因此，我要求大家，最多在你工作一年的时候，必须开始写博客，而设计模式就是你博客的开端。</p><p>请记住，我所提的基本都是最低要求，因此不要有任何松懈的心理，否则五年后，你不要去羡慕别人高于你的工资，也不要去羡慕别人进入了某公司。这一年，你必须对于设计模式了如指掌，《大话设计模式》可以作为你的开端。此外，设计模式并不是你这一年唯一的任务，你还需要看一些关于代码编写优化的书。比如<strong>《重构 改善既有代码的设计》</strong>，<strong>《effective java》</strong>。总而言之，这个阶段，你的核心任务就是提高你的代码能力，要能写出一手优雅的代码。  </p><h1 id="step-3-参加工作2年到3年的同学"><a href="#step-3-参加工作2年到3年的同学" class="headerlink" title="step 3 参加工作2年到3年的同学"></a>step 3 参加工作2年到3年的同学</h1><p><strong>对于参加工作2年到3年的同学</strong>，有的同学在这个时候觉得自己已经很牛逼了，于是忍不住开始慢慢松懈.请记住,你还嫩的多。对这个阶段，有一本书是你必须看的，它叫做<strong>《深入理解Java虚拟机》</strong>。这本书绝对是Java开发者最重要的书，没有之一。在我眼里，这本书的重要性还要高于《Java编程思想》。这本书的内容是帮助你全面的了解Java虚拟机，在这个阶段，你一定已经知道Java是运行在JVM之上的。所以，对于JVM，你没有任何理由不了解它。</p><p>另外，在过去2年的工作当中，你肯定或多或少接触过并发。这个时候，你应该去更加深入的了解并发相关的知识，而这部分内容，我比较推荐<strong>《Java并发编程实战》</strong>这本书。只要你把这本书啃下来了，并发的部分基本已经了解了十之六。与此同时，这个阶段你要做的事情还远不止如此。这个时候，你应该对于你所使用的框架应该有了更深入的了解，对于Java的类库也有了更深入的了解。</p><p>因此，你需要去看一些jdk中的类的源码，也包括你所使用的框架的源码。这些源码能看懂的前提是，你必须对设计模式非常了解。否则的话，你看源码的过程中，永远会有这样那样的疑问，这段代码为什么要这么写？为什么要定义这个接口，它看起来好像很多余？由此也可以看出，这些学习的过程是环环相扣的，如果你任何一个阶段拉下来了，那么你就真的跟不上了，或者说是一步慢步步慢。而且我很负责的告诉你，我在这个阶段的时候，所学习的东西远多于这里所罗列出来的。</p><p>因此千万不要觉得你已经学的很多了，我所说的这些都只是最低要求，不光是我，很多人在这个时间段所学习的内容都远超本文的范围。如果你不能跟上节奏的话，若干年后，如果不是程序猿市场还不错的话，你很可能不仅仅是工资比别人低，公司没别人好，而是根本就找不到工作。总而言之，这个阶段，你需要做的是深入了解<strong>Java底层</strong>和<strong>Java类库</strong>（比如并发那本书就是Java并发包java.concurrent的内容），也就是JVM和JDK的相关内容。而且还要更深入的去了解你所使用的框架，方式比较推荐看源码或者看官方文档。另外，还有一种学习的方式，在2年这个阶段，也应该启用了，那就是造轮子。不要听信那套“不要重复造轮子”的论调，那是公司为了节省时间成本编造出来的。重复造轮子或许对别人没有价值，因为你造的轮子可能早就有了，而且一般情况下你造出来的轮子还没有现存的好。</p><p>但是对别人没有价值，不代表对你自己没有价值。一个造轮子的过程，是一个从无到有的过程。这个过程可以对你进行系统的锻炼，它不仅考察你的编码能力，还考察你的框架设计能力，你需要让你的轮子拥有足够好的扩展性、健壮性。而且在造轮子的过程中，你会遇到各种各样的难题，这些难题往往又是你学习的契机。当你把轮子造好的时候，你一定会发现，其实你自己收获了很多。所以，这个阶段，除了上面提到的了解JVM/JDK和框架源码以外，也请你根据别人优秀的源码,去造一个任何你能够想象出来的轮子。</p><h1 id="step-4-参加工作3年到4年的同学"><a href="#step-4-参加工作3年到4年的同学" class="headerlink" title="step 4 参加工作3年到4年的同学"></a>step 4 参加工作3年到4年的同学</h1><p><strong>对于参加工作3年到4年的同学</strong>，这个阶段的同学，提升已经是很难了，而且这个阶段的学习往往会比较多样化。因为在前3年的过程中，你肯定或多或少接触过一些其它的技术，比如大数据、分布式缓存、分布式消息服务、分布式计算、软负载均衡等等。这些技术，你能精通任何一项，都将是你未来面试时巨大的优势，因此如果你对某一项技术感兴趣的话，这个时候可以深入去研究一下。这项技术不一定是你工作所用到的，但一定是相关的。而且在研究一门新技术时，切忌朝三暮四。有的同学今天去整整大数据，搞搞Hadoop/hbase一类的东西。过不了一段时间，就觉得没意思，又去研究分布式缓存，比如redis。然后又过不了一段时间，又去研究分布式计算，比如整整Mapreduce或者storm。结果到最后，搞得自己好像什么都会一样，在简历上大言不惭的写上大数据、分布式缓存、分布式计算都了解，其实任何一个都只是浮于表面。到时候面试官随便一问，就把你给识破了。</p><p>一定要记住，作为一个程序猿，平日里所接触的技术可能会很多，但是想要让一门技术成为你的优势，那么一定是你对这门技术的了解强过绝大多数人才行。因此在这个阶段，你就不能再简单的去学习前3年的内容了，虽然前面的学习如果还不够深入的话依旧要继续，但这个时候你应该更多的考虑建立你的优势，也可以称为差异性。差异性相信不难理解，就是让你自己变得与众不同。你前面三年的学习足够你成为一名基本合格的Java开发者，但你离成为一名优秀的Java开发者还有很大的距离。</p><p>所谓优秀，即能别人所不能。而你前三年所学习的内容，是很多做过几年的Java开发都能够掌握的。那么为了让自己有差异性，你就需要另辟蹊径，找一个方向深入研究下去，以期在将来，你能够成为这个领域的专家，比如分布式计算领域的专家，大数据领域的专家，并发领域的专家等等。此外，你除了建立你的差异性之外，还要去弥补你基础上的不足，直到现在，我都没有提及基础知识。原因是基础是很枯燥无味的，学的太早不仅容易懵逼，而且懵逼的同时还容易产生心理阴影，以至于以后再不想去研究这些基础。但基础又是你深入研究一些领域时所必须掌握的，比如你去研究分布式计算，你不懂算法你玩个毛？比如你去做分布式缓存，你对计算机系统的内存不了解，你如何去做缓存？</p><p>如果你的基础本来就非常强，那么恭喜你，相信你在之前的工作中已经充分体会到了这些基础对你的帮助。但我相信大部分人的基础都很薄弱，哪怕是科班毕业的人，很多人也不敢说自己当初的基础学的多么强大，比如算法、计算机系统原理、编译原理这些。但是每个人时间都是有限的，而且这些基础的书籍每一本读下来，没个一年半载的，还真拿不下来，因此还是要有所抉择的。虽然艺多不压身，但问题是艺多是有代价的，是需要你付出时间和精力的，而我个人更赞成在同等代价的情况下获取最大的收获。</p><p>首先，我比较推崇的基础书籍有三本，分别是<strong>《深入理解计算机系统》</strong>，<strong>《tcp/ip详解 卷一、二、三》</strong>，<strong>《数据结构与算法》</strong>。其中TCP/IP有三本书，但我们这里把这三本看成是一本大书。这三本分别适合三种人，《深入理解计算机系统》比较适合一直从事Java Web开发和APP后端开发工作的人群。《tcp/ip详解 卷一、二、三》比较适合做网络编程的人群，比如你使用netty去开发的话，那么就要对TCP/IP有更深入的了解。而《数据结构与算法》这本书，则比较适合做计算研究工作的人，比如刚才提到的分布式计算。另外，我要强调的是，这里所说的适合，并不是其它两本对你就没有用。比如你做Java Web和APP后端开发，《tcp/ip详解 卷一、二、三》这本书对你的作用也是很大的。这里只是分出个主次关系而已，你要是时间足够的话，能把三本都精读那当然最好不过了。</p><p>但如果时间有限的话，那么就先挑对你帮助最大的书去读。理论上来讲，这一年你能把这三本其中一本精读下来，就已经非常厉害了。有了基础，有了前面的工作经验，你就可以去开拓属于你的领域了。在这一年里，一定要规划好自己的领域，建立好自己的优势，制造出差异性。如果你对自己的领域不够清晰的话，随着你工作的时间日益增多，你接触的技术会越来越多，这个时候，你很容易被淹死在技术的海洋里，看似接触的技术越来越多，会用的也越来越多，但你毫无优势。有的同学可能会问，“我，我也不知道我的领域是什么啊？怎么办呢？”对于这种人，我只想说，“卧槽，这还问我？要不干脆我替你学习得了，好不好？”</p><h1 id="step-5-参加工作4年到5年的同学"><a href="#step-5-参加工作4年到5年的同学" class="headerlink" title="step 5 参加工作4年到5年的同学"></a>step 5 参加工作4年到5年的同学</h1><p><strong>对于参加工作4年到5年的同学</strong>，经过前面一年的历练，相信你在自己所钻研的领域已经有了自己一定的见解，这个时候，技术上你应该已经遇到瓶颈了。这个时候不要着急提高自己的技术，已经是时候提高你的影响力了，你可以尝试去一些知名的公司去提高你的背景，你可以发表一些文章去影响更多的人。当然，你也可以去GitHub创建一个属于你的开源项目，去打造自己的产品。</p><p>这次的开源项目不同于之前的造轮子，你这个时候是真的要去尽量尝试造出来真正对别人有价值的轮子。技术学到这个阶段，很容易遇到瓶颈，而且往往达到一定程度后，你再深入下去的收效就真的微乎其微了，除非你是专门搞学术研究的。然而很可惜，大部分程序猿做不到这一步，那是科学家做的事情。这个时候提高影响力不仅仅是因为技术上容易遇到瓶颈，更多的是影响力可以给你创造更多的机会。程序猿在某种程度上和明星很像，一个好的电视剧和电影就可以成就一批明星，程序猿有的时候也是，一个好的项目就可以成就一群程序猿。比如国内几个脍炙人口的项目，像淘宝、支付宝、QQ、百度、微信等等。这每一个项目，都成就了一批程序猿。我敢说，这里面任何一个项目，如果你是它的核心开发，光是这样一个Title，就已经是你非常大的优势。更何况还不止如此，Title说到底也是个名头，更重要的是，这种项目在做的时候，对你的历练一定也是非常给力的。</p><p>而你如果想要参与这样的项目，除了靠运气之外，影响力也是很重要的一个手段。比如你在分布式计算领域有一定的影响力，那么如果有什么好的关于分布式计算的项目，对方就很可能会邀请你。就算人家不邀请你，你自己主动去面试的时候，对方如果知道你在这个领域的影响力，也肯定会起到很大的作用，而这个作用，甚至可能会超过你现在的技术能力。所以，在这个阶段，你最大的任务是提高自己的影响力，为自己未来的十年工作生涯那一天做准备。如果你能够靠你的影响力和以前积累的技术，参与到一个伟大的项目当中，那么你后面的五年也就有着落了。当然了，我现在满打满算，做程序猿也就4年半不到，因此关于4年到5年这一部分，我的见解不一定是对的，就算是对的，也不一定是适合任何人的。</p><p>所以，希望大家自己有的判断力，去决定到底该如何度过这一年。  </p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>本文到此就基本结束了，整篇文章很长，但其实主要就说了两部分内容，一个是社招面试的准备，一个是Java生涯的学习。关于这两部分，我已经给出了自己的见解，但是还是那句话，每个人吸收知识的时候，都要有抽取精华，去除糟粕的能力。我所说的，可能有些是对的，有些是错的，有些是适合你的，有些是不太适合你的，你要自己能够判断。其实你在生活和工作当中也是一样的，你身边的人形形色色，有的人你喜欢，有的人你很讨厌。但其实你喜欢的人也有缺点，你讨厌的人也有优点。你要学会从你讨厌的人身上学会他的优点，千万不要一棒子打死，这只会让你失去很多学习成长的机会。好了，说了这么多了，就到此为止吧，希望本文可以帮助到作为程序猿或即将成为程序猿的你。  </p><p><strong>声明</strong>：<em>本文转载自网络，<a href="http://www.cnblogs.com/huaxingtianxia/p/5724093.html" target="_blank" rel="noopener">原文地址</a>。</em></p><p><em>这篇文章发表自2016年，距离现在已经过了很长一段时间。可能再过一段时间，会出现更多的技术，学习路线可能也会发生改变。但是这篇文章的一些想法和思路是非常值得借鉴和学习的。—2018年6月17日</em></p><p><em>整理博客时，又看到了这篇文章。这回正式决心杀进程序猿行业，拿出半年时间培训，最后一次机会，来之不易，成本颇大，规划好学习路线，必须比其他人掌握的更多，才能多一份机会。我发现培训机构的同学是真心都学习啊，课堂气氛太活跃了。—2020年4月20日</em></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>hexo g构建静态文件无法生成index.html等文件</title>
      <link href="/2018/06/hexo%20g%E6%9E%84%E5%BB%BA%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E7%94%9F%E6%88%90index.html%E7%AD%89%E6%96%87%E4%BB%B6/"/>
      <url>/2018/06/hexo%20g%E6%9E%84%E5%BB%BA%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E7%94%9F%E6%88%90index.html%E7%AD%89%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<h3 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h3><p>安装好<code>nodejs</code>,<code>git</code>,<code>HEXO</code>之后,在GitHub上重新克隆hexo源文件到本地,然后通过<code>hexo c</code>,<code>hexo g</code>命令后,<code>public</code>文件夹内没有<code>index.html</code>等文件。</p><h3 id="检查npm插件"><a href="#检查npm插件" class="headerlink" title="检查npm插件"></a>检查npm插件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm ls --depth 0</span><br></pre></td></tr></table></figure><p>通过命令查看缺少的插件,终端会提示很多<code>npm ERR!</code></p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-archive --save</span><br></pre></td></tr></table></figure><p>安装后重新<code>hexo c</code>,<code>hexo g</code>即可.</p><h3 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h3><p>我今天通过上述方法解决了没有<code>index.html</code>的问题，但是生成的<code>index.html</code>是空的。后来发现<code>themes</code>文件夹里面的主题文件夹是空的，之后重新下载主题文件放进去就好了。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Linux的几个有趣命令</title>
      <link href="/2018/06/Linux%E7%9A%84%E5%87%A0%E4%B8%AA%E6%9C%89%E8%B6%A3%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/06/Linux%E7%9A%84%E5%87%A0%E4%B8%AA%E6%9C%89%E8%B6%A3%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h4 id="sl命令"><a href="#sl命令" class="headerlink" title="sl命令"></a>sl命令</h4><p>你会看到一辆小货车从屏幕右边开到了左边～<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">安装：sudo apt-get install sl</span><br><span class="line">运行：sl</span><br></pre></td></tr></table></figure></p><h4 id="fortune命令"><a href="#fortune命令" class="headerlink" title="fortune命令"></a>fortune命令</h4><p>输出一句话，有笑话、名言、唐诗宋词等等：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">安装：sudo apt-get install fortune</span><br><span class="line">运行：fortune</span><br></pre></td></tr></table></figure></p><h4 id="cowsay命令"><a href="#cowsay命令" class="headerlink" title="cowsay命令"></a>cowsay命令</h4><p>用ASCII字符打印牛、羊等动物。还有<code>cowthink</code>命令，这是是奶牛想，命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">安装：sudo apt-get install cowsay</span><br><span class="line">运行：cowsay -f tux "坑爹啊～"</span><br><span class="line"></span><br><span class="line">cowsay -l    查看其他动物的名字</span><br><span class="line">cowsay -f 动物们 "坑爹啊～"    可其他动物</span><br></pre></td></tr></table></figure><h4 id="cmatrix命令"><a href="#cmatrix命令" class="headerlink" title="cmatrix命令"></a>cmatrix命令</h4><p>这个是《黑客帝国》里面的代码雨，很cool：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">安装：sudo apt-get install cmatrix</span><br><span class="line">运行：cmatrix</span><br></pre></td></tr></table></figure></p><p>使用<code>Ctrl+C</code>程序结束。  </p><h4 id="figlet、toilet命令"><a href="#figlet、toilet命令" class="headerlink" title="figlet、toilet命令"></a>figlet、toilet命令</h4><p>艺术字生成器，由ASCII字符组成，把文本显示成标题栏。此外还有banner这个命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">安装：sudo apt-get install figlet</span><br><span class="line">    sudo apt-get install toilet</span><br><span class="line">运行：figlet I LOVE YOU !</span><br><span class="line">    toilet I LOVE YOU !</span><br></pre></td></tr></table></figure><p>此外<code>toilet</code>还可以添加颜色<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">toilet -f mono -F gay I LOVE YOU !</span><br></pre></td></tr></table></figure></p><h4 id="oneko命令"><a href="#oneko命令" class="headerlink" title="oneko命令"></a>oneko命令</h4><p>这个也比较有趣，桌面上出现一只喵星人，会跟着你的鼠标再跑，<code>Ctrl+C</code>结束：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">安装：sudo apt-get install oneko</span><br><span class="line">运行：oneko</span><br></pre></td></tr></table></figure></p><h4 id="yes命令"><a href="#yes命令" class="headerlink" title="yes命令"></a>yes命令</h4><p>一直输出字符，使用<code>Ctrl+C</code>结束：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yes I LOVE YOU !</span><br></pre></td></tr></table></figure></p><h4 id="cal命令"><a href="#cal命令" class="headerlink" title="cal命令"></a>cal命令</h4><p>这个是打印日历：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cal 6 2018</span><br></pre></td></tr></table></figure></p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>这些命令是在今日头条看到的，很有趣。</p>]]></content>
      
      <categories>
          
          <category> 生活随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>在Linux中使配置alias永久生效</title>
      <link href="/2018/06/%E5%9C%A8Linux%E4%B8%AD%E4%BD%BF%E9%85%8D%E7%BD%AEalias%E6%B0%B8%E4%B9%85%E7%94%9F%E6%95%88/"/>
      <url>/2018/06/%E5%9C%A8Linux%E4%B8%AD%E4%BD%BF%E9%85%8D%E7%BD%AEalias%E6%B0%B8%E4%B9%85%E7%94%9F%E6%95%88/</url>
      <content type="html"><![CDATA[<h3 id="编辑-bashrc"><a href="#编辑-bashrc" class="headerlink" title="编辑.bashrc"></a>编辑.bashrc</h3><p>在终端，通过命令回家：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br></pre></td></tr></table></figure></p><p>之后通过文本编辑器编辑文本<code>.bashrc</code>：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit .bashrc</span><br></pre></td></tr></table></figure></p><p>或者，使用vim编辑：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim .bashrc</span><br></pre></td></tr></table></figure></p><p>如果没有<code>.bashrc</code>文件，需要手动创建一个。</p><p><em>注意：<code>.bashrc</code>是隐藏文件，在文件管理器中查看时需要勾选<code>显示隐藏文件</code>。</em></p><p>创建好之后，在<code>.bashrc</code>最后一行添加你要设置的alias命令，例如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias hxc='rm -f ~/blog/db.json &amp;&amp; hexo clean'</span><br></pre></td></tr></table></figure><p>如果是新建的<code>.bashrc</code>文件，直接在里面添加alias命令就可以，命令是一行一行的。</p><p>添加完之后保存，再通过source命令使刚才的配置文件生效：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source .bashrc</span><br></pre></td></tr></table></figure><p>之后在终端敲击<code>alias</code>命令，查看刚刚配置的alias命令是否生效。</p><h3 id="编辑-bash-profile"><a href="#编辑-bash-profile" class="headerlink" title="编辑.bash_profile"></a>编辑.bash_profile</h3><p>在<code>.bash_profile</code>最后一行添加一条命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure></p><p><em>注意：如果没有<code>.bash_profile</code>文件就新建一个。</em></p><p>添加完之后保存退出，终端通过source命令使配置生效：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source .bash_profile</span><br></pre></td></tr></table></figure><p>此时可以重新打开终端，输入<code>alias</code>命令，查看配置的alias是否已经生效。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>GitHub如何配置SSH</title>
      <link href="/2018/06/GitHub%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AESSH/"/>
      <url>/2018/06/GitHub%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AESSH/</url>
      <content type="html"><![CDATA[<h2 id="一、生成SSH-Key"><a href="#一、生成SSH-Key" class="headerlink" title="一、生成SSH Key"></a>一、生成SSH Key</h2><p>在Git Bash终端输入命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "china_liyan123@yahoo.co.jp"</span><br></pre></td></tr></table></figure></p><p><em>此处邮箱替换为自己的邮箱地址。</em></p><p>此时终端提示：</p><blockquote><p>Generating public/private rsa key pair.<br>Enter file in which to save the key (/c/Users/shado/.ssh/id_rsa): </p></blockquote><p>终端会让你选择存放SSH的路径，括号内的是默认路径。</p><p>直接回车选择默认路径，终端提示输入SSH密码，需要输入两次，此时输入的密码不会显示在终端上，敲完接回车即可。  </p><blockquote><p>Your identification has been saved in /c/Users/shado/.ssh/id_rsa.<br>Your public key has been saved in /c/Users/shado/.ssh/id_rsa.pub.</p></blockquote><p>之后终端提示密钥已经生成，在刚才选择的默认路径中，其中<code>id_rsa</code>是私有密钥，<code>id_rsa.pub</code>是公共密钥。  </p><h2 id="二、在GitHub中添加密钥"><a href="#二、在GitHub中添加密钥" class="headerlink" title="二、在GitHub中添加密钥"></a>二、在GitHub中添加密钥</h2><p>登陆GitHub，在页面右上角头像选择下拉菜单中<code>Setting</code>，在设置页面<code>SSH and GPG keys</code>标签页，在这个标签页下添加SSH。</p><p>点击页面右上角<code>New SSH key</code>按钮，添加SSH密钥。</p><p>打开保存SSH的默认路径，打开<code>id_rsa.pub</code><em>（用任意文本编辑器打开即可）</em>，复制里面的内容，粘贴到<code>New SSH key</code>的key里面，Title自定义即可，之后点击Add。</p><p>回到终端窗口，敲入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>此时终端提示：  </p><blockquote><p>Enter passphrase for key ‘/c/Users/shado/.ssh/id_rsa’:  </p></blockquote><p>输入之前设置的密码，输入时密码不会显示在终端上。</p><p>密码输入正确后，终端会提示：  </p><blockquote><p>Hi ENNRIaaa! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><p>说明SSH密钥已经配置成功。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>小白部署HEXO到GitHub</title>
      <link href="/2018/06/%E5%B0%8F%E7%99%BD%E9%83%A8%E7%BD%B2HEXO%E5%88%B0GitHub/"/>
      <url>/2018/06/%E5%B0%8F%E7%99%BD%E9%83%A8%E7%BD%B2HEXO%E5%88%B0GitHub/</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>呃，终于忙乎完了!</p><p>从昨天傍晚的7点半一直到现在的2点50分，并且到目前都还在折腾，这也是第一篇文章，即将要上传到GitHub上的。</p><p>之前我是没有接触过GitHub和HEXO的，我现在在用的博客程序是z-blog，它部署在腾讯云，地址是：<a href="https:www.shiguangping.com" target="_blank" rel="noopener">时光瓶</a>,现在之所以搞hexo，是因为看到了一位前端大咖的博客，<a href="https://diygod.me/" target="_blank" rel="noopener">diygod.me</a>，看到之后很惊艳，由此认识到了hexo和GitHub。<br>通过维护这个博客开始我的学习之旅，慢慢了解GitHub，了解开源世界。  </p><p>然后说一下现在正在用的这个HEXO主题，这个主题是像素风格的，很有魔性，所以就采用了。在此感谢主题的作者，作者的博客有关于这个主题的说明，虽然我看作者已经很久没有更新他的博客了，<a href="http://blackshow.me/" target="_blank" rel="noopener">主题作者</a>.</p><h1 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h1><h1 id="1-本地安装HEXO"><a href="#1-本地安装HEXO" class="headerlink" title="1. 本地安装HEXO"></a>1. 本地安装HEXO</h1><p>安装步骤可以参考官方文档，<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">中文地址</a>。</p><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><ul><li><p><a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a>（Node.js 版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本）</p></li><li><p><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></p><p><em>这两个是安装Hexo之前必须要安装的</em></p></li></ul><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装完Hexo之后，执行下列命令，Hexo会在指定文件夹新建所需文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p><em>每个文件的作用请参考官方文档，文档包含详细的安装和配置步骤。</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>启动服务，默认情况下，使用浏览器访问地址://localhost:4000/，如果这个地址无效，可通过命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server -p 5000</span><br></pre></td></tr></table></figure><p>-p 指定端口，重新尝试。如果可以正常访问，页面正常，说明本地配置OK。</p><h1 id="2-下载和安装主题"><a href="#2-下载和安装主题" class="headerlink" title="2. 下载和安装主题"></a>2. 下载和安装主题</h1><p>我使用的主题是<a href="http://blackshow.me" title="blackshow" target="_blank" rel="noopener">blackshow</a>编写的开源主题，该主题基于Freemind修改，样式替换为BOOTSTR.386.作者的博客里有提到。  </p><ol><li>安装主题：  </li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:blackshow/hexo-theme-freemind.386.git themes/freemind</span><br></pre></td></tr></table></figure><ol start="2"><li><p>安装 hexo-tag-bootstrap （可选）:  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-bootstrap --save</span><br></pre></td></tr></table></figure></li><li><p>安装 hexo-generatr-search （可选）：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure></li><li><p>创建页面：<br>Freemind 预先定义了 Categories（分类）、Tags（标签） 和 About（关于）页面，要使用它们，你需要先在你的博客的 <code>source</code> 目录中添加相应页面。<br>例如，要创建 <code>Categories</code> 页面，在终端上:  </p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /path/to/hexo/</span><br><span class="line">hexo n page categories</span><br></pre></td></tr></table></figure><p>然后编辑 <code>source/categories/</code> 下的 index.md，内容如下：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">title: Categories</span><br><span class="line">layout: categories</span><br></pre></td></tr></table></figure><ol start="5"><li>关于主题的配置和一些相关问题，具体请参考主题作者的<a href="http://blackshow.me/2015/11/25/hexo-theme-freemind-386-readme-cn/" title="说明" target="_blank" rel="noopener">说明文档</a>和原作者关于Freemind的<a href="http://www.hahack.com/codes/hexo-theme-freemind/" title="说明文档" target="_blank" rel="noopener">说明文档</a>。  </li><li>每一步如果想预览，使用一下命令，通过浏览器预览访问本地预览：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure></li></ol><h1 id="3-把本地Hexo部署到GitHub"><a href="#3-把本地Hexo部署到GitHub" class="headerlink" title="3. 把本地Hexo部署到GitHub"></a>3. 把本地Hexo部署到GitHub</h1><ol><li>注册GitHub帐号，然后登陆。  </li><li>在GitHub新建一个repository，页面的右上角有个加号，里面的New repository<br>这里的Repository Name要和前面的Owner名字相同，格式就是这样的ENNRIaaa.github.io，ENNRIaaa就是我的Owner名字，然后选择public，创建就可以了。  </li><li>编辑HEXO目录下的站点配置文件<code>_config.yml，</code>在最下面加上几行  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">      type: git</span><br><span class="line">      repository: https://github.com/ENNRIaaa/ENNRIaaa.github.io.git</span><br><span class="line">      branch: master</span><br></pre></td></tr></table></figure></li></ol><p><em>把地址替换为自己GitHub库的地址</em></p><p>然后在终端一次敲如命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean //清除public文件</span><br><span class="line">hexo g //生成静态文件</span><br><span class="line">hexo d -g //把html静态文件推送到GitHub</span><br></pre></td></tr></table></figure><p>此时可能会提示输入GitHub的用户名和密码。我看网上有教程说此步骤需要配置SSH，这个由于我没有配置，也不太懂，所以不多说明。<em>（后续会写如何配置SSH）</em></p><p>本地文件上传到GitHub之后，访问刚才的<strong>ENNRIaaa.github.io</strong>，看看是否能正常访问到你的博客。</p><h1 id="4-绑定个人域名"><a href="#4-绑定个人域名" class="headerlink" title="4. 绑定个人域名"></a>4. 绑定个人域名</h1><p>如果你不需要绑定个人域名，可以忽略这一步，博客可直接通过ENNRIaaa.github.io访问。  </p><ol><li>在你域名的解析页面添加解析，我是添加的CNAME，直接解析ENNRIaaa.github.io，有的人添加的A记录解析的博客的IP地址。  </li><li>在刚刚创建的GitHub的repository，选择Setting标签页，在下面的GitHub Pages里面有Custom domain，填上你的域名，Save就可以了。如果没有Custom domain，那就把GitHub Pages下的Source改为master branch。  </li><li>在访问绑定的域名，看看是否能正常访问到博客。</li></ol><h1 id="关于新建文章"><a href="#关于新建文章" class="headerlink" title="关于新建文章"></a>关于新建文章</h1><p>新建文章需要使用markdown文档编辑工具，我使用的是Typora，支持win/mac平台，编辑时所见即所得。</p><p>文章的头部通过这几个标签来定义标题，日期，描述，分类，标签等…（具体只能靠自己摸索）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: 小白部署HEXO到GitHub</span><br><span class="line">date: 2018-06-10 02:38:31</span><br><span class="line">description: 从傍晚到凌晨，HEXO和GitHub摸索中</span><br><span class="line">categories: 生活随笔</span><br><span class="line">tags: [hexo,GitHub]</span><br><span class="line">toc: true</span><br><span class="line">feature:</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>我从昨晚一直折腾到今天早晨，很累。</p><p>本文搭建流程都靠记忆，因为之前没有接触过这些，我也不是编程工作者，所以很多都是通过google一点一点地查，遇到问题的时候，网上给出的答案也是很零散的。</p><p>我写的这个流程可能也有一些错误或者失误的地方，遇到问题只能自己摸索了。  </p><ol><li>关于命令以及配置文件.yml对格式的要求很严谨，例如:  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type: git</span><br></pre></td></tr></table></figure><p><em>冒号：和后面的git之间都要有空格。</em></p><ol start="2"><li>每次写完文章，上传到GitHub之前都要：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo c --删除public文件夹</span><br><span class="line">hexo g --生成静态文件</span><br><span class="line">hexo d -g --上传到GitHub仓库</span><br></pre></td></tr></table></figure><ol start="3"><li><p>关于上面三个命令可参照主题作者的<a href="http://blackshow.me/2015/11/30/hexo-cheats/" target="_blank" rel="noopener">HEXO使用心得</a>这篇文章。</p><p>关于搭建和使用hexo，可以看看主题<a href="http://blackshow.me" target="_blank" rel="noopener">作者的博客</a>，他有几遍文章专门是介绍说明HEXO的使用的，很有帮助。</p></li><li><p>每次上传到GitHub之后，访问绑定的域名可能会遇到404页面，解决办法是到repository的Setting–&gt;GitHub Pages重新设置域名，再到本地hexo目录下的source，添加一个名为CNAME的文件，文件内容是自己绑定的域名，问题解决。不会新建文件的可通过新建文本文档命名为CNAME，然后编辑内容，之后保存，再删除掉该文档的后缀即可，即删除.txt。</p></li></ol><hr><p>本文到此结束。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>dpkg命令简述</title>
      <link href="/2018/05/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~dpkg%E5%91%BD%E4%BB%A4%E7%AE%80%E8%BF%B0/"/>
      <url>/2018/05/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~dpkg%E5%91%BD%E4%BB%A4%E7%AE%80%E8%BF%B0/</url>
      <content type="html"><![CDATA[<p>dpkg命令是Debian Linux系统用来安装、创建和管理软件包的实用工具。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><pre><code>dpkg(选项)(参数)</code></pre><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><pre><code>-i：安装软件包；-r：删除软件包；-P：删除软件包的同时删除其配置文件；-L：显示于软件包关联的文件；-l：显示已安装软件包列表；--unpack：解开软件包；-c：显示软件包内文件列表；--confiugre：配置软件包。</code></pre><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>Deb软件包：指定要操作的.deb软件包。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><pre><code>dpkg -i package.deb     #安装包dpkg -r package         #删除包dpkg -P package         #删除包（包括配置文件）dpkg -L package         #列出与该包关联的文件dpkg -l package         #显示该包的版本dpkg --unpack package.deb  #解开deb包的内容dpkg -S keyword            #搜索所属的包内容dpkg -l                    #列出当前已安装的包dpkg -c package.deb        #列出deb包的内容dpkg --configure package   #配置包</code></pre>]]></content>
      
      
    </entry>
    
    <entry>
      <title>linux eclipse导入windows工程后出现中文乱码解决方法</title>
      <link href="/2018/05/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2018/05/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>我今天遇到这个问题，在百度问了一遍，大多数的方法都不行</p><p>最后一个人给出的方法解决了这个问题</p><p><img src="https://images.shiguangping.com/images/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E5%9B%BE1.png" width="500px"></p><p>我在linux下的eclipse导入windows的工程文件后，会出现这样的乱码问题。</p><p>网上说，windows的中文编码方式是GBK，而linux采用的中文编码方式是UTF-8</p><p>所以把linux的编码方式改一下就可以了。</p><p>在出现乱码的文件，键盘敲入 alt+Enter，会出现一个对话框</p><p><img src="https://images.shiguangping.com/images/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E5%9B%BE2.png " width="500px"></p><p>在下面的Text file encoding，Other里面直接输入GBK，然后应用，这时正常的中文就回来了。</p><p><img src="https://images.shiguangping.com/images/linux%20eclipse%E5%AF%BC%E5%85%A5windows%E5%B7%A5%E7%A8%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/%E5%9B%BE3.png " width="500px"></p><p><strong>感谢这个大神</strong></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Linux学习之~ubuntu安装jdk及配置环境变量</title>
      <link href="/2018/05/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
      <url>/2018/05/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
      <content type="html"><![CDATA[<h3 id="1-下载jdk"><a href="#1-下载jdk" class="headerlink" title="1. 下载jdk"></a>1. 下载jdk</h3><p>前往jdk官网下载jdk，地址：<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a></p><p><img src="https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE1.png" alt="请输入图片描述"></p><p>现在已经更新到jdk10了，但是我下载解压之后发现里面没有jre文件夹，不知为何。为了不发生同样的问题，推荐下载之前的版本。</p><p><em>（文章具有一定的时效性，不代表之后也会出现同样问题）</em></p><p><img src="https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE2.png" alt="请输入图片描述"></p><p>我下载的是linux x64的版本，jdk-8u172-linux-x64.tar.gz</p><p>ubuntu系统的话，默认会下载到“下载”里面（我用的ubuntu版本是18.04LTS）</p><h3 id="2-创建文件夹，将jdk解压到该文件夹内"><a href="#2-创建文件夹，将jdk解压到该文件夹内" class="headerlink" title="2. 创建文件夹，将jdk解压到该文件夹内"></a>2. 创建文件夹，将jdk解压到该文件夹内</h3><ol><li>进到/usr/lib/文件夹下，</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/lib</span><br></pre></td></tr></table></figure><p><img src="https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE3.png" alt="请输入图片描述"></p><p>在当前文件夹输入sudo mkdir jvm创建文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir jvm</span><br></pre></td></tr></table></figure><p>此时可以用命令查看文件夹是否创建成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l</span><br></pre></td></tr></table></figure><p>看看是否有jvm这个文件夹。<br><img src="https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE4.png" alt="请输入图片描述"></p><ol start="2"><li>然后利用cd命令回到“下载”文件夹，把下载好的jdk移动到刚刚创建的jvm文件夹</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv jdk-8u172-linux-x64.tar.gz /usr/lib/jvm</span><br></pre></td></tr></table></figure><p>然后进入/usr/lib/jvm文件夹，查看该文件是否存在</p><ol start="3"><li>用tar -zxvf命令解压</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -zxvf jdk-8u172-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><p>解压完成后可以用ls -l命令查看是否解压成功</p><p><em>（注：在2步骤时，可以在下载文件夹直接将下载好的jdk解压到目标目录/usr/lib/jvm里，然后在回到jvm目录查看是否解压成功）</em></p><p>也可以直接通过命令解压到指定文件夹：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -zxvf jdk-8u172-linux-x64.tar.gz -C /usr/lib/jvm</span><br></pre></td></tr></table></figure><h3 id="3-配置环境变量"><a href="#3-配置环境变量" class="headerlink" title="3. 配置环境变量"></a>3. 配置环境变量</h3><p>编辑.bashrc文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit ~/.bashrc</span><br></pre></td></tr></table></figure><p><img src="https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE5.png" alt="请输入图片描述"></p><p>在结尾fi后面加上这四段代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_171</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br></pre></td></tr></table></figure><p><em>第一行JAVA_HOME是jdk的安装路径，这里一定不要写错。</em></p><p>编辑保存之后，在终端输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><p>使.bashrc生效，如果提示权限问题，在命令前面加上sudo</p><h3 id="4-安装完成，验证java是否配置完成"><a href="#4-安装完成，验证java是否配置完成" class="headerlink" title="4. 安装完成，验证java是否配置完成"></a>4. 安装完成，验证java是否配置完成</h3><p>在终端输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p><img src="https://images.shiguangping.com/images/Linux%E5%AD%A6%E4%B9%A0%E4%B9%8B~ubuntu%E5%AE%89%E8%A3%85jdk%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/%E5%9B%BE6.png" alt="请输入图片描述"></p><p>终端出现java的版本号信息，说明jdk环境变量配置成功。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Java学习之_开发环境的安装</title>
      <link href="/2018/04/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>/2018/04/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>Java开发需要安装JDK（Java开发工具），JDK里面包括Java编译器，和JRE（Java运行时环境），其中JRE里面又包含JVM（Java虚拟机）、Java核心类库以及相关支持文件。</p><p>所以，在开发Java程序之前，必须先安装JDK。<em>（只为了运行Java程序，只需安装JRE即可）</em> </p><h3 id="1-下载JDK及安装"><a href="#1-下载JDK及安装" class="headerlink" title="1. 下载JDK及安装"></a>1. 下载JDK及安装</h3><p>访问<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">Oracle官方下载地址</a>下载所需的JDK版本。</p><p>下载好的安装包是.exe可执行文件，直接双击下一步即可，安装路径推荐默认。</p><p><img src="https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE1.png" width="400px"></p><h3 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2. 配置环境变量"></a>2. 配置环境变量</h3><p>JDK安装完成之后，就需要给系统配置Java环境变量了。  </p><p><img src="https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE2.png" width="400px"></p><p>配置环境变量是在：桌面计算机右键属性–&gt;高级系统设置–&gt;环境变量</p><p>编辑上图中<strong>系统变量</strong>中的Path，把JDK的路径地址加入到Path中。</p><p><em>(配置环境变量目的是让操作系统知道JDK)</em></p><p>JDK的默认安装路径一般在C盘下Program Files –&gt;Java文件夹下，参考下图。</p><p><em>（路径一定要全，复制到jdk文件夹下的bin文件夹）</em></p><p><img src="https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE3.png" width="450px"></p><p>把这个路径粘贴到系统变量的Path中，每个路径之间用“ ; ”隔开，<em>注意：分号是英文输入状态下的.</em></p><p>编辑确定之后，在cmd窗口敲入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p><img src="https://images.shiguangping.com/images/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85_%E5%9B%BE5.png" width="400px"></p><p>终端提示Java版本号，说明环境变量配置成功。</p><p>也可以在cmd里敲javac或java，这时说明java环境变量已经配置成功了。 </p><p><em>如果没有配置成功，终端会显示【不是内部或外部命令，也不是可运行的程序或批处理文件】。</em> </p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>JavaSE自学之_双色球程序（随机数）</title>
      <link href="/2018/04/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%8F%8C%E8%89%B2%E7%90%83/"/>
      <url>/2018/04/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%8F%8C%E8%89%B2%E7%90%83/</url>
      <content type="html"><![CDATA[<p><em>源代码：</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Thedoublechromosphere;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.TreeSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Random random = <span class="keyword">new</span> Random();<span class="comment">// 实例化随机数对象</span></span><br><span class="line">        Set&lt;Object&gt; set = <span class="keyword">new</span> TreeSet&lt;&gt;();<span class="comment">// 实例化Set对象，Set：无序，唯一</span></span><br><span class="line">        System.out.println(<span class="string">"“双色球”中奖号码为："</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> a = random.nextInt(<span class="number">32</span>) + <span class="number">1</span>;<span class="comment">// 整型变量a接收1-33随机数红球</span></span><br><span class="line">            set.add(a);<span class="comment">// 添加随机数到set中</span></span><br><span class="line">            <span class="keyword">if</span> (set.size() &gt; <span class="number">5</span>) &#123;</span><br><span class="line">                System.out.print(set.toString());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">" "</span> + (random.nextInt(<span class="number">15</span>) + <span class="number">1</span>));<span class="comment">// 生成1-16的随机数蓝球</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"“排列五”中奖号码为："</span>);</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Integer&gt; arr = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            arr.add(random.nextInt(<span class="number">9</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(arr.toString());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>JavaSE自学之_小闹钟程序</title>
      <link href="/2018/04/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%B0%8F%E9%97%B9%E9%92%9F/"/>
      <url>/2018/04/Java%E5%AD%A6%E4%B9%A0%E4%B9%8B_%E5%B0%8F%E9%97%B9%E9%92%9F/</url>
      <content type="html"><![CDATA[<p><em>2020年4月20日—这是前年自学JavaSE时写的，有些功能不会实现的时候就会找百度，后来因为自身原因学习也就搁置了。当初刚开始自学的时候，真是精神头十足，实现某种功能感觉特别有成就感。</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.applet.Applet;</span><br><span class="line"><span class="keyword">import</span> java.applet.AudioClip;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.Timer;</span><br><span class="line"><span class="keyword">import</span> java.util.TimerTask;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这是一个简易的闹钟程序</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> liyan</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Alarm</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HMS hms = <span class="keyword">new</span> HMS();</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">"请输入闹铃响起的时间（时、分、秒）："</span>);</span><br><span class="line">        hms.h = sc.nextInt();</span><br><span class="line">        hms.m = sc.nextInt();</span><br><span class="line">        hms.s = sc.nextInt();</span><br><span class="line">        timer(hms);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getTime</span><span class="params">(HMS hms)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"HH:mm:ss"</span>);<span class="comment">// 设置时间格式</span></span><br><span class="line">        String time = sdf.format(<span class="keyword">new</span> Date());<span class="comment">// 用time接收字符串格式的系统时间</span></span><br><span class="line">        System.out.println(<span class="string">"当前时间为："</span> + time);</span><br><span class="line">        String strArr[] = time.split(<span class="string">":"</span>);<span class="comment">// 把字符串格式的时间按“时分秒”拆分并保存到数组strArr[]中</span></span><br><span class="line">        <span class="keyword">if</span> ((Integer.parseInt(strArr[<span class="number">0</span>]) == hms.h) &amp;&amp; (Integer.parseInt(strArr[<span class="number">1</span>]) == hms.m)</span><br><span class="line">                &amp;&amp; (Integer.parseInt(strArr[<span class="number">2</span>]) == hms.s)) &#123;<span class="comment">// 当系统时间与设定的响铃时间相同，执行方法体</span></span><br><span class="line">            System.out.println(<span class="string">"到点了"</span>);</span><br><span class="line">            File file1 = <span class="keyword">new</span> File(<span class="string">"src\\wav\\tonghuazhen.wav"</span>);</span><br><span class="line">            AudioClip sound1;</span><br><span class="line">            sound1 = Applet.newAudioClip(file1.toURL());</span><br><span class="line">            sound1.play();<span class="comment">// 播放wav音频</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 设置一个定时器timer,每隔1s调用一次getTime()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">timer</span><span class="params">(HMS hms)</span> </span>&#123;</span><br><span class="line">        Timer T = <span class="keyword">new</span> Timer();</span><br><span class="line">        T.schedule(<span class="keyword">new</span> TimerTask() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    getTime(hms);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">0</span>, <span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HMS</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 闹钟设定时间： 成员属性： 时：h 分：m 秒：s</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">int</span> h;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="keyword">int</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上就是我写的java简易闹钟程序的源代码，写得很简陋，但是我也已经尽力了</p>]]></content>
      
      
    </entry>
    
  
  
</search>
