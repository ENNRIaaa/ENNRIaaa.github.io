{"title":"Hexo上传本地源文件到GitHub","date":"2018-06-13T01:34:21.000Z","date_formatted":{"ll":"2018年6月13日","L":"2018/06/13","MM-DD":"06-13"},"link":"2018/06/hexo-local-source","tags":["Hexo"],"updated":"2020-09-19T13:22:14.043Z","content":"<h1 id=\"前言(可忽略不看)\">前言(可忽略不看)<a title=\"#前言(可忽略不看)\" href=\"#前言(可忽略不看)\"></a></h1>\n<p>这个问题是在我部署完HEXO博客之后就想到的，我要是换了一台电脑或者重新装系统之后，还怎么更新HEXO博客呢？</p>\n<p>我今天在网上开始寻找解决办法，上网一看才知道这是很多人很早以前就面临的问题，当然有很多大神做了解答，但是绝大多数的回答我都是看不懂的。大多数的办法是在同一个GitHub仓库创建两个分支，一个用来存放HEXO上传的静态页面，一个用来保存HEXO的本地源文件。但是对于我这个小白来说，仓库一词我都是最近才知道的，更别提分支了。还有一大堆的命令，我也看不懂所以然。</p>\n<p>最后，我还是用了这个办法，在原有的仓库基础上再创建一个分支，用来保存本地的源文件。（网上主要的还是这个办法）</p>\n<p>我试着把我的操作流程写下来，可能其中会有遗漏或者小错误，遇到问题只能自己解决了。因为我也是凭借自己理解操作的。</p>\n<h1 id=\"我为什么要把源文件上传到github呢？\">我为什么要把源文件上传到GitHub呢？<a title=\"#我为什么要把源文件上传到github呢？\" href=\"#我为什么要把源文件上传到github呢？\"></a></h1>\n<p>因为我今天在电脑上安装了Linux，所以以后敲字都要靠Linux了。</p>\n<h1 id=\"一.本地源文件上传到github：\">一.本地源文件上传到GitHub：<a title=\"#一.本地源文件上传到github：\" href=\"#一.本地源文件上传到github：\"></a></h1>\n<h2 id=\"1.提前准备\">1.提前准备<a title=\"#1.提前准备\" href=\"#1.提前准备\"></a></h2>\n<p>首先，不论是在另一台电脑上还是重新安装了系统，都要安装好Node.js和Git，还有HEXO，它们的安装方式具体参考HEXO的<a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\">说明文档</a>。</p>\n<h2 id=\"2.操作流程\">2.操作流程<a title=\"#2.操作流程\" href=\"#2.操作流程\"></a></h2>\n<p>1.登录到GitHub，打开hexo所在的仓库，在博客所在的repository新建一个分支<strong>hexo</strong>，在仓库Setting下的Branches中，设置<strong>hexo</strong>为默认分支。<br>\n2.克隆repository到本地，命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git@github.com:ENNRIaaa/shiguangping-blog.git</span><br></pre></td></tr></table></figure>\n<p>注：克隆的文件夹保存在哪取决于你所在的位置，可通过pwd命令查看你当前所在位置。<br>\n3.克隆好之后，打开本地的文件夹，默认的文件夹名字就是repository的名字，把文件夹内除了**.git<strong>文件夹之外的所有文件全部删除。注意：</strong>.git<strong>是隐藏文件夹。<br>\n4.之后把原电脑上的HEXO文件全部复制到这个文件夹下。<br>\n5.复制完之后里面应该有一个名为</strong>.gitignore**文件，如果没有的话通过终端命令创建：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch .gitignore</span><br></pre></td></tr></table></figure>\n<p>正常**.gitignore**的内容是：</p>\n<ul>\n<li>\n<p>.DS_Store</p>\n</li>\n<li>\n<p>Thumbs.db</p>\n</li>\n<li>\n<p>db.json</p>\n</li>\n<li>\n<p>*.log</p>\n</li>\n<li>\n<p>node_modules/</p>\n</li>\n<li>\n<p>public/</p>\n</li>\n<li>\n<p>.deploy*/</p>\n</li>\n</ul>\n<p>6.切换到<strong>hexo</strong>分支上，命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b hexo</span><br></pre></td></tr></table></figure>\n<p>7.提交复制过来的文件到<strong>暂存区</strong>，命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add --all</span><br></pre></td></tr></table></figure>\n<p>8.提交，命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m &quot;新建分支资源文件&quot;</span><br></pre></td></tr></table></figure>\n<p><em>引号内的内容自定义，就是一个备注。</em><br>\n9.推送分支到GitHub上，命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin hexo</span><br></pre></td></tr></table></figure>\n<p>推送成功之后，到GitHub仓库刷新一下，看看<strong>hexo</strong>分支下是否已经成功上传了本地的源文件。<br>\n到这里，本地的源文件已经上传到GitHub上，HEXO本地源文件直接使用<code>git push</code>命令就可以了，HEXO发博客的操作跟以前一样，还是这三步：<code>hexo c</code>、<code>hexo g</code>、<code>hexo d -g</code>。</p>\n<p><em>注：期间终端可能会提示需要输入一下密码啊，或者提示让你输入邮箱和用户名等，只需根据提示输入即可。<br>\n在安装完Git和node.js之后，我就把SSH密钥配置完了。设置GitHub的SSH密钥，可参考<a href=\"https://sora.red/2018/GitHub%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AESSH/\" target=\"_blank\">GitHub如何配置SSH</a>。</em></p>\n<h1 id=\"二.如果今后换电脑该如何操作\">二.如果今后换电脑该如何操作<a title=\"#二.如果今后换电脑该如何操作\" href=\"#二.如果今后换电脑该如何操作\"></a></h1>\n<p>本地源文件保存到GitHub之后，今后在其他电脑上或者重装系统后，先把<code>Git</code>、<code>Node.js</code>、<code>HEXO</code>这些基本的都安装好,（<em>注意：<strong>Hexo</strong>安装好之后不要执行<code>hexo init</code>初始化命令</em>），再把GitHub上保存HEXO源文件的<strong>hexo</strong>分支克隆到本地即可。<br>\n克隆分支的命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone -b hexo git@github.com:ENNRIaaa/shiguangping-blog.git</span><br></pre></td></tr></table></figure>\n<p><code>-b</code>后面的是分支的名称，后面替换自己仓库的链接。</p>\n<h1 id=\"结尾\">结尾<a title=\"#结尾\" href=\"#结尾\"></a></h1>\n<p>今天主要提供帮助的是CSDN博主LeonWuV,如果我的文章有一些地方看不懂，或者有错误，可参考<a href=\"https://blog.csdn.net/wxl1555/article/details/79293159\" target=\"_blank\">此博主的文章</a>。<br>\n本文写了一个多小时，终于结束了。虽然很墨迹，但是很快乐。</p>\n","prev":{"title":"在Linux中使配置alias永久生效","link":"2018/06/alise-linux"},"next":{"title":"GitHub如何配置SSH","link":"2018/06/github-ssh"},"plink":"https://www.shiguangping.com/2018/06/hexo-local-source/","toc":[{"id":"前言(可忽略不看)","title":"前言(可忽略不看)","index":"1"},{"id":"我为什么要把源文件上传到github呢？","title":"我为什么要把源文件上传到GitHub呢？","index":"2"},{"id":"一.本地源文件上传到github：","title":"一.本地源文件上传到GitHub：","index":"3","children":[{"id":"1.提前准备","title":"1.提前准备","index":"3.1"},{"id":"2.操作流程","title":"2.操作流程","index":"3.2"}]},{"id":"二.如果今后换电脑该如何操作","title":"二.如果今后换电脑该如何操作","index":"4"},{"id":"结尾","title":"结尾","index":"5"}]}